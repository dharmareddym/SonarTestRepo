ˇ◊
GC:\SonarTestRepo\sonartestapp\ShipmentTest\AzureUtils\AzureConnector.cs
	namespace

 	
Delivery


 
.

 %
DESADVAdaptorsParallelRun

 ,
.

, -
IntgTest

- 5
.

5 6

AzureUtils

6 @
{ 
public 

class 
AzureConnector 
:  
IAzureConnector! 0
{ 
public 
void !
DeleteFileInAzureBlob )
() *
string* 0
containerName1 >
,> ?
string@ F
blobPathG O
,O P
stringQ W
fileNameX `
)` a
{ 	
try 
{ 
BlobContainerClient #
	container$ -
=. /
new0 3
BlobContainerClient4 G
(G H 
ApplicationConstantsH \
.\ ]#
AZURE_CONNECTION_STRING] t
,t u
containerName	v É
+
Ñ Ö
$str
Ü â
+
ä ã
blobPath
å î
)
î ï
;
ï ñ

BlobClient 

blobClient %
=& '
	container( 1
.1 2
GetBlobClient2 ?
(? @
fileName@ H
)H I
;I J

blobClient 
. 
DeleteIfExists )
() *
)* +
;+ ,
} 
catch 
( 
	Exception 
e 
) 
{ 
Console 
. 
	WriteLine !
(! "
$str Y
,Y Z
e[ \
.\ ]
Message] d
)d e
;e f
Console 
. 
	WriteLine !
(! "
$str Y
,Y Z
e[ \
.\ ]

StackTrace] g
)g h
;h i
throw 
e 
; 
}   
}!! 	
public## 
void## %
DownloadFileFromAzureBlob## -
(##- .
string##. 4
containerName##5 B
,##B C
string##D J
blobPath##K S
,##S T
string##U [
fileName##\ d
,##d e
string##f l 
localActualFilePath	##m Ä
)
##Ä Å
{$$ 	
string%% 
responseBody%% 
=%%  !
$str%%" $
;%%$ %
try&& 
{'' 
BlobContainerClient(( #
	container(($ -
=((. /
new((0 3
BlobContainerClient((4 G
(((G H 
ApplicationConstants((H \
.((\ ]#
AZURE_CONNECTION_STRING((] t
,((t u
containerName	((v É
+
((Ñ Ö
$str
((Ü â
+
((ä ã
blobPath
((å î
)
((î ï
;
((ï ñ

BlobClient** 

blobClient** %
=**& '
	container**( 1
.**1 2
GetBlobClient**2 ?
(**? @
fileName**@ H
)**H I
;**I J
BlobDownloadInfo++  
res++! $
=++% &

blobClient++' 1
.++1 2
Download++2 :
(++: ;
)++; <
;++< =
Stream,, 
responseStream,, %
=,,& '
res,,( +
.,,+ ,
Content,,, 3
;,,3 4
using-- 
(-- 
StreamReader-- #
reader--$ *
=--+ ,
new--- 0
StreamReader--1 =
(--= >
responseStream--> L
)--L M
)--M N
{.. 
responseBody//  
=//! "
reader//# )
.//) *
	ReadToEnd//* 3
(//3 4
)//4 5
;//5 6
}00 
responseBody11 
.11 
Replace11 $
(11$ %
$str11% *
,11* +
Environment11, 7
.117 8
NewLine118 ?
)11? @
;11@ A
File22 
.22 
WriteAllText22 !
(22! "
localActualFilePath22" 5
+226 7
$str228 ;
+22< =
fileName22> F
,22F G
responseBody22H T
)22T U
;22U V
Console33 
.33 
	WriteLine33 !
(33! "
$str33" G
)33G H
;33H I
}44 
catch77 
(77 
	Exception77 
e77 
)77 
{88 
Console99 
.99 
	WriteLine99 !
(99! "
$str:: Y
,::Y Z
e::[ \
.::\ ]
Message::] d
)::d e
;::e f
Console;; 
.;; 
	WriteLine;; !
(;;! "
$str<< Y
,<<Y Z
e<<[ \
.<<\ ]

StackTrace<<] g
)<<g h
;<<h i
throw== 
e== 
;== 
}>> 
}?? 	
publicBB 
voidBB )
DownloadAllFilesFromAzureBlobBB 1
(BB1 2
stringBB2 8
containerNameBB9 F
,BBF G
stringBBH N
blobPathBBO W
,BBW X
stringBBY _
localActualFilePathBB` s
)BBs t
{CC 	
stringDD 
responseBodyDD 
=DD  !
stringDD" (
.DD( )
EmptyDD) .
;DD. /
BlobContainerClientEE 
	containerEE  )
=EE* +
newEE, /
BlobContainerClientEE0 C
(EEC D 
ApplicationConstantsEED X
.EEX Y#
AZURE_CONNECTION_STRINGEEY p
,EEp q
containerNameEEr 
)	EE Ä
;
EEÄ Å
intFF 
countFF 
=FF 
$numFF 
;FF 
tryGG 
{HH 
foreachII 
(II 
BlobItemII !
blobII" &
inII' )
	containerII* 3
.II3 4
GetBlobsII4 <
(II< =
prefixII= C
:IIC D
blobPathIIE M
)IIM N
)IIN O
{JJ 
countKK 
++KK 
;KK 
stringLL 
[LL 
]LL 
strKeysLL $
=LL% &
blobLL' +
.LL+ ,
NameLL, 0
.LL0 1
SplitLL1 6
(LL6 7
$strLL7 :
)LL: ;
;LL; <
varMM 
	lastIndexMM !
=MM" #
strKeysMM$ +
.MM+ ,
LengthMM, 2
-MM3 4
$numMM5 6
;MM6 7

BlobClientNN 

blobClientNN )
=NN* +
	containerNN, 5
.NN5 6
GetBlobClientNN6 C
(NNC D
blobNND H
.NNH I
NameNNI M
)NNM N
;NNN O
BlobDownloadInfoOO $
resOO% (
=OO) *

blobClientOO+ 5
.OO5 6
DownloadOO6 >
(OO> ?
)OO? @
;OO@ A
StreamPP 
responseStreamPP )
=PP* +
resPP, /
.PP/ 0
ContentPP0 7
;PP7 8
usingQQ 
(QQ 
StreamReaderQQ '
readerQQ( .
=QQ/ 0
newQQ1 4
StreamReaderQQ5 A
(QQA B
responseStreamQQB P
)QQP Q
)QQQ R
{RR 
responseBodySS $
=SS% &
readerSS' -
.SS- .
	ReadToEndSS. 7
(SS7 8
)SS8 9
;SS9 :
}TT 
FileUU 
.UU 
WriteAllTextUU %
(UU% &
localActualFilePathUU& 9
+UU: ;
strKeysUU< C
[UUC D
	lastIndexUUD M
]UUM N
,UUN O
responseBodyUUP \
)UU\ ]
;UU] ^
ConsoleVV 
.VV 
	WriteLineVV %
(VV% &
$"VV& (
{VV( )
DateTimeVV) 1
.VV1 2
UtcNowVV2 8
.VV8 9
ToStringVV9 A
(VVA B
$strVVB Z
,VVZ [
CultureInfoVV\ g
.VVg h
InvariantCultureVVh x
)VVx y
}VVy z
$str	VVz ç
{
VVç é
count
VVé ì
.
VVì î
ToString
VVî ú
(
VVú ù
)
VVù û
}
VVû ü
$str
VVü †
{
VV† °
strKeys
VV° ®
[
VV® ©
	lastIndex
VV© ≤
]
VV≤ ≥
}
VV≥ ¥
"
VV¥ µ
)
VVµ ∂
;
VV∂ ∑
}WW 
ConsoleXX 
.XX 
	WriteLineXX !
(XX! "
$"XX" $
{XX$ %
DateTimeXX% -
.XX- .
UtcNowXX. 4
.XX4 5
ToStringXX5 =
(XX= >
$strXX> V
,XXV W
CultureInfoXXX c
.XXc d
InvariantCultureXXd t
)XXt u
}XXu v
$strXXv 
{	XX Ä
count
XXÄ Ö
.
XXÖ Ü
ToString
XXÜ é
(
XXé è
)
XXè ê
}
XXê ë
$str
XXë ß
"
XXß ®
)
XX® ©
;
XX© ™
}YY 
catch[[ 
([[ 
	Exception[[ 
e[[ 
)[[ 
{\\ 
Console]] 
.]] 
	WriteLine]] !
(]]! "
$str^^ Y
,^^Y Z
e^^[ \
.^^\ ]
Message^^] d
)^^d e
;^^e f
Console__ 
.__ 
	WriteLine__ !
(__! "
$str`` Y
,``Y Z
e``[ \
.``\ ]

StackTrace``] g
)``g h
;``h i
throwaa 
eaa 
;aa 
}bb 
}cc 	
publicee 
voidee 1
%DownloadParallelrunFilesFromAzureBlobee 9
(ee9 :
stringee: @
containerNameeeA N
,eeN O
stringeeP V
blobPatheeW _
,ee_ `
stringeea g
localActualFilePatheeh {
,ee{ |
List	ee} Å
<
eeÅ Ç
string
eeÇ à
>
eeà â
includeDepots
eeä ó
)
eeó ò
{ff 	
stringgg 
responseBodygg 
=gg  !
stringgg" (
.gg( )
Emptygg) .
;gg. /
foreachhh 
(hh 
stringhh 
depothh !
inhh" $
includeDepotshh% 2
)hh2 3
{ii 
stringjj 
	newPrefixjj  
=jj! "
blobPathjj# +
.jj+ ,
Replacejj, 3
(jj3 4
$strjj4 9
,jj9 :
depotjj; @
)jj@ A
;jjA B
BlobContainerClientkk #
	containerkk$ -
=kk. /
newkk0 3
BlobContainerClientkk4 G
(kkG H 
ApplicationConstantskkH \
.kk\ ]#
AZURE_CONNECTION_STRINGkk] t
,kkt u
containerName	kkv É
)
kkÉ Ñ
;
kkÑ Ö
intll 
countll 
=ll 
$numll 
;ll 
trymm 
{nn 
foreachoo 
(oo 
BlobItemoo %
bloboo& *
inoo+ -
	containeroo. 7
.oo7 8
GetBlobsoo8 @
(oo@ A
prefixooA G
:ooG H
	newPrefixooI R
)ooR S
)ooS T
{pp 
countqq 
++qq 
;qq  
stringrr 
[rr 
]rr  
strKeysrr! (
=rr) *
blobrr+ /
.rr/ 0
Namerr0 4
.rr4 5
Splitrr5 :
(rr: ;
$strrr; >
)rr> ?
;rr? @
varss 
	lastIndexss %
=ss& '
strKeysss( /
.ss/ 0
Lengthss0 6
-ss7 8
$numss9 :
;ss: ;

BlobClienttt "

blobClienttt# -
=tt. /
	containertt0 9
.tt9 :
GetBlobClienttt: G
(ttG H
blobttH L
.ttL M
NamettM Q
)ttQ R
;ttR S
BlobDownloadInfouu (
resuu) ,
=uu- .

blobClientuu/ 9
.uu9 :
Downloaduu: B
(uuB C
)uuC D
;uuD E
Streamvv 
responseStreamvv -
=vv. /
resvv0 3
.vv3 4
Contentvv4 ;
;vv; <
usingww 
(ww 
StreamReaderww +
readerww, 2
=ww3 4
newww5 8
StreamReaderww9 E
(wwE F
responseStreamwwF T
)wwT U
)wwU V
{xx 
responseBodyyy (
=yy) *
readeryy+ 1
.yy1 2
	ReadToEndyy2 ;
(yy; <
)yy< =
;yy= >
}zz 
File{{ 
.{{ 
WriteAllText{{ )
({{) *
localActualFilePath{{* =
+{{> ?
strKeys{{@ G
[{{G H
	lastIndex{{H Q
]{{Q R
,{{R S
responseBody{{T `
){{` a
;{{a b
Console|| 
.||  
	WriteLine||  )
(||) *
$"||* ,
{||, -
DateTime||- 5
.||5 6
UtcNow||6 <
.||< =
ToString||= E
(||E F
$str||F ^
,||^ _
CultureInfo||` k
.||k l
InvariantCulture||l |
)||| }
}||} ~
$str	||~ ë
{
||ë í
count
||í ó
.
||ó ò
ToString
||ò †
(
||† °
)
||° ¢
}
||¢ £
$str
||£ §
{
||§ •
strKeys
||• ¨
[
||¨ ≠
	lastIndex
||≠ ∂
]
||∂ ∑
}
||∑ ∏
"
||∏ π
)
||π ∫
;
||∫ ª
}}} 
Console~~ 
.~~ 
	WriteLine~~ %
(~~% &
$"~~& (
{~~( )
DateTime~~) 1
.~~1 2
UtcNow~~2 8
.~~8 9
ToString~~9 A
(~~A B
$str~~B Z
,~~Z [
CultureInfo~~\ g
.~~g h
InvariantCulture~~h x
)~~x y
}~~y z
$str	~~z É
{
~~É Ñ
count
~~Ñ â
.
~~â ä
ToString
~~ä í
(
~~í ì
)
~~ì î
}
~~î ï
$str
~~ï ´
"
~~´ ¨
)
~~¨ ≠
;
~~≠ Æ
} 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ  
e
ÅÅ! "
)
ÅÅ" #
{
ÇÇ 
Console
ÉÉ 
.
ÉÉ 
	WriteLine
ÉÉ %
(
ÉÉ% &
$str
ÑÑ ]
,
ÑÑ] ^
e
ÑÑ_ `
.
ÑÑ` a
Message
ÑÑa h
)
ÑÑh i
;
ÑÑi j
Console
ÖÖ 
.
ÖÖ 
	WriteLine
ÖÖ %
(
ÖÖ% &
$str
ÜÜ ]
,
ÜÜ] ^
e
ÜÜ_ `
.
ÜÜ` a

StackTrace
ÜÜa k
)
ÜÜk l
;
ÜÜl m
throw
áá 
e
áá 
;
áá 
}
àà 
}
ââ 
}
ää 	
public
ãã 
void
ãã /
!DownloadAllFilesFromAzureBlobProd
ãã 5
(
ãã5 6
string
ãã6 <
containerName
ãã= J
,
ããJ K
string
ããL R
blobPath
ããS [
,
ãã[ \
string
ãã] c!
localActualFilePath
ããd w
,
ããw x
List
ããy }
<
ãã} ~
stringãã~ Ñ
>ããÑ Ö
includeDepotsããÜ ì
)ããì î
{
åå 	
string
çç 
responseBody
çç 
=
çç  !
string
çç" (
.
çç( )
Empty
çç) .
;
çç. /
foreach
éé 
(
éé 
string
éé 
depot
éé !
in
éé" $
includeDepots
éé% 2
)
éé2 3
{
èè 
string
êê 
	newPrefix
êê  
=
êê! "
blobPath
êê# +
.
êê+ ,
Replace
êê, 3
(
êê3 4
$str
êê4 9
,
êê9 :
depot
êê; @
)
êê@ A
;
êêA B!
BlobContainerClient
íí #
	container
íí$ -
=
íí. /
new
íí0 3!
BlobContainerClient
íí4 G
(
ííG H"
ApplicationConstants
ííH \
.
íí\ ]%
AZURE_CONNECTION_STRING
íí] t
,
íít u
containerNameíív É
)ííÉ Ñ
;ííÑ Ö
int
ìì 
count
ìì 
=
ìì 
$num
ìì 
;
ìì 
try
îî 
{
ïï 
foreach
ññ 
(
ññ 
BlobItem
ññ %
blob
ññ& *
in
ññ+ -
	container
ññ. 7
.
ññ7 8
GetBlobs
ññ8 @
(
ññ@ A
prefix
ññA G
:
ññG H
	newPrefix
ññI R
)
ññR S
)
ññS T
{
óó 
count
öö 
++
öö 
;
öö  
string
õõ 
[
õõ 
]
õõ  
strKeys
õõ! (
=
õõ) *
blob
õõ+ /
.
õõ/ 0
Name
õõ0 4
.
õõ4 5
Split
õõ5 :
(
õõ: ;
$str
õõ; >
)
õõ> ?
;
õõ? @
var
úú 
	lastIndex
úú %
=
úú& '
strKeys
úú( /
.
úú/ 0
Length
úú0 6
-
úú7 8
$num
úú9 :
;
úú: ;

BlobClient
ùù "

blobClient
ùù# -
=
ùù. /
	container
ùù0 9
.
ùù9 :
GetBlobClient
ùù: G
(
ùùG H
blob
ùùH L
.
ùùL M
Name
ùùM Q
)
ùùQ R
;
ùùR S
BlobDownloadInfo
ûû (
res
ûû) ,
=
ûû- .

blobClient
ûû/ 9
.
ûû9 :
Download
ûû: B
(
ûûB C
)
ûûC D
;
ûûD E
Stream
üü 
responseStream
üü -
=
üü. /
res
üü0 3
.
üü3 4
Content
üü4 ;
;
üü; <
using
†† 
(
†† 
StreamReader
†† +
reader
††, 2
=
††3 4
new
††5 8
StreamReader
††9 E
(
††E F
responseStream
††F T
)
††T U
)
††U V
{
°° 
responseBody
¢¢ (
=
¢¢) *
reader
¢¢+ 1
.
¢¢1 2
	ReadToEnd
¢¢2 ;
(
¢¢; <
)
¢¢< =
;
¢¢= >
}
££ 
File
§§ 
.
§§ 
WriteAllText
§§ )
(
§§) *!
localActualFilePath
§§* =
+
§§> ?
strKeys
§§@ G
[
§§G H
	lastIndex
§§H Q
]
§§Q R
,
§§R S
responseBody
§§T `
)
§§` a
;
§§a b
Console
•• 
.
••  
	WriteLine
••  )
(
••) *
$"
••* ,
{
••, -
DateTime
••- 5
.
••5 6
UtcNow
••6 <
.
••< =
ToString
••= E
(
••E F
$str
••F ^
,
••^ _
CultureInfo
••` k
.
••k l
InvariantCulture
••l |
)
••| }
}
••} ~
$str••~ ë
{••ë í
count••í ó
.••ó ò
ToString••ò †
(••† °
)••° ¢
}••¢ £
$str••£ §
{••§ •
strKeys••• ¨
[••¨ ≠
	lastIndex••≠ ∂
]••∂ ∑
}••∑ ∏
"••∏ π
)••π ∫
;••∫ ª
}
ßß 
Console
®® 
.
®® 
	WriteLine
®® %
(
®®% &
$"
®®& (
{
®®( )
DateTime
®®) 1
.
®®1 2
UtcNow
®®2 8
.
®®8 9
ToString
®®9 A
(
®®A B
$str
®®B Z
,
®®Z [
CultureInfo
®®\ g
.
®®g h
InvariantCulture
®®h x
)
®®x y
}
®®y z
$str®®z É
{®®É Ñ
count®®Ñ â
.®®â ä
ToString®®ä í
(®®í ì
)®®ì î
}®®î ï
$str®®ï ´
"®®´ ¨
)®®¨ ≠
;®®≠ Æ
}
©© 
catch
´´ 
(
´´ 
	Exception
´´  
e
´´! "
)
´´" #
{
¨¨ 
Console
≠≠ 
.
≠≠ 
	WriteLine
≠≠ %
(
≠≠% &
$str
ÆÆ ]
,
ÆÆ] ^
e
ÆÆ_ `
.
ÆÆ` a
Message
ÆÆa h
)
ÆÆh i
;
ÆÆi j
Console
ØØ 
.
ØØ 
	WriteLine
ØØ %
(
ØØ% &
$str
∞∞ ]
,
∞∞] ^
e
∞∞_ `
.
∞∞` a

StackTrace
∞∞a k
)
∞∞k l
;
∞∞l m
throw
±± 
e
±± 
;
±± 
}
≤≤ 
}
≥≥ 
}
¥¥ 	
public
∂∂ 
bool
∂∂ '
CheckFileExistInAzureBlob
∂∂ -
(
∂∂- .
string
∂∂. 4
containerName
∂∂5 B
,
∂∂B C
string
∂∂D J
blobPath
∂∂K S
,
∂∂S T
int
∂∂U X
waitInTimeSecs
∂∂Y g
)
∂∂g h
{
∑∑ 	
try
∏∏ 
{
ππ !
BlobContainerClient
∫∫ #
	container
∫∫$ -
=
∫∫. /
new
∫∫0 3!
BlobContainerClient
∫∫4 G
(
∫∫G H"
ApplicationConstants
∫∫H \
.
∫∫\ ]%
AZURE_CONNECTION_STRING
∫∫] t
,
∫∫t u
containerName∫∫v É
)∫∫É Ñ
;∫∫Ñ Ö
bool
ªª 
isFileExists
ªª !
=
ªª" #
false
ªª$ )
;
ªª) *
var
ºº 
watch
ºº 
=
ºº 
	Stopwatch
ºº %
.
ºº% &
StartNew
ºº& .
(
ºº. /
)
ºº/ 0
;
ºº0 1
int
ΩΩ 
elapsedSeconds
ΩΩ "
=
ΩΩ# $
$num
ΩΩ% &
;
ΩΩ& '
Console
ææ 
.
ææ 
	WriteLine
ææ !
(
ææ! "
$str
ææ" 9
)
ææ9 :
;
ææ: ;
while
øø 
(
øø 
!
øø 
isFileExists
øø $
&&
øø% '
elapsedSeconds
øø( 6
<=
øø7 9
waitInTimeSecs
øø: H
)
øøH I
{
¿¿ 
var
¡¡ 
blobList
¡¡  
=
¡¡! "
	container
¡¡# ,
.
¡¡, -
GetBlobs
¡¡- 5
(
¡¡5 6
prefix
¡¡6 <
:
¡¡< =
blobPath
¡¡> F
)
¡¡F G
;
¡¡G H
foreach
ƒƒ 
(
ƒƒ 
BlobItem
ƒƒ %
blob
ƒƒ& *
in
ƒƒ+ -
	container
ƒƒ. 7
.
ƒƒ7 8
GetBlobs
ƒƒ8 @
(
ƒƒ@ A
prefix
ƒƒA G
:
ƒƒG H
blobPath
ƒƒI Q
)
ƒƒQ R
)
ƒƒR S
{
≈≈ 
isFileExists
∆∆ $
=
∆∆% &
true
∆∆' +
;
∆∆+ ,
Console
«« 
.
««  
	WriteLine
««  )
(
««) *
$str
««* B
+
««C D
blob
««E I
.
««I J
Name
««J N
)
««N O
;
««O P
}
…… 
elapsedSeconds
   "
=
  # $
Convert
  % ,
.
  , -
ToInt16
  - 4
(
  4 5
watch
  5 :
.
  : ;
Elapsed
  ; B
.
  B C
TotalSeconds
  C O
)
  O P
;
  P Q
}
ÀÀ 
return
ÃÃ 
isFileExists
ÃÃ #
;
ÃÃ# $
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
e
ŒŒ 
)
ŒŒ 
{
œœ 
Console
–– 
.
–– 
	WriteLine
–– !
(
––! "
$str
—— Y
,
——Y Z
e
——[ \
.
——\ ]
Message
——] d
)
——d e
;
——e f
Console
““ 
.
““ 
	WriteLine
““ !
(
““! "
$str
”” Y
,
””Y Z
e
””[ \
.
””\ ]

StackTrace
””] g
)
””g h
;
””h i
throw
‘‘ 
e
‘‘ 
;
‘‘ 
}
’’ 
}
◊◊ 	
public
ŸŸ 
void
ŸŸ )
DeleteAllFilesFromAzureBlob
ŸŸ /
(
ŸŸ/ 0
string
ŸŸ0 6
containerName
ŸŸ7 D
,
ŸŸD E
string
ŸŸF L
blobPath
ŸŸM U
)
ŸŸU V
{
⁄⁄ 	!
BlobContainerClient
‹‹ 
	container
‹‹  )
=
‹‹* +
new
‹‹, /!
BlobContainerClient
‹‹0 C
(
‹‹C D"
ApplicationConstants
‹‹D X
.
‹‹X Y%
AZURE_CONNECTION_STRING
‹‹Y p
,
‹‹p q
containerName
‹‹r 
)‹‹ Ä
;‹‹Ä Å
	container
›› 
.
›› 
CreateIfNotExists
›› '
(
››' (
)
››( )
;
››) *
try
ﬂﬂ 
{
‡‡ 
foreach
‚‚ 
(
‚‚ 
BlobItem
‚‚ !
blob
‚‚" &
in
‚‚' )
	container
‚‚* 3
.
‚‚3 4
GetBlobs
‚‚4 <
(
‚‚< =
prefix
‚‚= C
:
‚‚C D
blobPath
‚‚E M
)
‚‚M N
)
‚‚N O
{
„„ 
Console
‰‰ 
.
‰‰ 
	WriteLine
‰‰ %
(
‰‰% &
$str
‰‰& 6
+
‰‰7 8
blob
‰‰9 =
.
‰‰= >
Name
‰‰> B
)
‰‰B C
;
‰‰C D
	container
ÂÂ 
.
ÂÂ 

DeleteBlob
ÂÂ (
(
ÂÂ( )
blob
ÂÂ) -
.
ÂÂ- .
Name
ÂÂ. 2
)
ÂÂ2 3
;
ÂÂ3 4
}
ÊÊ 
Console
ËË 
.
ËË 
	WriteLine
ËË !
(
ËË! "
$str
ËË" 5
)
ËË5 6
;
ËË6 7
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
e
ÎÎ 
)
ÎÎ 
{
ÏÏ 
Console
ÌÌ 
.
ÌÌ 
	WriteLine
ÌÌ !
(
ÌÌ! "
$str
ÓÓ Z
,
ÓÓZ [
e
ÓÓ\ ]
.
ÓÓ] ^
Message
ÓÓ^ e
)
ÓÓe f
;
ÓÓf g
Console
ÔÔ 
.
ÔÔ 
	WriteLine
ÔÔ !
(
ÔÔ! "
$str
 Z
,
Z [
e
\ ]
.
] ^

StackTrace
^ h
)
h i
;
i j
throw
ÒÒ 
e
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
ıı 
void
ıı #
UploadFileToAzureBlob
ıı )
(
ıı) *
string
ıı* 0
containerName
ıı1 >
,
ıı> ?
string
ıı@ F
blobPath
ııG O
,
ııO P
string
ııQ W
fileName
ııX `
,
ıı` a
string
ııb h
filepath
ııi q
)
ııq r
{
ˆˆ 	
try
˜˜ 
{
¯¯ !
BlobContainerClient
˙˙ #
	container
˙˙$ -
=
˙˙. /
new
˙˙0 3!
BlobContainerClient
˙˙4 G
(
˙˙G H"
ApplicationConstants
˙˙H \
.
˙˙\ ]%
AZURE_CONNECTION_STRING
˙˙] t
,
˙˙t u
containerName˙˙v É
)˙˙É Ñ
;˙˙Ñ Ö
	container
˚˚ 
.
˚˚ 
CreateIfNotExists
˚˚ +
(
˚˚+ ,
)
˚˚, -
;
˚˚- .
using
˛˛ 
(
˛˛ 

FileStream
˛˛ !
fs
˛˛" $
=
˛˛% &
File
˛˛' +
.
˛˛+ ,
OpenRead
˛˛, 4
(
˛˛4 5
filepath
˛˛5 =
)
˛˛= >
)
˛˛> ?
{
ˇˇ 
	container
ÄÄ 
.
ÄÄ 

UploadBlob
ÄÄ (
(
ÄÄ( )
blobPath
ÄÄ) 1
+
ÄÄ2 3
fileName
ÄÄ4 <
,
ÄÄ< =
fs
ÄÄ> @
)
ÄÄ@ A
;
ÄÄA B
}
ÅÅ 
}
ÉÉ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
e
ÖÖ 
)
ÖÖ 
{
ÜÜ 
Console
áá 
.
áá 
	WriteLine
áá !
(
áá! "
$str
àà Y
,
ààY Z
e
àà[ \
.
àà\ ]
Message
àà] d
)
ààd e
;
ààe f
Console
ââ 
.
ââ 
	WriteLine
ââ !
(
ââ! "
$str
ää Y
,
ääY Z
e
ää[ \
.
ää\ ]

StackTrace
ää] g
)
ääg h
;
ääh i
throw
ãã 
e
ãã 
;
ãã 
}
åå 
}
çç 	
}
éé 
}èè ì
HC:\SonarTestRepo\sonartestapp\ShipmentTest\AzureUtils\IAzureConnector.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6

AzureUtils6 @
{ 
public		 

	interface		 
IAzureConnector		 $
{

 
void !
DeleteFileInAzureBlob "
(" #
string# )
containerName* 7
,7 8
string9 ?
blobPath@ H
,H I
stringJ P
fileNameQ Y
)Y Z
;Z [
void %
DownloadFileFromAzureBlob &
(& '
string' -
containerName. ;
,; <
string= C
blobPathD L
,L M
stringN T
fileNameU ]
,] ^
string_ e
localActualFilePathf y
)y z
;z {
void )
DownloadAllFilesFromAzureBlob *
(* +
string+ 1
containerName2 ?
,? @
stringA G
blobPathH P
,P Q
stringR X
localActualFilePathY l
)l m
;m n
void 1
%DownloadParallelrunFilesFromAzureBlob 2
(2 3
string3 9
containerName: G
,G H
stringI O
blobPathP X
,X Y
stringZ `
localActualFilePatha t
,t u
Listv z
<z {
string	{ Å
>
Å Ç
includeDepots
É ê
)
ê ë
;
ë í
void -
!DownloadAllFilesFromAzureBlobProd .
(. /
string/ 5
containerName6 C
,C D
stringE K
blobPathL T
,T U
stringV \
localActualFilePath] p
,p q
Listr v
<v w
stringw }
>} ~
includeDepots	 å
)
å ç
;
ç é
bool %
CheckFileExistInAzureBlob &
(& '
string' -
containerName. ;
,; <
string= C
blobPathD L
,L M
intN Q
waitInTimeSecsR `
)` a
;a b
void '
DeleteAllFilesFromAzureBlob (
(( )
string) /
containerName0 =
,= >
string? E
blobPathF N
)N O
;O P
void !
UploadFileToAzureBlob "
(" #
string# )
containerName* 7
,7 8
string9 ?
blobPath@ H
,H I
stringJ P
fileNameQ Y
,Y Z
string[ a
filepathb j
)j k
;k l
} 
} ä
OC:\SonarTestRepo\sonartestapp\ShipmentTest\AzureUtils\ITricepsFileDownloader.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6

AzureUtils6 @
{ 
public 

	interface "
ITricepsFileDownloader +
{ 
void 
DownloadFiles 
( 
string !
depotId" )
=) *
null* .
). /
;/ 0
void  
ExtractExpectedFiles !
(! "
)" #
;# $
} 
}		 òà
GC:\SonarTestRepo\sonartestapp\ShipmentTest\AzureUtils\LzwInputStream.cs
	namespace 	
Ebixio
 
. 
LZW 
{ 
sealed"" 

public"" 
class"" 
LzwConstants"" $
{## 
public'' 
const'' 
int'' 
MAGIC'' 
=''  
$num''! '
;''' (
public,, 
const,, 
int,, 
MAX_BITS,, !
=,," #
$num,,$ &
;,,& '
public88 
const88 
int88 
BIT_MASK88 !
=88" #
$num88$ (
;88( )
public== 
const== 
int== 
EXTENDED_MASK== &
===' (
$num==) -
;==- .
publicCC 
constCC 
intCC 
RESERVED_MASKCC &
=CC' (
$numCC) -
;CC- .
publicII 
constII 
intII 
BLOCK_MODE_MASKII (
=II) *
$numII+ /
;II/ 0
publicNN 
constNN 
intNN 
HDR_SIZENN !
=NN" #
$numNN$ %
;NN% &
publicSS 
constSS 
intSS 
	INIT_BITSSS "
=SS# $
$numSS% &
;SS& '
LzwConstantsUU 
(UU 
)UU 
{VV 	
}WW 	
}XX 
public
ÄÄ 

class
ÄÄ 
LzwInputStream
ÄÄ 
:
ÄÄ  !
Stream
ÄÄ" (
{
ÅÅ 
byte
ÇÇ 
[
ÇÇ 
]
ÇÇ 
one
ÇÇ 
=
ÇÇ 
new
ÇÇ 
byte
ÇÇ 
[
ÇÇ 
$num
ÇÇ 
]
ÇÇ  
;
ÇÇ  !
bool
ÉÉ 
headerParsed
ÉÉ 
=
ÉÉ 
false
ÉÉ !
;
ÉÉ! "
private
ÜÜ 
const
ÜÜ 
int
ÜÜ 
	TBL_CLEAR
ÜÜ #
=
ÜÜ$ %
$num
ÜÜ& +
;
ÜÜ+ ,
private
áá 
const
áá 
int
áá 
	TBL_FIRST
áá #
=
áá$ %
	TBL_CLEAR
áá& /
+
áá0 1
$num
áá2 3
;
áá3 4
private
ââ 
int
ââ 
[
ââ 
]
ââ 
	tabPrefix
ââ 
;
ââ  
private
ää 
byte
ää 
[
ää 
]
ää 
	tabSuffix
ää  
;
ää  !
private
ãã 
int
ãã 
[
ãã 
]
ãã 
zeros
ãã 
=
ãã 
new
ãã !
int
ãã" %
[
ãã% &
$num
ãã& )
]
ãã) *
;
ãã* +
private
åå 
byte
åå 
[
åå 
]
åå 
stack
åå 
;
åå 
private
èè 
bool
èè 
	blockMode
èè 
;
èè 
private
êê 
int
êê 
nBits
êê 
;
êê 
private
ëë 
int
ëë 
maxBits
ëë 
;
ëë 
private
íí 
int
íí 

maxMaxCode
íí 
;
íí 
private
ìì 
int
ìì 
maxCode
ìì 
;
ìì 
private
îî 
int
îî 
bitMask
îî 
;
îî 
private
ïï 
int
ïï 
oldCode
ïï 
;
ïï 
private
ññ 
byte
ññ 
finChar
ññ 
;
ññ 
private
óó 
int
óó 
stackP
óó 
;
óó 
private
òò 
int
òò 
freeEnt
òò 
;
òò 
private
õõ 
byte
õõ 
[
õõ 
]
õõ 
data
õõ 
=
õõ 
new
õõ !
byte
õõ" &
[
õõ& '
$num
õõ' ,
]
õõ, -
;
õõ- .
private
úú 
int
úú 
bitPos
úú 
=
úú 
$num
úú 
,
úú 
end
úú  #
=
úú$ %
$num
úú& '
,
úú' (
got
úú) ,
=
úú- .
$num
úú/ 0
;
úú0 1
private
ùù 
bool
ùù 
eof
ùù 
=
ùù 
false
ùù  
;
ùù  !
private
ûû 
const
ûû 
int
ûû 
EXTRA
ûû 
=
ûû  !
$num
ûû" $
;
ûû$ %
public
¶¶ 
LzwInputStream
¶¶ 
(
¶¶ 
Stream
¶¶ $
baseInputStream
¶¶% 4
)
¶¶4 5
{
ßß 	
this
®® 
.
®® 
baseInputStream
®®  
=
®®! "
baseInputStream
®®# 2
;
®®2 3
}
©© 	
public
ØØ 
override
ØØ 
int
ØØ 
ReadByte
ØØ $
(
ØØ$ %
)
ØØ% &
{
∞∞ 	
int
±± 
b
±± 
=
±± 
Read
±± 
(
±± 
one
±± 
,
±± 
$num
±± 
,
±±  
$num
±±! "
)
±±" #
;
±±# $
if
≤≤ 
(
≤≤ 
b
≤≤ 
==
≤≤ 
$num
≤≤ 
)
≤≤ 
return
≥≥ 
(
≥≥ 
one
≥≥ 
[
≥≥ 
$num
≥≥ 
]
≥≥ 
&
≥≥  
$num
≥≥! %
)
≥≥% &
;
≥≥& '
else
¥¥ 
return
µµ 
-
µµ 
$num
µµ 
;
µµ 
}
∂∂ 	
private
ææ 
int
ææ 
ResetBuf
ææ 
(
ææ 
int
ææ  
bitPos
ææ! '
)
ææ' (
{
øø 	
int
¿¿ 
pos
¿¿ 
=
¿¿ 
bitPos
¿¿ 
>>
¿¿ 
$num
¿¿  !
;
¿¿! "
Array
¡¡ 
.
¡¡ 
Copy
¡¡ 
(
¡¡ 
data
¡¡ 
,
¡¡ 
pos
¡¡  
,
¡¡  !
data
¡¡" &
,
¡¡& '
$num
¡¡( )
,
¡¡) *
end
¡¡+ .
-
¡¡/ 0
pos
¡¡1 4
)
¡¡4 5
;
¡¡5 6
end
¬¬ 
-=
¬¬ 
pos
¬¬ 
;
¬¬ 
return
√√ 
$num
√√ 
;
√√ 
}
ƒƒ 	
private
«« 
void
«« 
Fill
«« 
(
«« 
)
«« 
{
»» 	
got
…… 
=
…… 
baseInputStream
…… !
.
……! "
Read
……" &
(
……& '
data
……' +
,
……+ ,
end
……- 0
,
……0 1
data
……2 6
.
……6 7
Length
……7 =
-
……> ?
$num
……@ A
-
……B C
end
……D G
)
……G H
;
……H I
if
   
(
   
got
   
>
   
$num
   
)
   
end
   
+=
   
got
    #
;
  # $
}
ÀÀ 	
private
ŒŒ 
void
ŒŒ 
ParseHeader
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
{
œœ 	
headerParsed
–– 
=
–– 
true
–– 
;
––  
byte
““ 
[
““ 
]
““ 
hdr
““ 
=
““ 
new
““ 
byte
““ !
[
““! "
LzwConstants
““" .
.
““. /
HDR_SIZE
““/ 7
]
““7 8
;
““8 9
int
‘‘ 
result
‘‘ 
=
‘‘ 
baseInputStream
‘‘ (
.
‘‘( )
Read
‘‘) -
(
‘‘- .
hdr
‘‘. 1
,
‘‘1 2
$num
‘‘3 4
,
‘‘4 5
hdr
‘‘6 9
.
‘‘9 :
Length
‘‘: @
)
‘‘@ A
;
‘‘A B
if
◊◊ 
(
◊◊ 
result
◊◊ 
<
◊◊ 
$num
◊◊ 
)
◊◊ 
throw
◊◊ !
new
◊◊" %"
ApplicationException
◊◊& :
(
◊◊: ;
$str
◊◊; V
)
◊◊V W
;
◊◊W X
if
ÿÿ 
(
ÿÿ 
hdr
ÿÿ 
[
ÿÿ 
$num
ÿÿ 
]
ÿÿ 
!=
ÿÿ 
(
ÿÿ 
LzwConstants
ÿÿ '
.
ÿÿ' (
MAGIC
ÿÿ( -
>>
ÿÿ. 0
$num
ÿÿ1 2
)
ÿÿ2 3
||
ÿÿ4 6
hdr
ÿÿ7 :
[
ÿÿ: ;
$num
ÿÿ; <
]
ÿÿ< =
!=
ÿÿ> @
(
ÿÿA B
LzwConstants
ÿÿB N
.
ÿÿN O
MAGIC
ÿÿO T
&
ÿÿU V
$num
ÿÿW [
)
ÿÿ[ \
)
ÿÿ\ ]
{
ŸŸ 
throw
⁄⁄ 
new
⁄⁄ "
ApplicationException
⁄⁄ .
(
⁄⁄. /
String
⁄⁄/ 5
.
⁄⁄5 6
Format
⁄⁄6 <
(
⁄⁄< =
$str
€€ R
,
€€R S
hdr
‹‹ 
[
‹‹ 
$num
‹‹ 
]
‹‹ 
,
‹‹ 
hdr
‹‹ 
[
‹‹  
$num
‹‹  !
]
‹‹! "
)
‹‹" #
)
‹‹# $
;
‹‹$ %
}
›› 
	blockMode
‡‡ 
=
‡‡ 
(
‡‡ 
hdr
‡‡ 
[
‡‡ 
$num
‡‡ 
]
‡‡ 
&
‡‡  !
LzwConstants
‡‡" .
.
‡‡. /
BLOCK_MODE_MASK
‡‡/ >
)
‡‡> ?
>
‡‡@ A
$num
‡‡B C
;
‡‡C D
maxBits
·· 
=
·· 
hdr
·· 
[
·· 
$num
·· 
]
·· 
&
·· 
LzwConstants
·· +
.
··+ ,
BIT_MASK
··, 4
;
··4 5
if
„„ 
(
„„ 
maxBits
„„ 
>
„„ 
LzwConstants
„„ &
.
„„& '
MAX_BITS
„„' /
)
„„/ 0
{
‰‰ 
throw
ÂÂ 
new
ÂÂ "
ApplicationException
ÂÂ .
(
ÂÂ. /
$str
ÂÂ/ H
+
ÂÂI J
maxBits
ÂÂK R
+
ÂÂS T
$str
ÊÊ ?
+
ÊÊ@ A
LzwConstants
ÁÁ  
.
ÁÁ  !
MAX_BITS
ÁÁ! )
+
ÁÁ* +
$str
ÁÁ, 4
)
ÁÁ4 5
;
ÁÁ5 6
}
ËË 
if
ÍÍ 
(
ÍÍ 
(
ÍÍ 
hdr
ÍÍ 
[
ÍÍ 
$num
ÍÍ 
]
ÍÍ 
&
ÍÍ 
LzwConstants
ÍÍ &
.
ÍÍ& '
RESERVED_MASK
ÍÍ' 4
)
ÍÍ4 5
>
ÍÍ6 7
$num
ÍÍ8 9
)
ÍÍ9 :
{
ÎÎ 
throw
ÏÏ 
new
ÏÏ "
ApplicationException
ÏÏ .
(
ÏÏ. /
$str
ÏÏ/ T
)
ÏÏT U
;
ÏÏU V
}
ÌÌ 

maxMaxCode
 
=
 
$num
 
<<
 
maxBits
 %
;
% &
nBits
ÒÒ 
=
ÒÒ 
LzwConstants
ÒÒ  
.
ÒÒ  !
	INIT_BITS
ÒÒ! *
;
ÒÒ* +
maxCode
ÚÚ 
=
ÚÚ 
(
ÚÚ 
$num
ÚÚ 
<<
ÚÚ 
nBits
ÚÚ !
)
ÚÚ! "
-
ÚÚ# $
$num
ÚÚ% &
;
ÚÚ& '
bitMask
ÛÛ 
=
ÛÛ 
maxCode
ÛÛ 
;
ÛÛ 
oldCode
ÙÙ 
=
ÙÙ 
-
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
finChar
ıı 
=
ıı 
$num
ıı 
;
ıı 
freeEnt
ˆˆ 
=
ˆˆ 
	blockMode
ˆˆ 
?
ˆˆ  !
	TBL_FIRST
ˆˆ" +
:
ˆˆ, -
$num
ˆˆ. 1
;
ˆˆ1 2
	tabPrefix
¯¯ 
=
¯¯ 
new
¯¯ 
int
¯¯ 
[
¯¯  
$num
¯¯  !
<<
¯¯" $
maxBits
¯¯% ,
]
¯¯, -
;
¯¯- .
	tabSuffix
˘˘ 
=
˘˘ 
new
˘˘ 
byte
˘˘  
[
˘˘  !
$num
˘˘! "
<<
˘˘# %
maxBits
˘˘& -
]
˘˘- .
;
˘˘. /
stack
˙˙ 
=
˙˙ 
new
˙˙ 
byte
˙˙ 
[
˙˙ 
$num
˙˙ 
<<
˙˙ !
maxBits
˙˙" )
]
˙˙) *
;
˙˙* +
stackP
˚˚ 
=
˚˚ 
stack
˚˚ 
.
˚˚ 
Length
˚˚ !
;
˚˚! "
for
˝˝ 
(
˝˝ 
int
˝˝ 
idx
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
idx
˝˝  #
>=
˝˝$ &
$num
˝˝' (
;
˝˝( )
idx
˝˝* -
--
˝˝- /
)
˝˝/ 0
	tabSuffix
˛˛ 
[
˛˛ 
idx
˛˛ 
]
˛˛ 
=
˛˛  
(
˛˛! "
byte
˛˛" &
)
˛˛& '
idx
˛˛' *
;
˛˛* +
}
ˇˇ 	
public
êê 
override
êê 
int
êê 
Read
êê  
(
êê  !
byte
êê! %
[
êê% &
]
êê& '
buffer
êê( .
,
êê. /
int
êê0 3
offset
êê4 :
,
êê: ;
int
êê< ?
count
êê@ E
)
êêE F
{
ëë 	
if
íí 
(
íí 
!
íí 
headerParsed
íí 
)
íí 
ParseHeader
íí *
(
íí* +
)
íí+ ,
;
íí, -
if
îî 
(
îî 
eof
îî 
)
îî 
return
îî 
-
îî 
$num
îî 
;
îî 
int
ïï 
start
ïï 
=
ïï 
offset
ïï 
;
ïï 
int
öö 
[
öö 
]
öö 

lTabPrefix
öö 
=
öö 
	tabPrefix
öö (
;
öö( )
byte
õõ 
[
õõ 
]
õõ 

lTabSuffix
õõ 
=
õõ 
	tabSuffix
õõ  )
;
õõ) *
byte
úú 
[
úú 
]
úú 
lStack
úú 
=
úú 
stack
úú !
;
úú! "
int
ùù 
lNBits
ùù 
=
ùù 
nBits
ùù 
;
ùù 
int
ûû 
lMaxCode
ûû 
=
ûû 
maxCode
ûû "
;
ûû" #
int
üü 
lMaxMaxCode
üü 
=
üü 

maxMaxCode
üü (
;
üü( )
int
†† 
lBitMask
†† 
=
†† 
bitMask
†† "
;
††" #
int
°° 
lOldCode
°° 
=
°° 
oldCode
°° "
;
°°" #
byte
¢¢ 
lFinChar
¢¢ 
=
¢¢ 
finChar
¢¢ #
;
¢¢# $
int
££ 
lStackP
££ 
=
££ 
stackP
££  
;
££  !
int
§§ 
lFreeEnt
§§ 
=
§§ 
freeEnt
§§ "
;
§§" #
byte
•• 
[
•• 
]
•• 
lData
•• 
=
•• 
data
•• 
;
••  
int
¶¶ 
lBitPos
¶¶ 
=
¶¶ 
bitPos
¶¶  
;
¶¶  !
int
™™ 
sSize
™™ 
=
™™ 
lStack
™™ 
.
™™ 
Length
™™ %
-
™™& '
lStackP
™™( /
;
™™/ 0
if
´´ 
(
´´ 
sSize
´´ 
>
´´ 
$num
´´ 
)
´´ 
{
¨¨ 
int
≠≠ 
num
≠≠ 
=
≠≠ 
(
≠≠ 
sSize
≠≠  
>=
≠≠! #
count
≠≠$ )
)
≠≠) *
?
≠≠+ ,
count
≠≠- 2
:
≠≠3 4
sSize
≠≠5 :
;
≠≠: ;
Array
ÆÆ 
.
ÆÆ 
Copy
ÆÆ 
(
ÆÆ 
lStack
ÆÆ !
,
ÆÆ! "
lStackP
ÆÆ# *
,
ÆÆ* +
buffer
ÆÆ, 2
,
ÆÆ2 3
offset
ÆÆ4 :
,
ÆÆ: ;
num
ÆÆ< ?
)
ÆÆ? @
;
ÆÆ@ A
offset
ØØ 
+=
ØØ 
num
ØØ 
;
ØØ 
count
∞∞ 
-=
∞∞ 
num
∞∞ 
;
∞∞ 
lStackP
±± 
+=
±± 
num
±± 
;
±± 
}
≤≤ 
if
¥¥ 
(
¥¥ 
count
¥¥ 
==
¥¥ 
$num
¥¥ 
)
¥¥ 
{
µµ 
stackP
∂∂ 
=
∂∂ 
lStackP
∂∂  
;
∂∂  !
return
∑∑ 
offset
∑∑ 
-
∑∑ 
start
∑∑  %
;
∑∑% &
}
∏∏ 
MainLoop
ºº 
:
ºº 
do
ºº 
{
ΩΩ 
if
ææ 
(
ææ 
end
ææ 
<
ææ 
EXTRA
ææ 
)
ææ  
Fill
ææ! %
(
ææ% &
)
ææ& '
;
ææ' (
int
¿¿ 
bitIn
¿¿ 
=
¿¿ 
(
¿¿ 
got
¿¿  
>
¿¿! "
$num
¿¿# $
)
¿¿$ %
?
¿¿& '
(
¿¿( )
end
¿¿) ,
-
¿¿- .
end
¿¿/ 2
%
¿¿3 4
lNBits
¿¿5 ;
)
¿¿; <
<<
¿¿= ?
$num
¿¿@ A
:
¿¿B C
(
¡¡( )
end
¡¡) ,
<<
¡¡- /
$num
¡¡0 1
)
¡¡1 2
-
¡¡3 4
(
¡¡5 6
lNBits
¡¡6 <
-
¡¡= >
$num
¡¡? @
)
¡¡@ A
;
¡¡A B
while
√√ 
(
√√ 
lBitPos
√√ 
<
√√  
bitIn
√√! &
)
√√& '
{
ƒƒ 
if
«« 
(
«« 
count
«« 
==
««  
$num
««! "
)
««" #
{
»» 
nBits
…… 
=
…… 
lNBits
……  &
;
……& '
maxCode
   
=
    !
lMaxCode
  " *
;
  * +

maxMaxCode
ÀÀ "
=
ÀÀ# $
lMaxMaxCode
ÀÀ% 0
;
ÀÀ0 1
bitMask
ÃÃ 
=
ÃÃ  !
lBitMask
ÃÃ" *
;
ÃÃ* +
oldCode
ÕÕ 
=
ÕÕ  !
lOldCode
ÕÕ" *
;
ÕÕ* +
finChar
ŒŒ 
=
ŒŒ  !
lFinChar
ŒŒ" *
;
ŒŒ* +
stackP
œœ 
=
œœ  
lStackP
œœ! (
;
œœ( )
freeEnt
–– 
=
––  !
lFreeEnt
––" *
;
––* +
bitPos
—— 
=
——  
lBitPos
——! (
;
——( )
return
”” 
offset
”” %
-
””& '
start
””( -
;
””- .
}
‘‘ 
if
◊◊ 
(
◊◊ 
lFreeEnt
◊◊  
>
◊◊! "
lMaxCode
◊◊# +
)
◊◊+ ,
{
ÿÿ 
int
ŸŸ 
nBytes
ŸŸ "
=
ŸŸ# $
lNBits
ŸŸ% +
<<
ŸŸ, .
$num
ŸŸ/ 0
;
ŸŸ0 1
lBitPos
⁄⁄ 
=
⁄⁄  !
(
⁄⁄" #
lBitPos
⁄⁄# *
-
⁄⁄+ ,
$num
⁄⁄- .
)
⁄⁄. /
+
⁄⁄0 1
nBytes
€€ 
-
€€  
(
€€! "
lBitPos
€€" )
-
€€* +
$num
€€, -
+
€€. /
nBytes
€€0 6
)
€€6 7
%
€€8 9
nBytes
€€: @
;
€€@ A
lNBits
›› 
++
››  
;
››  !
lMaxCode
ﬁﬁ  
=
ﬁﬁ! "
(
ﬁﬁ# $
lNBits
ﬁﬁ$ *
==
ﬁﬁ+ -
maxBits
ﬁﬁ. 5
)
ﬁﬁ5 6
?
ﬁﬁ7 8
lMaxMaxCode
ﬁﬁ9 D
:
ﬁﬁE F
(
ﬂﬂ8 9
$num
ﬂﬂ9 :
<<
ﬂﬂ; =
lNBits
ﬂﬂ> D
)
ﬂﬂD E
-
ﬂﬂF G
$num
ﬂﬂH I
;
ﬂﬂI J
lBitMask
··  
=
··! "
(
··# $
$num
··$ %
<<
··& (
lNBits
··) /
)
··/ 0
-
··1 2
$num
··3 4
;
··4 5
lBitPos
‚‚ 
=
‚‚  !
ResetBuf
‚‚" *
(
‚‚* +
lBitPos
‚‚+ 2
)
‚‚2 3
;
‚‚3 4
goto
„„ 
MainLoop
„„ %
;
„„% &
}
‰‰ 
int
ÈÈ 
pos
ÈÈ 
=
ÈÈ 
lBitPos
ÈÈ %
>>
ÈÈ& (
$num
ÈÈ) *
;
ÈÈ* +
int
ÍÍ 
code
ÍÍ 
=
ÍÍ 
(
ÍÍ  
(
ÍÍ  !
(
ÍÍ! "
lData
ÍÍ" '
[
ÍÍ' (
pos
ÍÍ( +
]
ÍÍ+ ,
&
ÍÍ- .
$num
ÍÍ/ 3
)
ÍÍ3 4
|
ÍÍ5 6
(
ÎÎ 
(
ÎÎ 
lData
ÎÎ 
[
ÎÎ  
pos
ÎÎ  #
+
ÎÎ$ %
$num
ÎÎ& '
]
ÎÎ' (
&
ÎÎ) *
$num
ÎÎ+ /
)
ÎÎ/ 0
<<
ÎÎ1 3
$num
ÎÎ4 5
)
ÎÎ5 6
|
ÎÎ7 8
(
ÏÏ 
(
ÏÏ 
lData
ÏÏ 
[
ÏÏ  
pos
ÏÏ  #
+
ÏÏ$ %
$num
ÏÏ& '
]
ÏÏ' (
&
ÏÏ) *
$num
ÏÏ+ /
)
ÏÏ/ 0
<<
ÏÏ1 3
$num
ÏÏ4 6
)
ÏÏ6 7
)
ÏÏ7 8
>>
ÏÏ9 ;
(
ÌÌ 
lBitPos
ÌÌ  
&
ÌÌ! "
$num
ÌÌ# &
)
ÌÌ& '
)
ÌÌ' (
&
ÌÌ) *
lBitMask
ÌÌ+ 3
;
ÌÌ3 4
lBitPos
ÔÔ 
+=
ÔÔ 
lNBits
ÔÔ %
;
ÔÔ% &
if
ÚÚ 
(
ÚÚ 
lOldCode
ÚÚ  
==
ÚÚ! #
-
ÚÚ$ %
$num
ÚÚ% &
)
ÚÚ& '
{
ÛÛ 
if
ÙÙ 
(
ÙÙ 
code
ÙÙ  
>=
ÙÙ! #
$num
ÙÙ$ '
)
ÙÙ' (
throw
ÙÙ) .
new
ÙÙ/ 2"
ApplicationException
ÙÙ3 G
(
ÙÙG H
$str
ÙÙH Y
+
ÙÙZ [
code
ÙÙ\ `
+
ÙÙa b
$str
ÙÙc k
)
ÙÙk l
;
ÙÙl m
lFinChar
ˆˆ  
=
ˆˆ! "
(
ˆˆ# $
byte
ˆˆ$ (
)
ˆˆ( )
(
ˆˆ) *
lOldCode
ˆˆ* 2
=
ˆˆ3 4
code
ˆˆ5 9
)
ˆˆ9 :
;
ˆˆ: ;
buffer
˜˜ 
[
˜˜ 
offset
˜˜ %
++
˜˜% '
]
˜˜' (
=
˜˜) *
lFinChar
˜˜+ 3
;
˜˜3 4
count
¯¯ 
--
¯¯ 
;
¯¯  
continue
˘˘  
;
˘˘  !
}
˙˙ 
if
˝˝ 
(
˝˝ 
code
˝˝ 
==
˝˝ 
	TBL_CLEAR
˝˝  )
&&
˝˝* ,
	blockMode
˝˝- 6
)
˝˝6 7
{
˛˛ 
Array
ˇˇ 
.
ˇˇ 
Copy
ˇˇ "
(
ˇˇ" #
zeros
ˇˇ# (
,
ˇˇ( )
$num
ˇˇ* +
,
ˇˇ+ ,

lTabPrefix
ˇˇ- 7
,
ˇˇ7 8
$num
ˇˇ9 :
,
ˇˇ: ;
zeros
ˇˇ< A
.
ˇˇA B
Length
ˇˇB H
)
ˇˇH I
;
ˇˇI J
lFreeEnt
ÄÄ  
=
ÄÄ! "
	TBL_FIRST
ÄÄ# ,
-
ÄÄ- .
$num
ÄÄ/ 0
;
ÄÄ0 1
int
ÇÇ 
nBytes
ÇÇ "
=
ÇÇ# $
lNBits
ÇÇ% +
<<
ÇÇ, .
$num
ÇÇ/ 0
;
ÇÇ0 1
lBitPos
ÉÉ 
=
ÉÉ  !
(
ÉÉ" #
lBitPos
ÉÉ# *
-
ÉÉ+ ,
$num
ÉÉ- .
)
ÉÉ. /
+
ÉÉ0 1
nBytes
ÉÉ2 8
-
ÉÉ9 :
(
ÉÉ; <
lBitPos
ÉÉ< C
-
ÉÉD E
$num
ÉÉF G
+
ÉÉH I
nBytes
ÉÉJ P
)
ÉÉP Q
%
ÉÉR S
nBytes
ÉÉT Z
;
ÉÉZ [
lNBits
ÑÑ 
=
ÑÑ  
LzwConstants
ÑÑ! -
.
ÑÑ- .
	INIT_BITS
ÑÑ. 7
;
ÑÑ7 8
lMaxCode
ÖÖ  
=
ÖÖ! "
(
ÖÖ# $
$num
ÖÖ$ %
<<
ÖÖ& (
lNBits
ÖÖ) /
)
ÖÖ/ 0
-
ÖÖ1 2
$num
ÖÖ3 4
;
ÖÖ4 5
lBitMask
ÜÜ  
=
ÜÜ! "
lMaxCode
ÜÜ# +
;
ÜÜ+ ,
lBitPos
ää 
=
ää  !
ResetBuf
ää" *
(
ää* +
lBitPos
ää+ 2
)
ää2 3
;
ää3 4
goto
ãã 
MainLoop
ãã %
;
ãã% &
}
åå 
int
ëë 
inCode
ëë 
=
ëë  
code
ëë! %
;
ëë% &
lStackP
íí 
=
íí 
lStack
íí $
.
íí$ %
Length
íí% +
;
íí+ ,
if
ïï 
(
ïï 
code
ïï 
>=
ïï 
lFreeEnt
ïï  (
)
ïï( )
{
ññ 
if
óó 
(
óó 
code
óó  
>
óó! "
lFreeEnt
óó# +
)
óó+ ,
{
òò 
throw
ôô !
new
ôô" %"
ApplicationException
ôô& :
(
ôô: ;
$str
ôô; Q
+
ôôR S
code
ôôT X
+
ôôY Z
$str
öö  ,
+
öö- .
lFreeEnt
öö/ 7
)
öö7 8
;
öö8 9
}
õõ 
lStack
ùù 
[
ùù 
--
ùù !
lStackP
ùù! (
]
ùù( )
=
ùù* +
lFinChar
ùù, 4
;
ùù4 5
code
ûû 
=
ûû 
lOldCode
ûû '
;
ûû' (
}
üü 
while
¢¢ 
(
¢¢ 
code
¢¢ 
>=
¢¢  "
$num
¢¢# &
)
¢¢& '
{
££ 
lStack
§§ 
[
§§ 
--
§§ !
lStackP
§§! (
]
§§( )
=
§§* +

lTabSuffix
§§, 6
[
§§6 7
code
§§7 ;
]
§§; <
;
§§< =
code
•• 
=
•• 

lTabPrefix
•• )
[
••) *
code
••* .
]
••. /
;
••/ 0
}
¶¶ 
lFinChar
®® 
=
®® 

lTabSuffix
®® )
[
®®) *
code
®®* .
]
®®. /
;
®®/ 0
buffer
©© 
[
©© 
offset
©© !
++
©©! #
]
©©# $
=
©©% &
lFinChar
©©' /
;
©©/ 0
count
™™ 
--
™™ 
;
™™ 
sSize
≠≠ 
=
≠≠ 
lStack
≠≠ "
.
≠≠" #
Length
≠≠# )
-
≠≠* +
lStackP
≠≠, 3
;
≠≠3 4
int
ÆÆ 
num
ÆÆ 
=
ÆÆ 
(
ÆÆ 
sSize
ÆÆ $
>=
ÆÆ% '
count
ÆÆ( -
)
ÆÆ- .
?
ÆÆ/ 0
count
ÆÆ1 6
:
ÆÆ7 8
sSize
ÆÆ9 >
;
ÆÆ> ?
Array
ØØ 
.
ØØ 
Copy
ØØ 
(
ØØ 
lStack
ØØ %
,
ØØ% &
lStackP
ØØ' .
,
ØØ. /
buffer
ØØ0 6
,
ØØ6 7
offset
ØØ8 >
,
ØØ> ?
num
ØØ@ C
)
ØØC D
;
ØØD E
offset
∞∞ 
+=
∞∞ 
num
∞∞ !
;
∞∞! "
count
±± 
-=
±± 
num
±±  
;
±±  !
lStackP
≤≤ 
+=
≤≤ 
num
≤≤ "
;
≤≤" #
if
∑∑ 
(
∑∑ 
lFreeEnt
∑∑  
<
∑∑! "
lMaxMaxCode
∑∑# .
)
∑∑. /
{
∏∏ 

lTabPrefix
ππ "
[
ππ" #
lFreeEnt
ππ# +
]
ππ+ ,
=
ππ- .
lOldCode
ππ/ 7
;
ππ7 8

lTabSuffix
∫∫ "
[
∫∫" #
lFreeEnt
∫∫# +
]
∫∫+ ,
=
∫∫- .
lFinChar
∫∫/ 7
;
∫∫7 8
lFreeEnt
ªª  
++
ªª  "
;
ªª" #
}
ºº 
lOldCode
øø 
=
øø 
inCode
øø %
;
øø% &
if
¬¬ 
(
¬¬ 
count
¬¬ 
==
¬¬  
$num
¬¬! "
)
¬¬" #
{
√√ 
nBits
ƒƒ 
=
ƒƒ 
lNBits
ƒƒ  &
;
ƒƒ& '
maxCode
≈≈ 
=
≈≈  !
lMaxCode
≈≈" *
;
≈≈* +
bitMask
∆∆ 
=
∆∆  !
lBitMask
∆∆" *
;
∆∆* +
oldCode
«« 
=
««  !
lOldCode
««" *
;
««* +
finChar
»» 
=
»»  !
lFinChar
»»" *
;
»»* +
stackP
…… 
=
……  
lStackP
……! (
;
……( )
freeEnt
   
=
    !
lFreeEnt
  " *
;
  * +
bitPos
ÀÀ 
=
ÀÀ  
lBitPos
ÀÀ! (
;
ÀÀ( )
return
ÕÕ 
offset
ÕÕ %
-
ÕÕ& '
start
ÕÕ( -
;
ÕÕ- .
}
ŒŒ 
}
–– 
lBitPos
““ 
=
““ 
ResetBuf
““ "
(
““" #
lBitPos
““# *
)
““* +
;
““+ ,
}
‘‘ 
while
‘‘ 
(
‘‘ 
got
‘‘ 
>
‘‘ 
$num
‘‘ 
)
‘‘ 
;
‘‘ 
nBits
÷÷ 
=
÷÷ 
lNBits
÷÷ 
;
÷÷ 
maxCode
◊◊ 
=
◊◊ 
lMaxCode
◊◊ 
;
◊◊ 
bitMask
ÿÿ 
=
ÿÿ 
lBitMask
ÿÿ 
;
ÿÿ 
oldCode
ŸŸ 
=
ŸŸ 
lOldCode
ŸŸ 
;
ŸŸ 
finChar
⁄⁄ 
=
⁄⁄ 
lFinChar
⁄⁄ 
;
⁄⁄ 
stackP
€€ 
=
€€ 
lStackP
€€ 
;
€€ 
freeEnt
‹‹ 
=
‹‹ 
lFreeEnt
‹‹ 
;
‹‹ 
bitPos
›› 
=
›› 
lBitPos
›› 
;
›› 
eof
ﬂﬂ 
=
ﬂﬂ 
true
ﬂﬂ 
;
ﬂﬂ 
return
‡‡ 
offset
‡‡ 
-
‡‡ 
start
‡‡ !
;
‡‡! "
}
·· 	
public
ÁÁ 
override
ÁÁ 
bool
ÁÁ 
CanRead
ÁÁ $
{
ËË 	
get
ÈÈ 
{
ÍÍ 
return
ÎÎ 
baseInputStream
ÎÎ &
.
ÎÎ& '
CanRead
ÎÎ' .
;
ÎÎ. /
}
ÏÏ 
}
ÌÌ 	
public
ÚÚ 
override
ÚÚ 
bool
ÚÚ 
CanSeek
ÚÚ $
{
ÛÛ 	
get
ÙÙ 
{
ıı 
return
ˆˆ 
false
ˆˆ 
;
ˆˆ 
}
˜˜ 
}
¯¯ 	
public
˝˝ 
override
˝˝ 
bool
˝˝ 
CanWrite
˝˝ %
{
˛˛ 	
get
ˇˇ 
{
ÄÄ 
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}
ÉÉ 	
public
ää 
override
ää 
long
ää 
Length
ää #
{
ãã 	
get
åå 
{
çç 
throw
éé 
new
éé #
NotSupportedException
éé /
(
éé/ 0
$str
éé0 U
)
ééU V
;
ééV W
}
èè 
}
êê 	
public
óó 
override
óó 
long
óó 
Position
óó %
{
òò 	
get
ôô 
{
öö 
return
õõ 
baseInputStream
õõ &
.
õõ& '
Position
õõ' /
;
õõ/ 0
}
úú 
set
ùù 
{
ûû 
throw
üü 
new
üü #
NotSupportedException
üü /
(
üü/ 0
$str
üü0 W
)
üüW X
;
üüX Y
}
†† 
}
°° 	
public
¶¶ 
override
¶¶ 
void
¶¶ 
Flush
¶¶ "
(
¶¶" #
)
¶¶# $
{
ßß 	
baseInputStream
®® 
.
®® 
Flush
®® !
(
®®! "
)
®®" #
;
®®# $
}
©© 	
public
≥≥ 
override
≥≥ 
long
≥≥ 
Seek
≥≥ !
(
≥≥! "
long
≥≥" &
offset
≥≥' -
,
≥≥- .

SeekOrigin
≥≥/ 9
origin
≥≥: @
)
≥≥@ A
{
¥¥ 	
throw
µµ 
new
µµ #
NotSupportedException
µµ +
(
µµ+ ,
$str
µµ, O
)
µµO P
;
µµP Q
}
∂∂ 	
public
ææ 
override
ææ 
void
ææ 
	SetLength
ææ &
(
ææ& '
long
ææ' +
value
ææ, 1
)
ææ1 2
{
øø 	
throw
¿¿ 
new
¿¿ #
NotSupportedException
¿¿ +
(
¿¿+ ,
$str
¿¿, T
)
¿¿T U
;
¿¿U V
}
¡¡ 	
public
ÀÀ 
override
ÀÀ 
void
ÀÀ 
Write
ÀÀ "
(
ÀÀ" #
byte
ÀÀ# '
[
ÀÀ' (
]
ÀÀ( )
buffer
ÀÀ* 0
,
ÀÀ0 1
int
ÀÀ2 5
offset
ÀÀ6 <
,
ÀÀ< =
int
ÀÀ> A
count
ÀÀB G
)
ÀÀG H
{
ÃÃ 	
throw
ÕÕ 
new
ÕÕ #
NotSupportedException
ÕÕ +
(
ÕÕ+ ,
$str
ÕÕ, P
)
ÕÕP Q
;
ÕÕQ R
}
ŒŒ 	
public
÷÷ 
override
÷÷ 
void
÷÷ 
	WriteByte
÷÷ &
(
÷÷& '
byte
÷÷' +
value
÷÷, 1
)
÷÷1 2
{
◊◊ 	
throw
ÿÿ 
new
ÿÿ #
NotSupportedException
ÿÿ +
(
ÿÿ+ ,
$str
ÿÿ, T
)
ÿÿT U
;
ÿÿU V
}
ŸŸ 	
public
ÂÂ 
override
ÂÂ 
IAsyncResult
ÂÂ $

BeginWrite
ÂÂ% /
(
ÂÂ/ 0
byte
ÂÂ0 4
[
ÂÂ4 5
]
ÂÂ5 6
buffer
ÂÂ7 =
,
ÂÂ= >
int
ÂÂ? B
offset
ÂÂC I
,
ÂÂI J
int
ÂÂK N
count
ÂÂO T
,
ÂÂT U
AsyncCallback
ÂÂV c
callback
ÂÂd l
,
ÂÂl m
object
ÂÂn t
state
ÂÂu z
)
ÂÂz {
{
ÊÊ 	
throw
ÁÁ 
new
ÁÁ #
NotSupportedException
ÁÁ +
(
ÁÁ+ ,
$str
ÁÁ, U
)
ÁÁU V
;
ÁÁV W
}
ËË 	
public
ÓÓ 
override
ÓÓ 
void
ÓÓ 
Close
ÓÓ "
(
ÓÓ" #
)
ÓÓ# $
{
ÔÔ 	
if
 
(
 
!
 
isClosed
 
)
 
{
ÒÒ 
isClosed
ÚÚ 
=
ÚÚ 
true
ÚÚ 
;
ÚÚ  
if
ÛÛ 
(
ÛÛ 
isStreamOwner
ÛÛ !
)
ÛÛ! "
{
ÙÙ 
baseInputStream
ıı #
.
ıı# $
Close
ıı$ )
(
ıı) *
)
ıı* +
;
ıı+ ,
}
ˆˆ 
}
˜˜ 
}
¯¯ 	
public
ÑÑ 
bool
ÑÑ 
IsStreamOwner
ÑÑ !
{
ÖÖ 	
get
ÜÜ 
{
ÜÜ 
return
ÜÜ 
isStreamOwner
ÜÜ &
;
ÜÜ& '
}
ÜÜ( )
set
áá 
{
áá 
isStreamOwner
áá 
=
áá  !
value
áá" '
;
áá' (
}
áá) *
}
àà 	
	protected
çç 
Stream
çç 
baseInputStream
çç (
;
çç( )
bool
íí 
isClosed
íí 
;
íí 
bool
òò 
isStreamOwner
òò 
=
òò 
true
òò !
;
òò! "
}
ôô 
}öö êw
NC:\SonarTestRepo\sonartestapp\ShipmentTest\AzureUtils\TricepsFileDownloader.cs
	namespace

 	
Delivery


 
.

 %
DESADVAdaptorsParallelRun

 ,
.

, -
IntgTest

- 5
.

5 6

AzureUtils

6 @
{ 
public 

class !
TricepsFileDownloader &
:' ("
ITricepsFileDownloader) ?
{ 
DateTimeOffset 
	dateStart  
=! "
DateTimeOffset# 1
.1 2
Now2 5
.5 6
Date6 :
.: ;
AddDays; B
(B C
-C D
$numD E
)E F
;F G
DateTimeOffset 
dateEnd 
=  
DateTimeOffset! /
./ 0
Now0 3
.3 4
Date4 8
.8 9
AddDays9 @
(@ A
-A B
$numB C
)C D
;D E
public !
TricepsFileDownloader $
($ %
)% &
{ 	
} 	
public 
void 
DownloadFiles !
(! "
string" (
depotId) 0
=1 2
null3 7
)7 8
{ 	-
!DownloadTricepsFilesFromAzureBlob -
(- . 
ApplicationConstants. B
.B C"
Actual_FILES_CONTAINERC Y
,Y Z 
ApplicationConstants[ o
.o p
Actual_FILES_PATH	p Å
,
Å Ç
$str
É ã
,
ã å
string
ç ì
.
ì î
Empty
î ô
)
ô ö
;
ö õ-
!DownloadTricepsFilesFromAzureBlob -
(- . 
ApplicationConstants. B
.B C$
EXPECTED_FILES_CONTAINERC [
,[ \ 
ApplicationConstants] q
.q r 
EXPECTED_FILES_PATH	r Ö
,
Ö Ü
$str
á ë
,
ë í
string
ì ô
.
ô ö
Empty
ö ü
)
ü †
;
† °
} 	
public 
void  
ExtractExpectedFiles (
(( )
)) *
{ 	
try 
{ 
List!! 
<!! 
string!! 
>!! 
compressedFilelist!! /
=!!0 1
	Directory!!2 ;
.!!; <
GetFiles!!< D
(!!D E 
ApplicationConstants!!E Y
.!!Y Z/
#LOCAL_COMPRESSED_EXPECTED_FILE_PATH!!Z }
)!!} ~
.!!~ 
ToList	!! Ö
(
!!Ö Ü
)
!!Ü á
;
!!á à
foreach## 
(## 
var## 
comptressedFilePath## 0
in##1 3
compressedFilelist##4 F
)##F G
{$$ 
string&& 
expectedFilePath&& +
=&&+ , 
ApplicationConstants&&- A
.&&A B1
%LOCAL_UNCOMPRESSED_EXPECTED_FILE_PATH&&B g
+&&h i
$str&&j n
+&&o p
Path&&q u
.&&u v
GetFileName	&&v Å
(
&&Å Ç!
comptressedFilePath
&&Ç ï
)
&&ï ñ
.
&&ñ ó
Split
&&ó ú
(
&&ú ù
$str
&&ù †
)
&&† °
[
&&° ¢
$num
&&¢ £
]
&&£ §
;
&&§ •
using(( 
((( 
Stream(( !
inStream((" *
=((+ ,
new((- 0
LzwInputStream((1 ?
(((? @
File((@ D
.((D E
OpenRead((E M
(((M N 
ApplicationConstants((N b
.((b c0
#LOCAL_COMPRESSED_EXPECTED_FILE_PATH	((c Ü
+
((á à
$str
((â å
+
((ç é
Path
((è ì
.
((ì î
GetFileName
((î ü
(
((ü †!
comptressedFilePath
((† ≥
)
((≥ ¥
)
((¥ µ
)
((µ ∂
)
((∂ ∑
using)) 
()) 

FileStream)) %
	outStream))& /
=))0 1
File))2 6
.))6 7
Create))7 =
())= >
expectedFilePath))> N
)))N O
)))O P
{** 
int++ 
read++  
;++  !
byte,, 
[,, 
],, 
data,, #
=,,$ %
new,,& )
byte,,* .
[,,. /
$num,,/ 3
],,3 4
;,,4 5
while-- 
(-- 
(--  
read--  $
=--% &
inStream--' /
.--/ 0
Read--0 4
(--4 5
data--5 9
,--9 :
$num--; <
,--< =
data--> B
.--B C
Length--C I
)--I J
)--J K
>--L M
$num--N O
)--O P
{.. 
	outStream// %
.//% &
Write//& +
(//+ ,
data//, 0
,//0 1
$num//2 3
,//3 4
read//5 9
)//9 :
;//: ;
}00 
}11 
string22 
[22 
]22 
lines22 "
=22# $
File22% )
.22) *
ReadAllLines22* 6
(226 7
expectedFilePath227 G
)22G H
;22H I
var33 
receivingDepot33 &
=33' (
lines33) .
[33. /
$num33/ 0
]330 1
.331 2
	Substring332 ;
(33; <
$num33< =
,33= >
$num33? @
)33@ A
;33A B
var44 
fileName44  
=44! "
$"44# %
{44% &
receivingDepot44& 4
}444 5
$str445 6
{446 7
lines447 <
[44< =
$num44= >
]44> ?
.44? @
	Substring44@ I
(44I J
$num44J L
,44L M
$num44N O
)44O P
}44P Q
"44Q R
;44R S
string55 
folder55 !
=55" # 
ApplicationConstants55$ 8
.558 9$
LOCAL_EXPECTED_FILE_PATH559 Q
;55Q R
string66 
	localPath66 $
=66% &
folder66' -
+66. /
$str660 4
+665 6
fileName667 ?
;66? @
if88 
(88 
!88 
	Directory88 "
.88" #
Exists88# )
(88) *
folder88* 0
)880 1
)881 2
{99 
	Directory:: !
.::! "
CreateDirectory::" 1
(::1 2
folder::2 8
)::8 9
;::9 :
};; 
File<< 
.<< 
AppendAllText<< &
(<<& '
	localPath<<' 0
,<<0 1
File<<2 6
.<<6 7
ReadAllText<<7 B
(<<B C
expectedFilePath<<C S
)<<S T
)<<T U
;<<U V
}@@ 
}AA 
catchBB 
(BB 
	ExceptionBB 
expBB  
)BB  !
{CC 
}EE 
}FF 	
privateGG 
voidGG -
!DownloadTricepsFilesFromAzureBlobGG 6
(GG6 7
stringGG7 =
containerNameGG> K
,GGK L
stringGGM S
blobPathGGT \
,GG\ ]
stringGG^ d
localMachinePathGGe u
,GGu v
stringGGw }
depotPrefix	GG~ â
=
GGä ã
null
GGå ê
)
GGê ë
{HH 	
stringII 
continuationTokenII $
=II% &
nullII' +
;II+ ,
stringJJ 
responseBodyJJ 
=JJ  !
stringJJ" (
.JJ( )
EmptyJJ) .
;JJ. /
BlobContainerClientKK 
	containerKK  )
=KK* +
newKK, /
BlobContainerClientKK0 C
(KKC D 
ApplicationConstantsKKD X
.KKX Y#
AZURE_CONNECTION_STRINGKKY p
,KKp q
containerNameKKr 
)	KK Ä
;
KKÄ Å
intLL 
countLL 
=LL 
$numLL 
;LL 
tryMM 
{NN 
doOO 
{PP 
varQQ 
resultSegmentQQ %
=QQ& '
	containerQQ( 1
.QQ1 2
GetBlobsQQ2 :
(QQ: ;
prefixQQ; A
:QQA B
blobPathQQC K
)QQK L
.RR 
AsPagesRR  
(RR  !
continuationTokenRR! 2
,RR2 3
$numRR4 8
)RR8 9
;RR9 :
foreachTT 
(TT 
AzureTT "
.TT" #
PageTT# '
<TT' (
BlobItemTT( 0
>TT0 1
blobPageTT2 :
inTT; =
resultSegmentTT> K
)TTK L
{UU 
foreachVV 
(VV  !
BlobItemVV! )
blobVV* .
inVV/ 1
blobPageVV2 :
.VV: ;
ValuesVV; A
)VVA B
{WW 
boolXX  
flagXX! %
=XX& '
falseXX( -
;XX- .
ifYY 
(YY  
localMachinePathYY  0
==YY1 3
$strYY4 <
)YY< =
{ZZ 
flag[[  $
=[[% &
blob[[' +
.[[+ ,

Properties[[, 6
.[[6 7
	CreatedOn[[7 @
>=[[A C
	dateStart[[D M
.[[M N
UtcDateTime[[N Y
&&[[Z \
blob[[] a
.[[a b

Properties[[b l
.[[l m
	CreatedOn[[m v
<=[[w y
dateEnd	[[z Å
.
[[Å Ç
UtcDateTime
[[Ç ç
;
[[ç é
}\\ 
else]]  
{^^ 
flag__  $
=__% &
true__' +
;__+ ,
}`` 
ifbb 
(bb  
truebb  $
)bb$ %
{cc 
stringdd  &
[dd& '
]dd' (
strKeysdd) 0
=dd1 2
nulldd3 7
;dd7 8
intee  #
	lastIndexee$ -
;ee- .
ifgg  "
(gg# $
localMachinePathgg$ 4
==gg5 7
$strgg8 @
)gg@ A
{hh  !
countii$ )
++ii) +
;ii+ ,
strKeysjj$ +
=jj, -
blobjj. 2
.jj2 3
Namejj3 7
.jj7 8
Splitjj8 =
(jj= >
$strjj> A
)jjA B
;jjB C
	lastIndexkk$ -
=kk. /
strKeyskk0 7
.kk7 8
Lengthkk8 >
-kk? @
$numkkA B
;kkB C

BlobClientll$ .

blobClientll/ 9
=ll: ;
	containerll< E
.llE F
GetBlobClientllF S
(llS T
blobllT X
.llX Y
NamellY ]
)ll] ^
;ll^ _
BlobDownloadInfomm$ 4
resmm5 8
=mm9 :

blobClientmm; E
.mmE F
DownloadmmF N
(mmN O
)mmO P
;mmP Q
Streamnn$ *
responseStreamnn+ 9
=nn: ;
resnn< ?
.nn? @
Contentnn@ G
;nnG H
usingoo$ )
(oo* +
StreamReaderoo+ 7
readeroo8 >
=oo? @
newooA D
StreamReaderooE Q
(ooQ R
responseStreamooR `
)oo` a
)ooa b
{pp$ %
responseBodyqq( 4
=qq5 6
readerqq7 =
.qq= >
	ReadToEndqq> G
(qqG H
)qqH I
;qqI J
}rr$ %
}ss  !
stringuu  &
[uu& '
]uu' (
linesuu) .
=uu/ 0
responseBodyuu1 =
.uu= >
Splituu> C
(uuC D
$charuuD H
)uuH I
;uuI J
varvv  #
receivingDepotvv$ 2
=vv3 4
linesvv5 :
[vv: ;
$numvv; <
]vv< =
.vv= >
	Substringvv> G
(vvG H
$numvvH I
,vvI J
$numvvK L
)vvL M
;vvM N
varww  #
fileNameww$ ,
=ww- .
$"ww/ 1
{ww1 2
receivingDepotww2 @
}ww@ A
$strwwA B
{wwB C
lineswwC H
[wwH I
$numwwI J
]wwJ K
.wwK L
	SubstringwwL U
(wwU V
$numwwV X
,wwX Y
$numwwZ [
)ww[ \
}ww\ ]
"ww] ^
;ww^ _
stringyy  &
folderyy' -
=yy. / 
ApplicationConstantsyy0 D
.yyD E"
LOCAL_ACTUAL_FILE_PATHyyE [
;yy[ \
stringzz  &
	localPathzz' 0
=zz1 2
folderzz3 9
+zz: ;
$strzz< @
+zzA B
fileNamezzC K
;zzK L
if||  "
(||# $
!||$ %
	Directory||% .
.||. /
Exists||/ 5
(||5 6
folder||6 <
)||< =
)||= >
{}}  !
	Directory~~$ -
.~~- .
CreateDirectory~~. =
(~~= >
folder~~> D
)~~D E
;~~E F
}  !
File
ÄÄ  $
.
ÄÄ$ %
AppendAllText
ÄÄ% 2
(
ÄÄ2 3
	localPath
ÄÄ3 <
,
ÄÄ< =
responseBody
ÄÄ> J
)
ÄÄJ K
;
ÄÄK L
}
ÉÉ 
}
ÑÑ 
continuationToken
ÜÜ )
=
ÜÜ* +
blobPage
ÜÜ, 4
.
ÜÜ4 5
ContinuationToken
ÜÜ5 F
;
ÜÜF G
}
àà 
}
ää 
while
ää 
(
ää 
continuationToken
ää *
!=
ää+ -
$str
ää. 0
)
ää0 1
;
ää1 2
Console
ãã 
.
ãã 
	WriteLine
ãã !
(
ãã! "
$"
ãã" $
{
ãã$ %
DateTime
ãã% -
.
ãã- .
UtcNow
ãã. 4
.
ãã4 5
ToString
ãã5 =
(
ãã= >
$str
ãã> V
,
ããV W
CultureInfo
ããX c
.
ããc d
InvariantCulture
ããd t
)
ããt u
}
ããu v
$str
ããv 
{ãã Ä
countããÄ Ö
.ããÖ Ü
ToStringããÜ é
(ããé è
)ããè ê
}ããê ë
$strããë ß
"ããß ®
)ãã® ©
;ãã© ™
File
åå 
.
åå 
AppendAllText
åå "
(
åå" #"
ApplicationConstants
åå# 7
.
åå7 8
LOG_FILE
åå8 @
,
åå@ A
$"
ååB D
$str
ååD z
"
ååz {
+
åå| }
countåå~ É
.ååÉ Ñ
ToStringååÑ å
(ååå ç
)ååç é
+ååè ê
$strååë ï
)ååï ñ
;ååñ ó
File
çç 
.
çç 
AppendAllText
çç "
(
çç" #"
ApplicationConstants
çç# 7
.
çç7 8

LOG_FOLDER
çç8 B
,
ççB C
new
ççD G
string
ççH N
(
ççN O
$char
ççO R
,
ççR S
$num
ççT W
)
ççW X
+
ççY Z
$str
çç[ _
)
çç_ `
;
çç` a
}
éé 
catch
êê 
(
êê 
	Exception
êê 
e
êê 
)
êê 
{
ëë 
Console
íí 
.
íí 
	WriteLine
íí !
(
íí! "
$str
ìì Y
,
ììY Z
e
ìì[ \
.
ìì\ ]
Message
ìì] d
)
ììd e
;
ììe f
Console
îî 
.
îî 
	WriteLine
îî !
(
îî! "
$str
ïï Y
,
ïïY Z
e
ïï[ \
.
ïï\ ]

StackTrace
ïï] g
)
ïïg h
;
ïïh i
throw
ññ 
e
ññ 
;
ññ 
}
óó 
}
òò 	
}
ôô 
}úú ∑
GC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\ASNComparator.cs
	namespace		 	3
'lsp_delivery_tricepsadaptor_parallelrun		
 1
.		1 2
Comparators		2 =
{

 
public 

class 
ASNComparator 
:  
IASNComparator! /
{ 
public 
bool  
CompareASNFileHeader (
(( )
string) /
expectedFileLine0 @
,@ A
stringB H
actualFileLineI W
)W X
{ 	
try 
{ 
List 
< 
string 
> 
	errorList &
=' (
new) ,
List- 1
<1 2
string2 8
>8 9
(9 :
): ;
;; <
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" D
+E F
expectedFileLineG W
.W X
	SubstringX a
(a b
$numb c
,c d
$nume f
)f g
+h i
$strj t
+u v
actualFileLine	w Ö
.
Ö Ü
	Substring
Ü è
(
è ê
$num
ê ë
,
ë í
$num
ì î
)
î ï
+
ñ ó
Environment
ò £
.
£ §
NewLine
§ ´
)
´ ¨
;
¨ ≠
} 
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" J
+K L
expectedFileLineM ]
.] ^
	Substring^ g
(g h
$numh i
,i j
$numk l
)l m
+n o
$strp z
+{ |
actualFileLine	} ã
.
ã å
	Substring
å ï
(
ï ñ
$num
ñ ó
,
ó ò
$num
ô ö
)
ö õ
+
ú ù
Environment
û ©
.
© ™
NewLine
™ ±
)
± ≤
;
≤ ≥
} 
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" @
+A B
expectedFileLineC S
.S T
	SubstringT ]
(] ^
$num^ _
,_ `
$numa b
)b c
+d e
$strf p
+q r
actualFileLine	s Å
.
Å Ç
	Substring
Ç ã
(
ã å
$num
å ç
,
ç é
$num
è ê
)
ê ë
+
í ì
Environment
î ü
.
ü †
NewLine
† ß
)
ß ®
;
® ©
} 
if   
(   
expectedFileLine   $
.  $ %
	Substring  % .
(  . /
$num  / 0
,  0 1
$num  2 4
)  4 5
!=  6 8
actualFileLine  9 G
.  G H
	Substring  H Q
(  Q R
$num  R S
,  S T
$num  U W
)  W X
)  X Y
{!! 
	errorList"" 
."" 
Add"" !
(""! "
$str""" =
+""> ?
expectedFileLine""@ P
.""P Q
	Substring""Q Z
(""Z [
$num""[ \
,""\ ]
$num""^ `
)""` a
+""b c
$str""d n
+""o p
actualFileLine""q 
.	"" Ä
	Substring
""Ä â
(
""â ä
$num
""ä ã
,
""ã å
$num
""ç è
)
""è ê
+
""ë í
Environment
""ì û
.
""û ü
NewLine
""ü ¶
)
""¶ ß
;
""ß ®
}## 
if$$ 
($$ 
expectedFileLine$$ $
.$$$ %
	Substring$$% .
($$. /
$num$$/ 1
,$$1 2
$num$$3 4
)$$4 5
!=$$6 8
actualFileLine$$9 G
.$$G H
	Substring$$H Q
($$Q R
$num$$R T
,$$T U
$num$$V W
)$$W X
)$$X Y
{%% 
	errorList&& 
.&& 
Add&& !
(&&! "
$str&&" F
+&&G H
expectedFileLine&&I Y
.&&Y Z
	Substring&&Z c
(&&c d
$num&&d f
,&&f g
$num&&h i
)&&i j
+&&k l
$str&&m w
+&&x y
actualFileLine	&&z à
.
&&à â
	Substring
&&â í
(
&&í ì
$num
&&ì ï
,
&&ï ñ
$num
&&ó ò
)
&&ò ô
+
&&ö õ
Environment
&&ú ß
.
&&ß ®
NewLine
&&® Ø
)
&&Ø ∞
;
&&∞ ±
}'' 
if(( 
((( 
expectedFileLine(( $
.(($ %
	Substring((% .
(((. /
$num((/ 1
,((1 2
$num((3 4
)((4 5
!=((6 8
actualFileLine((9 G
.((G H
	Substring((H Q
(((Q R
$num((R T
,((T U
$num((V W
)((W X
)((X Y
{)) 
	errorList** 
.** 
Add** !
(**! "
$str**" H
+**I J
expectedFileLine**K [
.**[ \
	Substring**\ e
(**e f
$num**f h
,**h i
$num**j k
)**k l
+**m n
$str**o y
+**z {
actualFileLine	**| ä
.
**ä ã
	Substring
**ã î
(
**î ï
$num
**ï ó
,
**ó ò
$num
**ô ö
)
**ö õ
+
**ú ù
Environment
**û ©
.
**© ™
NewLine
**™ ±
)
**± ≤
;
**≤ ≥
}++ 
if,, 
(,, 
expectedFileLine,, $
.,,$ %
	Substring,,% .
(,,. /
$num,,/ 1
,,,1 2
$num,,3 4
),,4 5
!=,,6 8
actualFileLine,,9 G
.,,G H
	Substring,,H Q
(,,Q R
$num,,R T
,,,T U
$num,,V W
),,W X
),,X Y
{-- 
	errorList.. 
... 
Add.. !
(..! "
$str.." H
+..I J
expectedFileLine..K [
...[ \
	Substring..\ e
(..e f
$num..f h
,..h i
$num..j k
)..k l
+..m n
$str..o y
+..z {
actualFileLine	..| ä
.
..ä ã
	Substring
..ã î
(
..î ï
$num
..ï ó
,
..ó ò
$num
..ô ö
)
..ö õ
+
..ú ù
Environment
..û ©
.
..© ™
NewLine
..™ ±
)
..± ≤
;
..≤ ≥
}// 
if00 
(00 
expectedFileLine00 $
.00$ %
	Substring00% .
(00. /
$num00/ 1
,001 2
$num003 4
)004 5
!=006 8
actualFileLine009 G
.00G H
	Substring00H Q
(00Q R
$num00R T
,00T U
$num00V W
)00W X
)00X Y
{11 
	errorList22 
.22 
Add22 !
(22! "
$str22" I
+22J K
expectedFileLine22L \
.22\ ]
	Substring22] f
(22f g
$num22g i
,22i j
$num22k l
)22l m
+22n o
$str22p z
+22{ |
actualFileLine	22} ã
.
22ã å
	Substring
22å ï
(
22ï ñ
$num
22ñ ò
,
22ò ô
$num
22ö õ
)
22õ ú
+
22ù û
Environment
22ü ™
.
22™ ´
NewLine
22´ ≤
)
22≤ ≥
;
22≥ ¥
}33 
if44 
(44 
expectedFileLine44 $
.44$ %
	Substring44% .
(44. /
$num44/ 1
,441 2
$num443 4
)444 5
!=446 8
actualFileLine449 G
.44G H
	Substring44H Q
(44Q R
$num44R T
,44T U
$num44V W
)44W X
)44X Y
{55 
	errorList66 
.66 
Add66 !
(66! "
$str66" B
+66C D
expectedFileLine66E U
.66U V
	Substring66V _
(66_ `
$num66` b
,66b c
$num66d e
)66e f
+66g h
$str66i s
+66t u
actualFileLine	66v Ñ
.
66Ñ Ö
	Substring
66Ö é
(
66é è
$num
66è ë
,
66ë í
$num
66ì î
)
66î ï
+
66ñ ó
Environment
66ò £
.
66£ §
NewLine
66§ ´
)
66´ ¨
;
66¨ ≠
}77 
if99 
(99 
expectedFileLine99 $
.99$ %
	Substring99% .
(99. /
$num99/ 1
,991 2
$num993 4
)994 5
!=996 8
actualFileLine999 G
.99G H
	Substring99H Q
(99Q R
$num99R T
,99T U
$num99V W
)99W X
)99X Y
{:: 
	errorList;; 
.;; 
Add;; !
(;;! "
$str;;" F
+;;G H
expectedFileLine;;I Y
.;;Y Z
	Substring;;Z c
(;;c d
$num;;d f
,;;f g
$num;;h i
);;i j
+;;k l
$str;;m w
+;;x y
actualFileLine	;;z à
.
;;à â
	Substring
;;â í
(
;;í ì
$num
;;ì ï
,
;;ï ñ
$num
;;ó ò
)
;;ò ô
+
;;ö õ
Environment
;;ú ß
.
;;ß ®
NewLine
;;® Ø
)
;;Ø ∞
;
;;∞ ±
}<< 
if>> 
(>> 
expectedFileLine>> $
.>>$ %
	Substring>>% .
(>>. /
$num>>/ 1
,>>1 2
$num>>3 4
)>>4 5
!=>>6 8
actualFileLine>>9 G
.>>G H
	Substring>>H Q
(>>Q R
$num>>R T
,>>T U
$num>>V W
)>>W X
)>>X Y
{?? 
	errorList@@ 
.@@ 
Add@@ !
(@@! "
$str@@" M
+@@N O
expectedFileLine@@P `
.@@` a
	Substring@@a j
(@@j k
$num@@k m
,@@m n
$num@@o p
)@@p q
+@@r s
$str@@t ~
+	@@ Ä
actualFileLine
@@Å è
.
@@è ê
	Substring
@@ê ô
(
@@ô ö
$num
@@ö ú
,
@@ú ù
$num
@@û ü
)
@@ü †
+
@@° ¢
Environment
@@£ Æ
.
@@Æ Ø
NewLine
@@Ø ∂
)
@@∂ ∑
;
@@∑ ∏
}AA 
ifCC 
(CC 
expectedFileLineCC $
.CC$ %
	SubstringCC% .
(CC. /
$numCC/ 1
,CC1 2
$numCC3 4
)CC4 5
!=CC6 8
actualFileLineCC9 G
.CCG H
	SubstringCCH Q
(CCQ R
$numCCR T
,CCT U
$numCCV W
)CCW X
)CCX Y
{DD 
	errorListEE 
.EE 
AddEE !
(EE! "
$strEE" H
+EEI J
expectedFileLineEEK [
.EE[ \
	SubstringEE\ e
(EEe f
$numEEf h
,EEh i
$numEEj k
)EEk l
+EEm n
$strEEo y
+EEz {
actualFileLine	EE| ä
.
EEä ã
	Substring
EEã î
(
EEî ï
$num
EEï ó
,
EEó ò
$num
EEô ö
)
EEö õ
+
EEú ù
Environment
EEû ©
.
EE© ™
NewLine
EE™ ±
)
EE± ≤
;
EE≤ ≥
}FF 
ifHH 
(HH 
expectedFileLineHH $
.HH$ %
	SubstringHH% .
(HH. /
$numHH/ 1
,HH1 2
$numHH3 4
)HH4 5
!=HH6 8
actualFileLineHH9 G
.HHG H
	SubstringHHH Q
(HHQ R
$numHHR T
,HHT U
$numHHV W
)HHW X
)HHX Y
{II 
	errorListJJ 
.JJ 
AddJJ !
(JJ! "
$strJJ" L
+JJM N
expectedFileLineJJO _
.JJ_ `
	SubstringJJ` i
(JJi j
$numJJj l
,JJl m
$numJJn o
)JJo p
+JJq r
$strJJs }
+JJ~ 
actualFileLine
JJÄ é
.
JJé è
	Substring
JJè ò
(
JJò ô
$num
JJô õ
,
JJõ ú
$num
JJù û
)
JJû ü
+
JJ† °
Environment
JJ¢ ≠
.
JJ≠ Æ
NewLine
JJÆ µ
)
JJµ ∂
;
JJ∂ ∑
}KK 
ifLL 
(LL 
expectedFileLineLL $
.LL$ %
	SubstringLL% .
(LL. /
$numLL/ 1
,LL1 2
$numLL3 4
)LL4 5
!=LL6 8
actualFileLineLL9 G
.LLG H
	SubstringLLH Q
(LLQ R
$numLLR T
,LLT U
$numLLV W
)LLW X
)LLX Y
{MM 
	errorListNN 
.NN 
AddNN !
(NN! "
$strNN" L
+NNM N
expectedFileLineNNO _
.NN_ `
	SubstringNN` i
(NNi j
$numNNj l
,NNl m
$numNNn o
)NNo p
+NNq r
$strNNs }
+NN~ 
actualFileLine
NNÄ é
.
NNé è
	Substring
NNè ò
(
NNò ô
$num
NNô õ
,
NNõ ú
$num
NNù û
)
NNû ü
+
NN† °
Environment
NN¢ ≠
.
NN≠ Æ
NewLine
NNÆ µ
)
NNµ ∂
;
NN∂ ∑
}OO 
ifPP 
(PP 
expectedFileLinePP $
.PP$ %
	SubstringPP% .
(PP. /
$numPP/ 1
,PP1 2
$numPP3 4
)PP4 5
!=PP6 8
actualFileLinePP9 G
.PPG H
	SubstringPPH Q
(PPQ R
$numPPR T
,PPT U
$numPPV W
)PPW X
)PPX Y
{QQ 
	errorListRR 
.RR 
AddRR !
(RR! "
$strRR" L
+RRM N
expectedFileLineRRO _
.RR_ `
	SubstringRR` i
(RRi j
$numRRj l
,RRl m
$numRRn o
)RRo p
+RRq r
$strRRs }
+RR~ 
actualFileLine
RRÄ é
.
RRé è
	Substring
RRè ò
(
RRò ô
$num
RRô õ
,
RRõ ú
$num
RRù û
)
RRû ü
+
RR† °
Environment
RR¢ ≠
.
RR≠ Æ
NewLine
RRÆ µ
)
RRµ ∂
;
RR∂ ∑
}SS 
ifTT 
(TT 
expectedFileLineTT $
.TT$ %
	SubstringTT% .
(TT. /
$numTT/ 1
,TT1 2
$numTT3 4
)TT4 5
!=TT6 8
actualFileLineTT9 G
.TTG H
	SubstringTTH Q
(TTQ R
$numTTR T
,TTT U
$numTTV W
)TTW X
)TTX Y
{UU 
	errorListVV 
.VV 
AddVV !
(VV! "
$strVV" L
+VVM N
expectedFileLineVVO _
.VV_ `
	SubstringVV` i
(VVi j
$numVVj l
,VVl m
$numVVn o
)VVo p
+VVq r
$strVVs }
+VV~ 
actualFileLine
VVÄ é
.
VVé è
	Substring
VVè ò
(
VVò ô
$num
VVô õ
,
VVõ ú
$num
VVù û
)
VVû ü
+
VV† °
Environment
VV¢ ≠
.
VV≠ Æ
NewLine
VVÆ µ
)
VVµ ∂
;
VV∂ ∑
}WW 
ifXX 
(XX 
expectedFileLineXX $
.XX$ %
	SubstringXX% .
(XX. /
$numXX/ 1
,XX1 2
$numXX3 4
)XX4 5
!=XX6 8
actualFileLineXX9 G
.XXG H
	SubstringXXH Q
(XXQ R
$numXXR T
,XXT U
$numXXV W
)XXW X
)XXX Y
{YY 
	errorListZZ 
.ZZ 
AddZZ !
(ZZ! "
$strZZ" J
+ZZK L
expectedFileLineZZM ]
.ZZ] ^
	SubstringZZ^ g
(ZZg h
$numZZh j
,ZZj k
$numZZl m
)ZZm n
+ZZo p
$strZZq {
+ZZ| }
actualFileLine	ZZ~ å
.
ZZå ç
	Substring
ZZç ñ
(
ZZñ ó
$num
ZZó ô
,
ZZô ö
$num
ZZõ ú
)
ZZú ù
+
ZZû ü
Environment
ZZ† ´
.
ZZ´ ¨
NewLine
ZZ¨ ≥
)
ZZ≥ ¥
;
ZZ¥ µ
}[[ 
if\\ 
(\\ 
expectedFileLine\\ $
.\\$ %
	Substring\\% .
(\\. /
$num\\/ 1
,\\1 2
$num\\3 4
)\\4 5
!=\\6 8
actualFileLine\\9 G
.\\G H
	Substring\\H Q
(\\Q R
$num\\R T
,\\T U
$num\\V W
)\\W X
)\\X Y
{]] 
	errorList^^ 
.^^ 
Add^^ !
(^^! "
$str^^" E
+^^F G
expectedFileLine^^H X
.^^X Y
	Substring^^Y b
(^^b c
$num^^c e
,^^e f
$num^^g h
)^^h i
+^^j k
$str^^l v
+^^w x
actualFileLine	^^y á
.
^^á à
	Substring
^^à ë
(
^^ë í
$num
^^í î
,
^^î ï
$num
^^ñ ó
)
^^ó ò
+
^^ô ö
Environment
^^õ ¶
.
^^¶ ß
NewLine
^^ß Æ
)
^^Æ Ø
;
^^Ø ∞
}__ 
if`` 
(`` 
expectedFileLine`` $
.``$ %
	Substring``% .
(``. /
$num``/ 1
,``1 2
$num``3 4
)``4 5
!=``6 8
actualFileLine``9 G
.``G H
	Substring``H Q
(``Q R
$num``R T
,``T U
$num``V W
)``W X
)``X Y
{aa 
	errorListbb 
.bb 
Addbb !
(bb! "
$strbb" C
+bbD E
expectedFileLinebbF V
.bbV W
	SubstringbbW `
(bb` a
$numbba c
,bbc d
$numbbe f
)bbf g
+bbh i
$strbbj t
+bbu v
actualFileLine	bbw Ö
.
bbÖ Ü
	Substring
bbÜ è
(
bbè ê
$num
bbê í
,
bbí ì
$num
bbî ï
)
bbï ñ
+
bbó ò
Environment
bbô §
.
bb§ •
NewLine
bb• ¨
)
bb¨ ≠
;
bb≠ Æ
}cc 
ifdd 
(dd 
expectedFileLinedd $
.dd$ %
	Substringdd% .
(dd. /
$numdd/ 1
,dd1 2
$numdd3 4
)dd4 5
!=dd6 8
actualFileLinedd9 G
.ddG H
	SubstringddH Q
(ddQ R
$numddR T
,ddT U
$numddV W
)ddW X
)ddX Y
{ee 
	errorListff 
.ff 
Addff !
(ff! "
$strff" F
+ffG H
expectedFileLineffI Y
.ffY Z
	SubstringffZ c
(ffc d
$numffd f
,fff g
$numffh i
)ffi j
+ffk l
$strffm w
+ffx y
actualFileLine	ffz à
.
ffà â
	Substring
ffâ í
(
ffí ì
$num
ffì ï
,
ffï ñ
$num
ffó ò
)
ffò ô
+
ffö õ
Environment
ffú ß
.
ffß ®
NewLine
ff® Ø
)
ffØ ∞
;
ff∞ ±
}gg 
ifhh 
(hh 
expectedFileLinehh $
.hh$ %
	Substringhh% .
(hh. /
$numhh/ 1
,hh1 2
$numhh3 5
)hh5 6
!=hh7 9
actualFileLinehh: H
.hhH I
	SubstringhhI R
(hhR S
$numhhS U
,hhU V
$numhhW Y
)hhY Z
)hhZ [
{ii 
	errorListjj 
.jj 
Addjj !
(jj! "
$strjj" G
+jjH I
expectedFileLinejjJ Z
.jjZ [
	Substringjj[ d
(jjd e
$numjje g
,jjg h
$numjji k
)jjk l
+jjm n
$strjjo y
+jjz {
actualFileLine	jj| ä
.
jjä ã
	Substring
jjã î
(
jjî ï
$num
jjï ó
,
jjó ò
$num
jjô õ
)
jjõ ú
+
jjù û
Environment
jjü ™
.
jj™ ´
NewLine
jj´ ≤
)
jj≤ ≥
;
jj≥ ¥
}kk 
ifll 
(ll 
expectedFileLinell $
.ll$ %
	Substringll% .
(ll. /
$numll/ 1
,ll1 2
$numll3 4
)ll4 5
!=ll6 8
actualFileLinell9 G
.llG H
	SubstringllH Q
(llQ R
$numllR T
,llT U
$numllV W
)llW X
)llX Y
{mm 
	errorListnn 
.nn 
Addnn !
(nn! "
$strnn" E
+nnF G
expectedFileLinennH X
.nnX Y
	SubstringnnY b
(nnb c
$numnnc e
,nne f
$numnng h
)nnh i
+nnj k
$strnnl v
+nnw x
actualFileLine	nny á
.
nná à
	Substring
nnà ë
(
nnë í
$num
nní î
,
nnî ï
$num
nnñ ó
)
nnó ò
+
nnô ö
Environment
nnõ ¶
.
nn¶ ß
NewLine
nnß Æ
)
nnÆ Ø
;
nnØ ∞
}oo 
ifpp 
(pp 
expectedFileLinepp $
.pp$ %
	Substringpp% .
(pp. /
$numpp/ 2
,pp2 3
$numpp4 5
)pp5 6
!=pp7 9
actualFileLinepp: H
.ppH I
	SubstringppI R
(ppR S
$numppS V
,ppV W
$numppX Y
)ppY Z
)ppZ [
{qq 
	errorListrr 
.rr 
Addrr !
(rr! "
$strrr" F
+rrG H
expectedFileLinerrI Y
.rrY Z
	SubstringrrZ c
(rrc d
$numrrd g
,rrg h
$numrri j
)rrj k
+rrl m
$strrrn x
+rry z
actualFileLine	rr{ â
.
rrâ ä
	Substring
rrä ì
(
rrì î
$num
rrî ó
,
rró ò
$num
rrô ö
)
rrö õ
+
rrú ù
Environment
rrû ©
.
rr© ™
NewLine
rr™ ±
)
rr± ≤
;
rr≤ ≥
}ss 
iftt 
(tt 
expectedFileLinett $
.tt$ %
	Substringtt% .
(tt. /
$numtt/ 2
,tt2 3
$numtt4 5
)tt5 6
!=tt7 9
actualFileLinett: H
.ttH I
	SubstringttI R
(ttR S
$numttS V
,ttV W
$numttX Y
)ttY Z
)ttZ [
{uu 
	errorListvv 
.vv 
Addvv !
(vv! "
$strvv" E
+vvF G
expectedFileLinevvH X
.vvX Y
	SubstringvvY b
(vvb c
$numvvc f
,vvf g
$numvvh i
)vvi j
+vvk l
$strvvm w
+vvx y
actualFileLine	vvz à
.
vvà â
	Substring
vvâ í
(
vví ì
$num
vvì ñ
,
vvñ ó
$num
vvò ô
)
vvô ö
+
vvõ ú
Environment
vvù ®
.
vv® ©
NewLine
vv© ∞
)
vv∞ ±
;
vv± ≤
}ww 
ifxx 
(xx 
expectedFileLinexx $
.xx$ %
	Substringxx% .
(xx. /
$numxx/ 2
,xx2 3
$numxx4 6
)xx6 7
!=xx8 :
actualFileLinexx; I
.xxI J
	SubstringxxJ S
(xxS T
$numxxT W
,xxW X
$numxxY [
)xx[ \
)xx\ ]
{yy 
	errorListzz 
.zz 
Addzz !
(zz! "
$strzz" D
+zzE F
expectedFileLinezzG W
.zzW X
	SubstringzzX a
(zza b
$numzzb e
,zze f
$numzzg i
)zzi j
+zzk l
$strzzm w
+zzx y
actualFileLine	zzz à
.
zzà â
	Substring
zzâ í
(
zzí ì
$num
zzì ñ
,
zzñ ó
$num
zzò ö
)
zzö õ
+
zzú ù
Environment
zzû ©
.
zz© ™
NewLine
zz™ ±
)
zz± ≤
;
zz≤ ≥
}{{ 
if|| 
(|| 
expectedFileLine|| $
.||$ %
	Substring||% .
(||. /
$num||/ 2
,||2 3
$num||4 5
)||5 6
!=||7 9
actualFileLine||: H
.||H I
	Substring||I R
(||R S
$num||S V
,||V W
$num||X Y
)||Y Z
)||Z [
{}} 
	errorList~~ 
.~~ 
Add~~ !
(~~! "
$str~~" I
+~~J K
expectedFileLine~~L \
.~~\ ]
	Substring~~] f
(~~f g
$num~~g j
,~~j k
$num~~l m
)~~m n
+~~o p
$str~~q {
+~~| }
actualFileLine	~~~ å
.
~~å ç
	Substring
~~ç ñ
(
~~ñ ó
$num
~~ó ö
,
~~ö õ
$num
~~ú ù
)
~~ù û
+
~~ü †
Environment
~~° ¨
.
~~¨ ≠
NewLine
~~≠ ¥
)
~~¥ µ
;
~~µ ∂
} 
if
ÄÄ 
(
ÄÄ 
expectedFileLine
ÄÄ $
.
ÄÄ$ %
	Substring
ÄÄ% .
(
ÄÄ. /
$num
ÄÄ/ 2
,
ÄÄ2 3
$num
ÄÄ4 7
)
ÄÄ7 8
!=
ÄÄ9 ;
actualFileLine
ÄÄ< J
.
ÄÄJ K
	Substring
ÄÄK T
(
ÄÄT U
$num
ÄÄU X
,
ÄÄX Y
$num
ÄÄZ ]
)
ÄÄ] ^
)
ÄÄ^ _
{
ÅÅ 
	errorList
ÇÇ 
.
ÇÇ 
Add
ÇÇ !
(
ÇÇ! "
$str
ÇÇ" B
+
ÇÇC D
expectedFileLine
ÇÇE U
.
ÇÇU V
	Substring
ÇÇV _
(
ÇÇ_ `
$num
ÇÇ` c
,
ÇÇc d
$num
ÇÇe h
)
ÇÇh i
+
ÇÇj k
$str
ÇÇl v
+
ÇÇw x
actualFileLineÇÇy á
.ÇÇá à
	SubstringÇÇà ë
(ÇÇë í
$numÇÇí ï
,ÇÇï ñ
$numÇÇó ö
)ÇÇö õ
+ÇÇú ù
EnvironmentÇÇû ©
.ÇÇ© ™
NewLineÇÇ™ ±
)ÇÇ± ≤
;ÇÇ≤ ≥
}
ÉÉ 
if
ÑÑ 
(
ÑÑ 
	errorList
ÑÑ 
.
ÑÑ 
Any
ÑÑ !
(
ÑÑ! "
)
ÑÑ" #
)
ÑÑ# $
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
	errorList
ÜÜ !
.
ÜÜ! "
Any
ÜÜ" %
(
ÜÜ% &
)
ÜÜ& '
)
ÜÜ' (
{
áá 
	errorList
àà !
.
àà! "
Insert
àà" (
(
àà( )
$num
àà) *
,
àà* +
$str
àà, T
+
ààU V
Environment
ààW b
.
ààb c
NewLine
ààc j
)
ààj k
;
ààk l
}
ââ 
File
ää 
.
ää 
AppendAllText
ää &
(
ää& '"
ApplicationConstants
ää' ;
.
ää; <
LOG_FILE
ää< D
,
ääD E
$str
ääF n
+
ääo p
Environment
ääq |
.
ää| }
NewLineää} Ñ
)ääÑ Ö
;ääÖ Ü
File
ãã 
.
ãã 
AppendAllText
ãã &
(
ãã& '"
ApplicationConstants
ãã' ;
.
ãã; <
LOG_FILE
ãã< D
,
ããD E
$str
ããF Y
+
ããZ [
expectedFileLine
ãã\ l
+
ããm n
Environment
ãão z
.
ããz {
NewLineãã{ Ç
)ããÇ É
;ããÉ Ñ
File
åå 
.
åå 
AppendAllText
åå &
(
åå& '"
ApplicationConstants
åå' ;
.
åå; <
LOG_FILE
åå< D
,
ååD E
$str
ååF W
+
ååX Y
actualFileLine
ååZ h
+
ååi j
Environment
ååk v
.
ååv w
NewLine
ååw ~
)
åå~ 
;åå Ä
File
çç 
.
çç 
AppendAllText
çç &
(
çç& '"
ApplicationConstants
çç' ;
.
çç; <
LOG_FILE
çç< D
,
ççD E
string
ççF L
.
ççL M
Join
ççM Q
(
ççQ R
$str
ççR U
,
ççU V
	errorList
ççW `
)
çç` a
)
çça b
;
ççb c
return
éé 
false
éé  
;
éé  !
}
èè 
else
êê 
{
ëë 
return
íí 
true
íí 
;
íí  
}
ìì 
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
ex
ïï 
)
ïï  
{
ññ 
throw
òò 
ex
òò 
;
òò 
}
ôô 
}
öö 	
public
õõ 
bool
õõ "
CompareASNFileFooter
õõ (
(
õõ( )
string
õõ) /
expectedFileLine
õõ0 @
,
õõ@ A
string
õõB H
actualFileLine
õõI W
)
õõW X
{
úú 	
try
ùù 
{
ûû 
List
üü 
<
üü 
string
üü 
>
üü 
	errorList
üü &
=
üü' (
new
üü) ,
List
üü- 1
<
üü1 2
string
üü2 8
>
üü8 9
(
üü9 :
)
üü: ;
;
üü; <
if
°° 
(
°° 
expectedFileLine
°° $
.
°°$ %
	Substring
°°% .
(
°°. /
$num
°°/ 0
,
°°0 1
$num
°°2 3
)
°°3 4
!=
°°5 7
actualFileLine
°°8 F
.
°°F G
	Substring
°°G P
(
°°P Q
$num
°°Q R
,
°°R S
$num
°°T U
)
°°U V
)
°°V W
{
¢¢ 
	errorList
££ 
.
££ 
Add
££ !
(
££! "
$str
££" D
+
££E F
expectedFileLine
££G W
.
££W X
	Substring
££X a
(
££a b
$num
££b c
,
££c d
$num
££e f
)
££f g
+
££h i
$str
££j t
+
££u v
actualFileLine££w Ö
.££Ö Ü
	Substring££Ü è
(££è ê
$num££ê ë
,££ë í
$num££ì î
)££î ï
+££ñ ó
Environment££ò £
.£££ §
NewLine££§ ´
)££´ ¨
;££¨ ≠
}
§§ 
if
•• 
(
•• 
expectedFileLine
•• $
.
••$ %
	Substring
••% .
(
••. /
$num
••/ 0
,
••0 1
$num
••2 3
)
••3 4
!=
••5 7
actualFileLine
••8 F
.
••F G
	Substring
••G P
(
••P Q
$num
••Q R
,
••R S
$num
••T U
)
••U V
)
••V W
{
¶¶ 
	errorList
ßß 
.
ßß 
Add
ßß !
(
ßß! "
$str
ßß" J
+
ßßK L
expectedFileLine
ßßM ]
.
ßß] ^
	Substring
ßß^ g
(
ßßg h
$num
ßßh i
,
ßßi j
$num
ßßk l
)
ßßl m
+
ßßn o
$str
ßßp z
+
ßß{ |
actualFileLineßß} ã
.ßßã å
	Substringßßå ï
(ßßï ñ
$numßßñ ó
,ßßó ò
$numßßô ö
)ßßö õ
+ßßú ù
Environmentßßû ©
.ßß© ™
NewLineßß™ ±
)ßß± ≤
;ßß≤ ≥
}
®® 
if
©© 
(
©© 
expectedFileLine
©© $
.
©©$ %
	Substring
©©% .
(
©©. /
$num
©©/ 0
,
©©0 1
$num
©©2 3
)
©©3 4
!=
©©5 7
actualFileLine
©©8 F
.
©©F G
	Substring
©©G P
(
©©P Q
$num
©©Q R
,
©©R S
$num
©©T U
)
©©U V
)
©©V W
{
™™ 
	errorList
´´ 
.
´´ 
Add
´´ !
(
´´! "
$str
´´" @
+
´´A B
expectedFileLine
´´C S
.
´´S T
	Substring
´´T ]
(
´´] ^
$num
´´^ _
,
´´_ `
$num
´´a b
)
´´b c
+
´´d e
$str
´´f p
+
´´q r
actualFileLine´´s Å
.´´Å Ç
	Substring´´Ç ã
(´´ã å
$num´´å ç
,´´ç é
$num´´è ê
)´´ê ë
+´´í ì
Environment´´î ü
.´´ü †
NewLine´´† ß
)´´ß ®
;´´® ©
}
¨¨ 
if
≠≠ 
(
≠≠ 
expectedFileLine
≠≠ $
.
≠≠$ %
	Substring
≠≠% .
(
≠≠. /
$num
≠≠/ 0
,
≠≠0 1
$num
≠≠2 4
)
≠≠4 5
!=
≠≠6 8
actualFileLine
≠≠9 G
.
≠≠G H
	Substring
≠≠H Q
(
≠≠Q R
$num
≠≠R S
,
≠≠S T
$num
≠≠U W
)
≠≠W X
)
≠≠X Y
{
ÆÆ 
	errorList
ØØ 
.
ØØ 
Add
ØØ !
(
ØØ! "
$str
ØØ" =
+
ØØ> ?
expectedFileLine
ØØ@ P
.
ØØP Q
	Substring
ØØQ Z
(
ØØZ [
$num
ØØ[ \
,
ØØ\ ]
$num
ØØ^ `
)
ØØ` a
+
ØØb c
$str
ØØd n
+
ØØo p
actualFileLine
ØØq 
.ØØ Ä
	SubstringØØÄ â
(ØØâ ä
$numØØä ã
,ØØã å
$numØØç è
)ØØè ê
+ØØë í
EnvironmentØØì û
.ØØû ü
NewLineØØü ¶
)ØØ¶ ß
;ØØß ®
}
∞∞ 
if
±± 
(
±± 
expectedFileLine
±± $
.
±±$ %
	Substring
±±% .
(
±±. /
$num
±±/ 1
,
±±1 2
$num
±±3 4
)
±±4 5
!=
±±6 8
actualFileLine
±±9 G
.
±±G H
	Substring
±±H Q
(
±±Q R
$num
±±R T
,
±±T U
$num
±±V W
)
±±W X
)
±±X Y
{
≤≤ 
	errorList
≥≥ 
.
≥≥ 
Add
≥≥ !
(
≥≥! "
$str
≥≥" ?
+
≥≥@ A
expectedFileLine
≥≥B R
.
≥≥R S
	Substring
≥≥S \
(
≥≥\ ]
$num
≥≥] _
,
≥≥_ `
$num
≥≥a b
)
≥≥b c
+
≥≥d e
$str
≥≥f p
+
≥≥q r
actualFileLine≥≥s Å
.≥≥Å Ç
	Substring≥≥Ç ã
(≥≥ã å
$num≥≥å é
,≥≥é è
$num≥≥ê ë
)≥≥ë í
+≥≥ì î
Environment≥≥ï †
.≥≥† °
NewLine≥≥° ®
)≥≥® ©
;≥≥© ™
}
¥¥ 
if
µµ 
(
µµ 
expectedFileLine
µµ $
.
µµ$ %
	Substring
µµ% .
(
µµ. /
$num
µµ/ 1
,
µµ1 2
$num
µµ3 4
)
µµ4 5
!=
µµ6 8
actualFileLine
µµ9 G
.
µµG H
	Substring
µµH Q
(
µµQ R
$num
µµR T
,
µµT U
$num
µµV W
)
µµW X
)
µµX Y
{
∂∂ 
	errorList
∑∑ 
.
∑∑ 
Add
∑∑ !
(
∑∑! "
$str
∑∑" H
+
∑∑I J
expectedFileLine
∑∑K [
.
∑∑[ \
	Substring
∑∑\ e
(
∑∑e f
$num
∑∑f h
,
∑∑h i
$num
∑∑j k
)
∑∑k l
+
∑∑m n
$str
∑∑o y
+
∑∑z {
actualFileLine∑∑| ä
.∑∑ä ã
	Substring∑∑ã î
(∑∑î ï
$num∑∑ï ó
,∑∑ó ò
$num∑∑ô ö
)∑∑ö õ
+∑∑ú ù
Environment∑∑û ©
.∑∑© ™
NewLine∑∑™ ±
)∑∑± ≤
;∑∑≤ ≥
}
∏∏ 
if
ππ 
(
ππ 
expectedFileLine
ππ $
.
ππ$ %
	Substring
ππ% .
(
ππ. /
$num
ππ/ 1
,
ππ1 2
$num
ππ3 4
)
ππ4 5
!=
ππ6 8
actualFileLine
ππ9 G
.
ππG H
	Substring
ππH Q
(
ππQ R
$num
ππR T
,
ππT U
$num
ππV W
)
ππW X
)
ππX Y
{
∫∫ 
	errorList
ªª 
.
ªª 
Add
ªª !
(
ªª! "
$str
ªª" H
+
ªªI J
expectedFileLine
ªªK [
.
ªª[ \
	Substring
ªª\ e
(
ªªe f
$num
ªªf h
,
ªªh i
$num
ªªj k
)
ªªk l
+
ªªm n
$str
ªªo y
+
ªªz {
actualFileLineªª| ä
.ªªä ã
	Substringªªã î
(ªªî ï
$numªªï ó
,ªªó ò
$numªªô ö
)ªªö õ
+ªªú ù
Environmentªªû ©
.ªª© ™
NewLineªª™ ±
)ªª± ≤
;ªª≤ ≥
}
ºº 
if
ΩΩ 
(
ΩΩ 
expectedFileLine
ΩΩ $
.
ΩΩ$ %
	Substring
ΩΩ% .
(
ΩΩ. /
$num
ΩΩ/ 1
,
ΩΩ1 2
$num
ΩΩ3 4
)
ΩΩ4 5
!=
ΩΩ6 8
actualFileLine
ΩΩ9 G
.
ΩΩG H
	Substring
ΩΩH Q
(
ΩΩQ R
$num
ΩΩR T
,
ΩΩT U
$num
ΩΩV W
)
ΩΩW X
)
ΩΩX Y
{
ææ 
	errorList
øø 
.
øø 
Add
øø !
(
øø! "
$str
øø" H
+
øøI J
expectedFileLine
øøK [
.
øø[ \
	Substring
øø\ e
(
øøe f
$num
øøf h
,
øøh i
$num
øøj k
)
øøk l
+
øøm n
$str
øøo y
+
øøz {
actualFileLineøø| ä
.øøä ã
	Substringøøã î
(øøî ï
$numøøï ó
,øøó ò
$numøøô ö
)øøö õ
+øøú ù
Environmentøøû ©
.øø© ™
NewLineøø™ ±
)øø± ≤
;øø≤ ≥
}
¿¿ 
if
¡¡ 
(
¡¡ 
expectedFileLine
¡¡ $
.
¡¡$ %
	Substring
¡¡% .
(
¡¡. /
$num
¡¡/ 1
,
¡¡1 2
$num
¡¡3 4
)
¡¡4 5
!=
¡¡6 8
actualFileLine
¡¡9 G
.
¡¡G H
	Substring
¡¡H Q
(
¡¡Q R
$num
¡¡R T
,
¡¡T U
$num
¡¡V W
)
¡¡W X
)
¡¡X Y
{
¬¬ 
	errorList
√√ 
.
√√ 
Add
√√ !
(
√√! "
$str
√√" @
+
√√A B
expectedFileLine
√√C S
.
√√S T
	Substring
√√T ]
(
√√] ^
$num
√√^ `
,
√√` a
$num
√√b c
)
√√c d
+
√√e f
$str
√√g q
+
√√r s
actualFileLine√√t Ç
.√√Ç É
	Substring√√É å
(√√å ç
$num√√ç è
,√√è ê
$num√√ë í
)√√í ì
+√√î ï
Environment√√ñ °
.√√° ¢
NewLine√√¢ ©
)√√© ™
;√√™ ´
}
≈≈ 
if
∆∆ 
(
∆∆ 
expectedFileLine
∆∆ $
.
∆∆$ %
	Substring
∆∆% .
(
∆∆. /
$num
∆∆/ 1
,
∆∆1 2
$num
∆∆3 4
)
∆∆4 5
!=
∆∆6 8
actualFileLine
∆∆9 G
.
∆∆G H
	Substring
∆∆H Q
(
∆∆Q R
$num
∆∆R T
,
∆∆T U
$num
∆∆V W
)
∆∆W X
)
∆∆X Y
{
«« 
	errorList
»» 
.
»» 
Add
»» !
(
»»! "
$str
»»" E
+
»»F G
expectedFileLine
»»H X
.
»»X Y
	Substring
»»Y b
(
»»b c
$num
»»c e
,
»»e f
$num
»»g h
)
»»h i
+
»»j k
$str
»»l v
+
»»w x
actualFileLine»»y á
.»»á à
	Substring»»à ë
(»»ë í
$num»»í î
,»»î ï
$num»»ñ ó
)»»ó ò
+»»ô ö
Environment»»õ ¶
.»»¶ ß
NewLine»»ß Æ
)»»Æ Ø
;»»Ø ∞
}
…… 
if
   
(
   
expectedFileLine
   $
.
  $ %
	Substring
  % .
(
  . /
$num
  / 1
,
  1 2
$num
  3 4
)
  4 5
!=
  6 8
actualFileLine
  9 G
.
  G H
	Substring
  H Q
(
  Q R
$num
  R T
,
  T U
$num
  V W
)
  W X
)
  X Y
{
ÀÀ 
	errorList
ÃÃ 
.
ÃÃ 
Add
ÃÃ !
(
ÃÃ! "
$str
ÃÃ" F
+
ÃÃG H
expectedFileLine
ÃÃI Y
.
ÃÃY Z
	Substring
ÃÃZ c
(
ÃÃc d
$num
ÃÃd f
,
ÃÃf g
$num
ÃÃh i
)
ÃÃi j
+
ÃÃk l
$str
ÃÃm w
+
ÃÃx y
actualFileLineÃÃz à
.ÃÃà â
	SubstringÃÃâ í
(ÃÃí ì
$numÃÃì ï
,ÃÃï ñ
$numÃÃó ò
)ÃÃò ô
+ÃÃö õ
EnvironmentÃÃú ß
.ÃÃß ®
NewLineÃÃ® Ø
)ÃÃØ ∞
;ÃÃ∞ ±
}
ÕÕ 
if
ŒŒ 
(
ŒŒ 
expectedFileLine
ŒŒ $
.
ŒŒ$ %
	Substring
ŒŒ% .
(
ŒŒ. /
$num
ŒŒ/ 1
,
ŒŒ1 2
$num
ŒŒ3 4
)
ŒŒ4 5
!=
ŒŒ6 8
actualFileLine
ŒŒ9 G
.
ŒŒG H
	Substring
ŒŒH Q
(
ŒŒQ R
$num
ŒŒR T
,
ŒŒT U
$num
ŒŒV W
)
ŒŒW X
)
ŒŒX Y
{
œœ 
	errorList
–– 
.
–– 
Add
–– !
(
––! "
$str
––" F
+
––G H
expectedFileLine
––I Y
.
––Y Z
	Substring
––Z c
(
––c d
$num
––d f
,
––f g
$num
––h i
)
––i j
+
––k l
$str
––m w
+
––x y
actualFileLine––z à
.––à â
	Substring––â í
(––í ì
$num––ì ï
,––ï ñ
$num––ó ò
)––ò ô
+––ö õ
Environment––ú ß
.––ß ®
NewLine––® Ø
)––Ø ∞
;––∞ ±
}
—— 
if
““ 
(
““ 
expectedFileLine
““ $
.
““$ %
	Substring
““% .
(
““. /
$num
““/ 1
,
““1 2
$num
““3 4
)
““4 5
!=
““6 8
actualFileLine
““9 G
.
““G H
	Substring
““H Q
(
““Q R
$num
““R T
,
““T U
$num
““V W
)
““W X
)
““X Y
{
”” 
	errorList
‘‘ 
.
‘‘ 
Add
‘‘ !
(
‘‘! "
$str
‘‘" K
+
‘‘L M
expectedFileLine
‘‘N ^
.
‘‘^ _
	Substring
‘‘_ h
(
‘‘h i
$num
‘‘i k
,
‘‘k l
$num
‘‘m n
)
‘‘n o
+
‘‘p q
$str
‘‘r |
+
‘‘} ~
actualFileLine‘‘ ç
.‘‘ç é
	Substring‘‘é ó
(‘‘ó ò
$num‘‘ò ö
,‘‘ö õ
$num‘‘ú ù
)‘‘ù û
+‘‘ü †
Environment‘‘° ¨
.‘‘¨ ≠
NewLine‘‘≠ ¥
)‘‘¥ µ
;‘‘µ ∂
}
’’ 
if
÷÷ 
(
÷÷ 
expectedFileLine
÷÷ $
.
÷÷$ %
	Substring
÷÷% .
(
÷÷. /
$num
÷÷/ 1
,
÷÷1 2
$num
÷÷3 4
)
÷÷4 5
!=
÷÷6 8
actualFileLine
÷÷9 G
.
÷÷G H
	Substring
÷÷H Q
(
÷÷Q R
$num
÷÷R T
,
÷÷T U
$num
÷÷V W
)
÷÷W X
)
÷÷X Y
{
◊◊ 
	errorList
ÿÿ 
.
ÿÿ 
Add
ÿÿ !
(
ÿÿ! "
$str
ÿÿ" G
+
ÿÿH I
expectedFileLine
ÿÿJ Z
.
ÿÿZ [
	Substring
ÿÿ[ d
(
ÿÿd e
$num
ÿÿe g
,
ÿÿg h
$num
ÿÿi j
)
ÿÿj k
+
ÿÿl m
$str
ÿÿn x
+
ÿÿy z
actualFileLineÿÿ{ â
.ÿÿâ ä
	Substringÿÿä ì
(ÿÿì î
$numÿÿî ñ
,ÿÿñ ó
$numÿÿò ô
)ÿÿô ö
+ÿÿõ ú
Environmentÿÿù ®
.ÿÿ® ©
NewLineÿÿ© ∞
)ÿÿ∞ ±
;ÿÿ± ≤
}
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 
expectedFileLine
⁄⁄ $
.
⁄⁄$ %
	Substring
⁄⁄% .
(
⁄⁄. /
$num
⁄⁄/ 1
,
⁄⁄1 2
$num
⁄⁄3 4
)
⁄⁄4 5
!=
⁄⁄6 8
actualFileLine
⁄⁄9 G
.
⁄⁄G H
	Substring
⁄⁄H Q
(
⁄⁄Q R
$num
⁄⁄R T
,
⁄⁄T U
$num
⁄⁄V W
)
⁄⁄W X
)
⁄⁄X Y
{
€€ 
	errorList
‹‹ 
.
‹‹ 
Add
‹‹ !
(
‹‹! "
$str
‹‹" G
+
‹‹H I
expectedFileLine
‹‹J Z
.
‹‹Z [
	Substring
‹‹[ d
(
‹‹d e
$num
‹‹e g
,
‹‹g h
$num
‹‹i j
)
‹‹j k
+
‹‹l m
$str
‹‹n x
+
‹‹y z
actualFileLine‹‹{ â
.‹‹â ä
	Substring‹‹ä ì
(‹‹ì î
$num‹‹î ñ
,‹‹ñ ó
$num‹‹ò ô
)‹‹ô ö
+‹‹õ ú
Environment‹‹ù ®
.‹‹® ©
NewLine‹‹© ∞
)‹‹∞ ±
;‹‹± ≤
}
›› 
if
ﬁﬁ 
(
ﬁﬁ 
expectedFileLine
ﬁﬁ $
.
ﬁﬁ$ %
	Substring
ﬁﬁ% .
(
ﬁﬁ. /
$num
ﬁﬁ/ 1
,
ﬁﬁ1 2
$num
ﬁﬁ3 4
)
ﬁﬁ4 5
!=
ﬁﬁ6 8
actualFileLine
ﬁﬁ9 G
.
ﬁﬁG H
	Substring
ﬁﬁH Q
(
ﬁﬁQ R
$num
ﬁﬁR T
,
ﬁﬁT U
$num
ﬁﬁV W
)
ﬁﬁW X
)
ﬁﬁX Y
{
ﬂﬂ 
	errorList
‡‡ 
.
‡‡ 
Add
‡‡ !
(
‡‡! "
$str
‡‡" I
+
‡‡J K
expectedFileLine
‡‡L \
.
‡‡\ ]
	Substring
‡‡] f
(
‡‡f g
$num
‡‡g i
,
‡‡i j
$num
‡‡k l
)
‡‡l m
+
‡‡n o
$str
‡‡p z
+
‡‡{ |
actualFileLine‡‡} ã
.‡‡ã å
	Substring‡‡å ï
(‡‡ï ñ
$num‡‡ñ ò
,‡‡ò ô
$num‡‡ö õ
)‡‡õ ú
+‡‡ù û
Environment‡‡ü ™
.‡‡™ ´
NewLine‡‡´ ≤
)‡‡≤ ≥
;‡‡≥ ¥
}
·· 
if
‚‚ 
(
‚‚ 
expectedFileLine
‚‚ $
.
‚‚$ %
	Substring
‚‚% .
(
‚‚. /
$num
‚‚/ 1
,
‚‚1 2
$num
‚‚3 4
)
‚‚4 5
!=
‚‚6 8
actualFileLine
‚‚9 G
.
‚‚G H
	Substring
‚‚H Q
(
‚‚Q R
$num
‚‚R T
,
‚‚T U
$num
‚‚V W
)
‚‚W X
)
‚‚X Y
{
„„ 
	errorList
‰‰ 
.
‰‰ 
Add
‰‰ !
(
‰‰! "
$str
‰‰" D
+
‰‰E F
expectedFileLine
‰‰G W
.
‰‰W X
	Substring
‰‰X a
(
‰‰a b
$num
‰‰b d
,
‰‰d e
$num
‰‰f g
)
‰‰g h
+
‰‰i j
$str
‰‰k u
+
‰‰v w
actualFileLine‰‰x Ü
.‰‰Ü á
	Substring‰‰á ê
(‰‰ê ë
$num‰‰ë ì
,‰‰ì î
$num‰‰ï ñ
)‰‰ñ ó
+‰‰ò ô
Environment‰‰ö •
.‰‰• ¶
NewLine‰‰¶ ≠
)‰‰≠ Æ
;‰‰Æ Ø
}
ÂÂ 
if
ÊÊ 
(
ÊÊ 
expectedFileLine
ÊÊ $
.
ÊÊ$ %
	Substring
ÊÊ% .
(
ÊÊ. /
$num
ÊÊ/ 1
,
ÊÊ1 2
$num
ÊÊ3 4
)
ÊÊ4 5
!=
ÊÊ6 8
actualFileLine
ÊÊ9 G
.
ÊÊG H
	Substring
ÊÊH Q
(
ÊÊQ R
$num
ÊÊR T
,
ÊÊT U
$num
ÊÊV W
)
ÊÊW X
)
ÊÊX Y
{
ÁÁ 
	errorList
ËË 
.
ËË 
Add
ËË !
(
ËË! "
$str
ËË" B
+
ËËC D
expectedFileLine
ËËE U
.
ËËU V
	Substring
ËËV _
(
ËË_ `
$num
ËË` b
,
ËËb c
$num
ËËd e
)
ËËe f
+
ËËg h
$str
ËËi s
+
ËËt u
actualFileLineËËv Ñ
.ËËÑ Ö
	SubstringËËÖ é
(ËËé è
$numËËè ë
,ËËë í
$numËËì î
)ËËî ï
+ËËñ ó
EnvironmentËËò £
.ËË£ §
NewLineËË§ ´
)ËË´ ¨
;ËË¨ ≠
}
ÈÈ 
if
ÍÍ 
(
ÍÍ 
expectedFileLine
ÍÍ $
.
ÍÍ$ %
	Substring
ÍÍ% .
(
ÍÍ. /
$num
ÍÍ/ 1
,
ÍÍ1 2
$num
ÍÍ3 4
)
ÍÍ4 5
!=
ÍÍ6 8
actualFileLine
ÍÍ9 G
.
ÍÍG H
	Substring
ÍÍH Q
(
ÍÍQ R
$num
ÍÍR T
,
ÍÍT U
$num
ÍÍV W
)
ÍÍW X
)
ÍÍX Y
{
ÎÎ 
	errorList
ÏÏ 
.
ÏÏ 
Add
ÏÏ !
(
ÏÏ! "
$str
ÏÏ" E
+
ÏÏF G
expectedFileLine
ÏÏH X
.
ÏÏX Y
	Substring
ÏÏY b
(
ÏÏb c
$num
ÏÏc e
,
ÏÏe f
$num
ÏÏg h
)
ÏÏh i
+
ÏÏj k
$str
ÏÏl v
+
ÏÏw x
actualFileLineÏÏy á
.ÏÏá à
	SubstringÏÏà ë
(ÏÏë í
$numÏÏí î
,ÏÏî ï
$numÏÏñ ó
)ÏÏó ò
+ÏÏô ö
EnvironmentÏÏõ ¶
.ÏÏ¶ ß
NewLineÏÏß Æ
)ÏÏÆ Ø
;ÏÏØ ∞
}
ÌÌ 
if
ÓÓ 
(
ÓÓ 
expectedFileLine
ÓÓ $
.
ÓÓ$ %
	Substring
ÓÓ% .
(
ÓÓ. /
$num
ÓÓ/ 1
,
ÓÓ1 2
$num
ÓÓ3 5
)
ÓÓ5 6
!=
ÓÓ7 9
actualFileLine
ÓÓ: H
.
ÓÓH I
	Substring
ÓÓI R
(
ÓÓR S
$num
ÓÓS U
,
ÓÓU V
$num
ÓÓW Y
)
ÓÓY Z
)
ÓÓZ [
{
ÔÔ 
	errorList
 
.
 
Add
 !
(
! "
$str
" F
+
G H
expectedFileLine
I Y
.
Y Z
	Substring
Z c
(
c d
$num
d f
,
f g
$num
h j
)
j k
+
l m
$str
n x
+
y z
actualFileLine{ â
.â ä
	Substringä ì
(ì î
$numî ñ
,ñ ó
$numò ö
)ö õ
+ú ù
Environmentû ©
.© ™
NewLine™ ±
)± ≤
;≤ ≥
}
ÒÒ 
if
ÚÚ 
(
ÚÚ 
expectedFileLine
ÚÚ $
.
ÚÚ$ %
	Substring
ÚÚ% .
(
ÚÚ. /
$num
ÚÚ/ 1
,
ÚÚ1 2
$num
ÚÚ3 4
)
ÚÚ4 5
!=
ÚÚ6 8
actualFileLine
ÚÚ9 G
.
ÚÚG H
	Substring
ÚÚH Q
(
ÚÚQ R
$num
ÚÚR T
,
ÚÚT U
$num
ÚÚV W
)
ÚÚW X
)
ÚÚX Y
{
ÛÛ 
	errorList
ÙÙ 
.
ÙÙ 
Add
ÙÙ !
(
ÙÙ! "
$str
ÙÙ" D
+
ÙÙE F
expectedFileLine
ÙÙG W
.
ÙÙW X
	Substring
ÙÙX a
(
ÙÙa b
$num
ÙÙb d
,
ÙÙd e
$num
ÙÙf g
)
ÙÙg h
+
ÙÙi j
$str
ÙÙk u
+
ÙÙv w
actualFileLineÙÙx Ü
.ÙÙÜ á
	SubstringÙÙá ê
(ÙÙê ë
$numÙÙë ì
,ÙÙì î
$numÙÙï ñ
)ÙÙñ ó
+ÙÙò ô
EnvironmentÙÙö •
.ÙÙ• ¶
NewLineÙÙ¶ ≠
)ÙÙ≠ Æ
;ÙÙÆ Ø
}
ıı 
if
ˆˆ 
(
ˆˆ 
expectedFileLine
ˆˆ $
.
ˆˆ$ %
	Substring
ˆˆ% .
(
ˆˆ. /
$num
ˆˆ/ 2
,
ˆˆ2 3
$num
ˆˆ4 5
)
ˆˆ5 6
!=
ˆˆ7 9
actualFileLine
ˆˆ: H
.
ˆˆH I
	Substring
ˆˆI R
(
ˆˆR S
$num
ˆˆS V
,
ˆˆV W
$num
ˆˆX Y
)
ˆˆY Z
)
ˆˆZ [
{
˜˜ 
	errorList
¯¯ 
.
¯¯ 
Add
¯¯ !
(
¯¯! "
$str
¯¯" E
+
¯¯F G
expectedFileLine
¯¯H X
.
¯¯X Y
	Substring
¯¯Y b
(
¯¯b c
$num
¯¯c f
,
¯¯f g
$num
¯¯h i
)
¯¯i j
+
¯¯k l
$str
¯¯m w
+
¯¯x y
actualFileLine¯¯z à
.¯¯à â
	Substring¯¯â í
(¯¯í ì
$num¯¯ì ñ
,¯¯ñ ó
$num¯¯ò ô
)¯¯ô ö
+¯¯õ ú
Environment¯¯ù ®
.¯¯® ©
NewLine¯¯© ∞
)¯¯∞ ±
;¯¯± ≤
}
˘˘ 
if
˙˙ 
(
˙˙ 
expectedFileLine
˙˙ $
.
˙˙$ %
	Substring
˙˙% .
(
˙˙. /
$num
˙˙/ 2
,
˙˙2 3
$num
˙˙4 5
)
˙˙5 6
!=
˙˙7 9
actualFileLine
˙˙: H
.
˙˙H I
	Substring
˙˙I R
(
˙˙R S
$num
˙˙S V
,
˙˙V W
$num
˙˙X Y
)
˙˙Y Z
)
˙˙Z [
{
˚˚ 
	errorList
¸¸ 
.
¸¸ 
Add
¸¸ !
(
¸¸! "
$str
¸¸" D
+
¸¸E F
expectedFileLine
¸¸G W
.
¸¸W X
	Substring
¸¸X a
(
¸¸a b
$num
¸¸b e
,
¸¸e f
$num
¸¸g h
)
¸¸h i
+
¸¸j k
$str
¸¸l v
+
¸¸w x
actualFileLine¸¸y á
.¸¸á à
	Substring¸¸à ë
(¸¸ë í
$num¸¸í ï
,¸¸ï ñ
$num¸¸ó ò
)¸¸ò ô
+¸¸ö õ
Environment¸¸ú ß
.¸¸ß ®
NewLine¸¸® Ø
)¸¸Ø ∞
;¸¸∞ ±
}
˝˝ 
if
˛˛ 
(
˛˛ 
expectedFileLine
˛˛ $
.
˛˛$ %
	Substring
˛˛% .
(
˛˛. /
$num
˛˛/ 2
,
˛˛2 3
$num
˛˛4 6
)
˛˛6 7
!=
˛˛8 :
actualFileLine
˛˛; I
.
˛˛I J
	Substring
˛˛J S
(
˛˛S T
$num
˛˛T W
,
˛˛W X
$num
˛˛Y [
)
˛˛[ \
)
˛˛\ ]
{
ˇˇ 
	errorList
ÄÄ 
.
ÄÄ 
Add
ÄÄ !
(
ÄÄ! "
$str
ÄÄ" D
+
ÄÄE F
expectedFileLine
ÄÄG W
.
ÄÄW X
	Substring
ÄÄX a
(
ÄÄa b
$num
ÄÄb e
,
ÄÄe f
$num
ÄÄg i
)
ÄÄi j
+
ÄÄk l
$str
ÄÄm w
+
ÄÄx y
actualFileLineÄÄz à
.ÄÄà â
	SubstringÄÄâ í
(ÄÄí ì
$numÄÄì ñ
,ÄÄñ ó
$numÄÄò ö
)ÄÄö õ
+ÄÄú ù
EnvironmentÄÄû ©
.ÄÄ© ™
NewLineÄÄ™ ±
)ÄÄ± ≤
;ÄÄ≤ ≥
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
expectedFileLine
ÇÇ $
.
ÇÇ$ %
	Substring
ÇÇ% .
(
ÇÇ. /
$num
ÇÇ/ 2
,
ÇÇ2 3
$num
ÇÇ4 5
)
ÇÇ5 6
!=
ÇÇ7 9
actualFileLine
ÇÇ: H
.
ÇÇH I
	Substring
ÇÇI R
(
ÇÇR S
$num
ÇÇS V
,
ÇÇV W
$num
ÇÇX Y
)
ÇÇY Z
)
ÇÇZ [
{
ÉÉ 
	errorList
ÑÑ 
.
ÑÑ 
Add
ÑÑ !
(
ÑÑ! "
$str
ÑÑ" H
+
ÑÑI J
expectedFileLine
ÑÑK [
.
ÑÑ[ \
	Substring
ÑÑ\ e
(
ÑÑe f
$num
ÑÑf i
,
ÑÑi j
$num
ÑÑk l
)
ÑÑl m
+
ÑÑn o
$str
ÑÑp z
+
ÑÑ{ |
actualFileLineÑÑ} ã
.ÑÑã å
	SubstringÑÑå ï
(ÑÑï ñ
$numÑÑñ ô
,ÑÑô ö
$numÑÑõ ú
)ÑÑú ù
+ÑÑû ü
EnvironmentÑÑ† ´
.ÑÑ´ ¨
NewLineÑÑ¨ ≥
)ÑÑ≥ ¥
;ÑÑ¥ µ
}
ÖÖ 
if
ÜÜ 
(
ÜÜ 
expectedFileLine
ÜÜ $
.
ÜÜ$ %
	Substring
ÜÜ% .
(
ÜÜ. /
$num
ÜÜ/ 2
,
ÜÜ2 3
$num
ÜÜ4 5
)
ÜÜ5 6
!=
ÜÜ7 9
actualFileLine
ÜÜ: H
.
ÜÜH I
	Substring
ÜÜI R
(
ÜÜR S
$num
ÜÜS V
,
ÜÜV W
$num
ÜÜX Y
)
ÜÜY Z
)
ÜÜZ [
{
áá 
	errorList
àà 
.
àà 
Add
àà !
(
àà! "
$str
àà" F
+
ààG H
expectedFileLine
ààI Y
.
ààY Z
	Substring
ààZ c
(
ààc d
$num
ààd g
,
ààg h
$num
àài j
)
ààj k
+
ààl m
$str
ààn x
+
àày z
actualFileLineàà{ â
.ààâ ä
	Substringààä ì
(ààì î
$numààî ó
,ààó ò
$numààô ö
)ààö õ
+ààú ù
Environmentààû ©
.àà© ™
NewLineàà™ ±
)àà± ≤
;àà≤ ≥
}
ââ 
if
ää 
(
ää 
expectedFileLine
ää $
.
ää$ %
	Substring
ää% .
(
ää. /
$num
ää/ 2
,
ää2 3
$num
ää4 7
)
ää7 8
!=
ää9 ;
actualFileLine
ää< J
.
ääJ K
	Substring
ääK T
(
ääT U
$num
ääU X
,
ääX Y
$num
ääZ ]
)
ää] ^
)
ää^ _
{
ãã 
	errorList
åå 
.
åå 
Add
åå !
(
åå! "
$str
åå" B
+
ååC D
expectedFileLine
ååE U
.
ååU V
	Substring
ååV _
(
åå_ `
$num
åå` c
,
ååc d
$num
ååe h
)
ååh i
+
ååj k
$str
åål v
+
ååw x
actualFileLineååy á
.ååá à
	Substringååà ë
(ååë í
$numååí ï
,ååï ñ
$numååó ö
)ååö õ
+ååú ù
Environmentååû ©
.åå© ™
NewLineåå™ ±
)åå± ≤
;åå≤ ≥
}
çç 
if
êê 
(
êê 
	errorList
êê 
.
êê 
Any
êê !
(
êê! "
)
êê" #
)
êê# $
{
ëë 
if
íí 
(
íí 
	errorList
íí !
.
íí! "
Any
íí" %
(
íí% &
)
íí& '
)
íí' (
{
ìì 
	errorList
îî !
.
îî! "
Insert
îî" (
(
îî( )
$num
îî) *
,
îî* +
$str
îî, T
+
îîU V
Environment
îîW b
.
îîb c
NewLine
îîc j
)
îîj k
;
îîk l
}
ïï 
File
ññ 
.
ññ 
AppendAllText
ññ &
(
ññ& '"
ApplicationConstants
ññ' ;
.
ññ; <
LOG_FILE
ññ< D
,
ññD E
$str
ññF n
+
ñño p
Environment
ññq |
.
ññ| }
NewLineññ} Ñ
)ññÑ Ö
;ññÖ Ü
File
óó 
.
óó 
AppendAllText
óó &
(
óó& '"
ApplicationConstants
óó' ;
.
óó; <
LOG_FILE
óó< D
,
óóD E
$str
óóF Y
+
óóZ [
expectedFileLine
óó\ l
+
óóm n
Environment
óóo z
.
óóz {
NewLineóó{ Ç
)óóÇ É
;óóÉ Ñ
File
òò 
.
òò 
AppendAllText
òò &
(
òò& '"
ApplicationConstants
òò' ;
.
òò; <
LOG_FILE
òò< D
,
òòD E
$str
òòF W
+
òòX Y
actualFileLine
òòZ h
+
òòi j
Environment
òòk v
.
òòv w
NewLine
òòw ~
)
òò~ 
;òò Ä
File
ôô 
.
ôô 
AppendAllText
ôô &
(
ôô& '"
ApplicationConstants
ôô' ;
.
ôô; <
LOG_FILE
ôô< D
,
ôôD E
string
ôôF L
.
ôôL M
Join
ôôM Q
(
ôôQ R
$str
ôôR U
,
ôôU V
	errorList
ôôW `
)
ôô` a
)
ôôa b
;
ôôb c
return
öö 
false
öö  
;
öö  !
}
õõ 
else
úú 
{
ùù 
return
ûû 
true
ûû 
;
ûû  
}
üü 
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
ex
££ 
)
££  
{
§§ 
throw
¶¶ 
ex
¶¶ 
;
¶¶ 
}
ßß 
}
®® 	
public
©© 
bool
©© '
CompareDeliveryUnitHeader
©© -
(
©©- .
string
©©. 4
expectedFileLine
©©5 E
,
©©E F
string
©©G M
actualFileLine
©©N \
,
©©\ ]
string
©©^ d
du
©©e g
)
©©g h
{
™™ 	
try
´´ 
{
¨¨ 
List
≠≠ 
<
≠≠ 
string
≠≠ 
>
≠≠ 
	errorList
≠≠ &
=
≠≠' (
new
≠≠) ,
List
≠≠- 1
<
≠≠1 2
string
≠≠2 8
>
≠≠8 9
(
≠≠9 :
)
≠≠: ;
;
≠≠; <
if
ØØ 
(
ØØ 
expectedFileLine
ØØ $
.
ØØ$ %
	Substring
ØØ% .
(
ØØ. /
$num
ØØ/ 0
,
ØØ0 1
$num
ØØ2 3
)
ØØ3 4
!=
ØØ5 7
actualFileLine
ØØ8 F
.
ØØF G
	Substring
ØØG P
(
ØØP Q
$num
ØØQ R
,
ØØR S
$num
ØØT U
)
ØØU V
)
ØØV W
{
∞∞ 
	errorList
±± 
.
±± 
Add
±± !
(
±±! "
$str
±±" <
+
±±= >
du
±±? A
+
±±B C
$str
±±D Q
+
±±R S
expectedFileLine
±±T d
.
±±d e
	Substring
±±e n
(
±±n o
$num
±±o p
,
±±p q
$num
±±r s
)
±±s t
+
±±u v
$str±±w Å
+±±Ç É
actualFileLine±±Ñ í
.±±í ì
	Substring±±ì ú
(±±ú ù
$num±±ù û
,±±û ü
$num±±† °
)±±° ¢
+±±£ §
Environment±±• ∞
.±±∞ ±
NewLine±±± ∏
)±±∏ π
;±±π ∫
}
≤≤ 
if
≥≥ 
(
≥≥ 
expectedFileLine
≥≥ $
.
≥≥$ %
	Substring
≥≥% .
(
≥≥. /
$num
≥≥/ 0
,
≥≥0 1
$num
≥≥2 3
)
≥≥3 4
!=
≥≥5 7
actualFileLine
≥≥8 F
.
≥≥F G
	Substring
≥≥G P
(
≥≥P Q
$num
≥≥Q R
,
≥≥R S
$num
≥≥T U
)
≥≥U V
)
≥≥V W
{
¥¥ 
	errorList
µµ 
.
µµ 
Add
µµ !
(
µµ! "
$str
µµ" B
+
µµC D
du
µµE G
+
µµH I
$str
µµJ W
+
µµX Y
expectedFileLine
µµZ j
.
µµj k
	Substring
µµk t
(
µµt u
$num
µµu v
,
µµv w
$num
µµx y
)
µµy z
+
µµ{ |
$strµµ} á
+µµà â
actualFileLineµµä ò
.µµò ô
	Substringµµô ¢
(µµ¢ £
$numµµ£ §
,µµ§ •
$numµµ¶ ß
)µµß ®
+µµ© ™
Environmentµµ´ ∂
.µµ∂ ∑
NewLineµµ∑ æ
)µµæ ø
;µµø ¿
}
∂∂ 
if
∑∑ 
(
∑∑ 
expectedFileLine
∑∑ $
.
∑∑$ %
	Substring
∑∑% .
(
∑∑. /
$num
∑∑/ 0
,
∑∑0 1
$num
∑∑2 3
)
∑∑3 4
!=
∑∑5 7
actualFileLine
∑∑8 F
.
∑∑F G
	Substring
∑∑G P
(
∑∑P Q
$num
∑∑Q R
,
∑∑R S
$num
∑∑T U
)
∑∑U V
)
∑∑V W
{
∏∏ 
	errorList
ππ 
.
ππ 
Add
ππ !
(
ππ! "
$str
ππ" 8
+
ππ9 :
du
ππ; =
+
ππ> ?
$str
ππ@ M
+
ππN O
expectedFileLine
ππP `
.
ππ` a
	Substring
ππa j
(
ππj k
$num
ππk l
,
ππl m
$num
ππn o
)
ππo p
+
ππq r
$str
ππs }
+
ππ~ 
actualFileLineππÄ é
.ππé è
	Substringππè ò
(ππò ô
$numππô ö
,ππö õ
$numππú ù
)ππù û
+ππü †
Environmentππ° ¨
.ππ¨ ≠
NewLineππ≠ ¥
)ππ¥ µ
;ππµ ∂
}
∫∫ 
if
ªª 
(
ªª 
expectedFileLine
ªª $
.
ªª$ %
	Substring
ªª% .
(
ªª. /
$num
ªª/ 0
,
ªª0 1
$num
ªª2 4
)
ªª4 5
!=
ªª6 8
actualFileLine
ªª9 G
.
ªªG H
	Substring
ªªH Q
(
ªªQ R
$num
ªªR S
,
ªªS T
$num
ªªU W
)
ªªW X
)
ªªX Y
{
ºº 
	errorList
ΩΩ 
.
ΩΩ 
Add
ΩΩ !
(
ΩΩ! "
$str
ΩΩ" 6
+
ΩΩ7 8
du
ΩΩ9 ;
+
ΩΩ< =
$str
ΩΩ> K
+
ΩΩL M
expectedFileLine
ΩΩN ^
.
ΩΩ^ _
	Substring
ΩΩ_ h
(
ΩΩh i
$num
ΩΩi j
,
ΩΩj k
$num
ΩΩl n
)
ΩΩn o
+
ΩΩp q
$str
ΩΩr |
+
ΩΩ} ~
actualFileLineΩΩ ç
.ΩΩç é
	SubstringΩΩé ó
(ΩΩó ò
$numΩΩò ô
,ΩΩô ö
$numΩΩõ ù
)ΩΩù û
+ΩΩü †
EnvironmentΩΩ° ¨
.ΩΩ¨ ≠
NewLineΩΩ≠ ¥
)ΩΩ¥ µ
;ΩΩµ ∂
}
ææ 
if
øø 
(
øø 
expectedFileLine
øø $
.
øø$ %
	Substring
øø% .
(
øø. /
$num
øø/ 1
,
øø1 2
$num
øø3 5
)
øø5 6
!=
øø7 9
actualFileLine
øø: H
.
øøH I
	Substring
øøI R
(
øøR S
$num
øøS U
,
øøU V
$num
øøW Y
)
øøY Z
)
øøZ [
{
¿¿ 
	errorList
¡¡ 
.
¡¡ 
Add
¡¡ !
(
¡¡! "
$str
¡¡" H
+
¡¡I J
du
¡¡K M
+
¡¡N O
$str
¡¡P ]
+
¡¡^ _
expectedFileLine
¡¡` p
.
¡¡p q
	Substring
¡¡q z
(
¡¡z {
$num
¡¡{ }
,
¡¡} ~
$num¡¡ Å
)¡¡Å Ç
+¡¡É Ñ
$str¡¡Ö è
+¡¡ê ë
actualFileLine¡¡í †
.¡¡† °
	Substring¡¡° ™
(¡¡™ ´
$num¡¡´ ≠
,¡¡≠ Æ
$num¡¡Ø ±
)¡¡± ≤
+¡¡≥ ¥
Environment¡¡µ ¿
.¡¡¿ ¡
NewLine¡¡¡ »
)¡¡» …
;¡¡…  
}
¬¬ 
if
√√ 
(
√√ 
expectedFileLine
√√ $
.
√√$ %
	Substring
√√% .
(
√√. /
$num
√√/ 1
,
√√1 2
$num
√√3 5
)
√√5 6
!=
√√7 9
actualFileLine
√√: H
.
√√H I
	Substring
√√I R
(
√√R S
$num
√√S U
,
√√U V
$num
√√W Y
)
√√Y Z
)
√√Z [
{
ƒƒ 
	errorList
≈≈ 
.
≈≈ 
Add
≈≈ !
(
≈≈! "
$str
≈≈" O
+
≈≈P Q
du
≈≈R T
+
≈≈U V
$str
≈≈W d
+
≈≈e f
expectedFileLine
≈≈g w
.
≈≈w x
	Substring≈≈x Å
(≈≈Å Ç
$num≈≈Ç Ñ
,≈≈Ñ Ö
$num≈≈Ü à
)≈≈à â
+≈≈ä ã
$str≈≈å ñ
+≈≈ó ò
actualFileLine≈≈ô ß
.≈≈ß ®
	Substring≈≈® ±
(≈≈± ≤
$num≈≈≤ ¥
,≈≈¥ µ
$num≈≈∂ ∏
)≈≈∏ π
+≈≈∫ ª
Environment≈≈º «
.≈≈« »
NewLine≈≈» œ
)≈≈œ –
;≈≈– —
}
∆∆ 
if
«« 
(
«« 
expectedFileLine
«« $
.
««$ %
	Substring
««% .
(
««. /
$num
««/ 1
,
««1 2
$num
««3 4
)
««4 5
!=
««6 8
actualFileLine
««9 G
.
««G H
	Substring
««H Q
(
««Q R
$num
««R T
,
««T U
$num
««V W
)
««W X
)
««X Y
{
»» 
	errorList
…… 
.
…… 
Add
…… !
(
……! "
$str
……" :
+
……; <
du
……= ?
+
……@ A
$str
……B O
+
……P Q
expectedFileLine
……R b
.
……b c
	Substring
……c l
(
……l m
$num
……m o
,
……o p
$num
……q r
)
……r s
+
……t u
$str……v Ä
+……Å Ç
actualFileLine……É ë
.……ë í
	Substring……í õ
(……õ ú
$num……ú û
,……û ü
$num……† °
)……° ¢
+……£ §
Environment……• ∞
.……∞ ±
NewLine……± ∏
)……∏ π
;……π ∫
}
   
if
ÀÀ 
(
ÀÀ 
expectedFileLine
ÀÀ $
.
ÀÀ$ %
	Substring
ÀÀ% .
(
ÀÀ. /
$num
ÀÀ/ 1
,
ÀÀ1 2
$num
ÀÀ3 4
)
ÀÀ4 5
!=
ÀÀ6 8
actualFileLine
ÀÀ9 G
.
ÀÀG H
	Substring
ÀÀH Q
(
ÀÀQ R
$num
ÀÀR T
,
ÀÀT U
$num
ÀÀV W
)
ÀÀW X
)
ÀÀX Y
{
ÃÃ 
	errorList
ÕÕ 
.
ÕÕ 
Add
ÕÕ !
(
ÕÕ! "
$str
ÕÕ" K
+
ÕÕL M
du
ÕÕN P
+
ÕÕQ R
$str
ÕÕS `
+
ÕÕa b
expectedFileLine
ÕÕc s
.
ÕÕs t
	Substring
ÕÕt }
(
ÕÕ} ~
$numÕÕ~ Ä
,ÕÕÄ Å
$numÕÕÇ É
)ÕÕÉ Ñ
+ÕÕÖ Ü
$strÕÕá ë
+ÕÕí ì
actualFileLineÕÕî ¢
.ÕÕ¢ £
	SubstringÕÕ£ ¨
(ÕÕ¨ ≠
$numÕÕ≠ Ø
,ÕÕØ ∞
$numÕÕ± ≤
)ÕÕ≤ ≥
+ÕÕ¥ µ
EnvironmentÕÕ∂ ¡
.ÕÕ¡ ¬
NewLineÕÕ¬ …
)ÕÕ…  
;ÕÕ  À
}
ŒŒ 
if
œœ 
(
œœ 
expectedFileLine
œœ $
.
œœ$ %
	Substring
œœ% .
(
œœ. /
$num
œœ/ 1
,
œœ1 2
$num
œœ3 4
)
œœ4 5
!=
œœ6 8
actualFileLine
œœ9 G
.
œœG H
	Substring
œœH Q
(
œœQ R
$num
œœR T
,
œœT U
$num
œœV W
)
œœW X
)
œœX Y
{
–– 
	errorList
—— 
.
—— 
Add
—— !
(
——! "
$str
——" I
+
——J K
du
——L N
+
——O P
$str
——Q ^
+
——_ `
expectedFileLine
——a q
.
——q r
	Substring
——r {
(
——{ |
$num
——| ~
,
——~ 
$num——Ä Å
)——Å Ç
+——É Ñ
$str——Ö è
+——ê ë
actualFileLine——í †
.——† °
	Substring——° ™
(——™ ´
$num——´ ≠
,——≠ Æ
$num——Ø ∞
)——∞ ±
+——≤ ≥
Environment——¥ ø
.——ø ¿
NewLine——¿ «
)——« »
;——» …
}
““ 
if
”” 
(
”” 
expectedFileLine
”” $
.
””$ %
	Substring
””% .
(
””. /
$num
””/ 1
,
””1 2
$num
””3 4
)
””4 5
!=
””6 8
actualFileLine
””9 G
.
””G H
	Substring
””H Q
(
””Q R
$num
””R T
,
””T U
$num
””V W
)
””W X
)
””X Y
{
‘‘ 
	errorList
’’ 
.
’’ 
Add
’’ !
(
’’! "
$str
’’" J
+
’’K L
du
’’M O
+
’’P Q
$str
’’R _
+
’’` a
expectedFileLine
’’b r
.
’’r s
	Substring
’’s |
(
’’| }
$num
’’} 
,’’ Ä
$num’’Å Ç
)’’Ç É
+’’Ñ Ö
$str’’Ü ê
+’’ë í
actualFileLine’’ì °
.’’° ¢
	Substring’’¢ ´
(’’´ ¨
$num’’¨ Æ
,’’Æ Ø
$num’’∞ ±
)’’± ≤
+’’≥ ¥
Environment’’µ ¿
.’’¿ ¡
NewLine’’¡ »
)’’» …
;’’…  
}
÷÷ 
if
◊◊ 
(
◊◊ 
expectedFileLine
◊◊ $
.
◊◊$ %
	Substring
◊◊% .
(
◊◊. /
$num
◊◊/ 1
,
◊◊1 2
$num
◊◊3 4
)
◊◊4 5
!=
◊◊6 8
actualFileLine
◊◊9 G
.
◊◊G H
	Substring
◊◊H Q
(
◊◊Q R
$num
◊◊R T
,
◊◊T U
$num
◊◊V W
)
◊◊W X
)
◊◊X Y
{
ÿÿ 
	errorList
ŸŸ 
.
ŸŸ 
Add
ŸŸ !
(
ŸŸ! "
$str
ŸŸ" F
+
ŸŸG H
du
ŸŸI K
+
ŸŸL M
$str
ŸŸN [
+
ŸŸ\ ]
expectedFileLine
ŸŸ^ n
.
ŸŸn o
	Substring
ŸŸo x
(
ŸŸx y
$num
ŸŸy {
,
ŸŸ{ |
$num
ŸŸ} 
)ŸŸ Ä
+ŸŸÅ Ç
$strŸŸÉ ç
+ŸŸé è
actualFileLineŸŸê û
.ŸŸû ü
	SubstringŸŸü ®
(ŸŸ® ©
$numŸŸ© ´
,ŸŸ´ ¨
$numŸŸ≠ Ø
)ŸŸØ ∞
+ŸŸ± ≤
EnvironmentŸŸ≥ æ
.ŸŸæ ø
NewLineŸŸø ∆
)ŸŸ∆ «
;ŸŸ« »
}
⁄⁄ 
if
€€ 
(
€€ 
expectedFileLine
€€ $
.
€€$ %
	Substring
€€% .
(
€€. /
$num
€€/ 1
,
€€1 2
$num
€€3 4
)
€€4 5
!=
€€6 8
actualFileLine
€€9 G
.
€€G H
	Substring
€€H Q
(
€€Q R
$num
€€R T
,
€€T U
$num
€€V W
)
€€W X
)
€€X Y
{
‹‹ 
	errorList
›› 
.
›› 
Add
›› !
(
››! "
$str
››" D
+
››E F
du
››G I
+
››J K
$str
››L Y
+
››Z [
expectedFileLine
››\ l
.
››l m
	Substring
››m v
(
››v w
$num
››w y
,
››y z
$num
››{ |
)
››| }
+
››~ 
$str››Ä ä
+››ã å
actualFileLine››ç õ
.››õ ú
	Substring››ú •
(››• ¶
$num››¶ ®
,››® ©
$num››™ ´
)››´ ¨
+››≠ Æ
Environment››Ø ∫
.››∫ ª
NewLine››ª ¬
)››¬ √
;››√ ƒ
}
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
expectedFileLine
ﬂﬂ $
.
ﬂﬂ$ %
	Substring
ﬂﬂ% .
(
ﬂﬂ. /
$num
ﬂﬂ/ 1
,
ﬂﬂ1 2
$num
ﬂﬂ3 4
)
ﬂﬂ4 5
!=
ﬂﬂ6 8
actualFileLine
ﬂﬂ9 G
.
ﬂﬂG H
	Substring
ﬂﬂH Q
(
ﬂﬂQ R
$num
ﬂﬂR T
,
ﬂﬂT U
$num
ﬂﬂV W
)
ﬂﬂW X
)
ﬂﬂX Y
{
‡‡ 
	errorList
·· 
.
·· 
Add
·· !
(
··! "
$str
··" I
+
··J K
du
··L N
+
··O P
$str
··Q ^
+
··_ `
expectedFileLine
··a q
.
··q r
	Substring
··r {
(
··{ |
$num
··| ~
,
··~ 
$num··Ä Å
)··Å Ç
+··É Ñ
$str··Ö è
+··ê ë
actualFileLine··í †
.··† °
	Substring··° ™
(··™ ´
$num··´ ≠
,··≠ Æ
$num··Ø ≤
)··≤ ≥
+··¥ µ
Environment··∂ ¡
.··¡ ¬
NewLine··¬ …
)··…  
;··  À
}
‚‚ 
if
„„ 
(
„„ 
expectedFileLine
„„ $
.
„„$ %
	Substring
„„% .
(
„„. /
$num
„„/ 1
,
„„1 2
$num
„„3 4
)
„„4 5
!=
„„6 8
actualFileLine
„„9 G
.
„„G H
	Substring
„„H Q
(
„„Q R
$num
„„R T
,
„„T U
$num
„„V W
)
„„W X
)
„„X Y
{
‰‰ 
	errorList
ÂÂ 
.
ÂÂ 
Add
ÂÂ !
(
ÂÂ! "
$str
ÂÂ" F
+
ÂÂG H
du
ÂÂI K
+
ÂÂL M
$str
ÂÂN [
+
ÂÂ\ ]
expectedFileLine
ÂÂ^ n
.
ÂÂn o
	Substring
ÂÂo x
(
ÂÂx y
$num
ÂÂy {
,
ÂÂ{ |
$num
ÂÂ} ~
)
ÂÂ~ 
+ÂÂÄ Å
$strÂÂÇ å
+ÂÂç é
actualFileLineÂÂè ù
.ÂÂù û
	SubstringÂÂû ß
(ÂÂß ®
$numÂÂ® ™
,ÂÂ™ ´
$numÂÂ¨ ≠
)ÂÂ≠ Æ
+ÂÂØ ∞
EnvironmentÂÂ± º
.ÂÂº Ω
NewLineÂÂΩ ƒ
)ÂÂƒ ≈
;ÂÂ≈ ∆
}
ÊÊ 
if
ÁÁ 
(
ÁÁ 
expectedFileLine
ÁÁ $
.
ÁÁ$ %
	Substring
ÁÁ% .
(
ÁÁ. /
$num
ÁÁ/ 1
,
ÁÁ1 2
$num
ÁÁ3 4
)
ÁÁ4 5
!=
ÁÁ6 8
actualFileLine
ÁÁ9 G
.
ÁÁG H
	Substring
ÁÁH Q
(
ÁÁQ R
$num
ÁÁR T
,
ÁÁT U
$num
ÁÁV W
)
ÁÁW X
)
ÁÁX Y
{
ËË 
	errorList
ÈÈ 
.
ÈÈ 
Add
ÈÈ !
(
ÈÈ! "
$str
ÈÈ" 7
+
ÈÈ8 9
du
ÈÈ: <
+
ÈÈ= >
$str
ÈÈ? L
+
ÈÈM N
expectedFileLine
ÈÈO _
.
ÈÈ_ `
	Substring
ÈÈ` i
(
ÈÈi j
$num
ÈÈj l
,
ÈÈl m
$num
ÈÈn o
)
ÈÈo p
+
ÈÈq r
$str
ÈÈs }
+
ÈÈ~ 
actualFileLineÈÈÄ é
.ÈÈé è
	SubstringÈÈè ò
(ÈÈò ô
$numÈÈô õ
,ÈÈõ ú
$numÈÈù û
)ÈÈû ü
+ÈÈ† °
EnvironmentÈÈ¢ ≠
.ÈÈ≠ Æ
NewLineÈÈÆ µ
)ÈÈµ ∂
;ÈÈ∂ ∑
}
ÍÍ 
if
ÎÎ 
(
ÎÎ 
expectedFileLine
ÎÎ $
.
ÎÎ$ %
	Substring
ÎÎ% .
(
ÎÎ. /
$num
ÎÎ/ 1
,
ÎÎ1 2
$num
ÎÎ3 4
)
ÎÎ4 5
!=
ÎÎ6 8
actualFileLine
ÎÎ9 G
.
ÎÎG H
	Substring
ÎÎH Q
(
ÎÎQ R
$num
ÎÎR T
,
ÎÎT U
$num
ÎÎV W
)
ÎÎW X
)
ÎÎX Y
{
ÏÏ 
	errorList
ÌÌ 
.
ÌÌ 
Add
ÌÌ !
(
ÌÌ! "
$str
ÌÌ" 8
+
ÌÌ9 :
du
ÌÌ; =
+
ÌÌ> ?
$str
ÌÌ@ M
+
ÌÌN O
expectedFileLine
ÌÌP `
.
ÌÌ` a
	Substring
ÌÌa j
(
ÌÌj k
$num
ÌÌk m
,
ÌÌm n
$num
ÌÌo p
)
ÌÌp q
+
ÌÌr s
$str
ÌÌt ~
+ÌÌ Ä
actualFileLineÌÌÅ è
.ÌÌè ê
	SubstringÌÌê ô
(ÌÌô ö
$numÌÌö ú
,ÌÌú ù
$numÌÌû ü
)ÌÌü †
+ÌÌ° ¢
EnvironmentÌÌ£ Æ
.ÌÌÆ Ø
NewLineÌÌØ ∂
)ÌÌ∂ ∑
;ÌÌ∑ ∏
}
ÓÓ 
if
ÔÔ 
(
ÔÔ 
expectedFileLine
ÔÔ $
.
ÔÔ$ %
	Substring
ÔÔ% .
(
ÔÔ. /
$num
ÔÔ/ 1
,
ÔÔ1 2
$num
ÔÔ3 4
)
ÔÔ4 5
!=
ÔÔ6 8
actualFileLine
ÔÔ9 G
.
ÔÔG H
	Substring
ÔÔH Q
(
ÔÔQ R
$num
ÔÔR T
,
ÔÔT U
$num
ÔÔV W
)
ÔÔW X
)
ÔÔX Y
{
 
	errorList
ÒÒ 
.
ÒÒ 
Add
ÒÒ !
(
ÒÒ! "
$str
ÒÒ" >
+
ÒÒ? @
du
ÒÒA C
+
ÒÒD E
$str
ÒÒF S
+
ÒÒT U
expectedFileLine
ÒÒV f
.
ÒÒf g
	Substring
ÒÒg p
(
ÒÒp q
$num
ÒÒq s
,
ÒÒs t
$num
ÒÒu v
)
ÒÒv w
+
ÒÒx y
$strÒÒz Ñ
+ÒÒÖ Ü
actualFileLineÒÒá ï
.ÒÒï ñ
	SubstringÒÒñ ü
(ÒÒü †
$numÒÒ† ¢
,ÒÒ¢ £
$numÒÒ§ •
)ÒÒ• ¶
+ÒÒß ®
EnvironmentÒÒ© ¥
.ÒÒ¥ µ
NewLineÒÒµ º
)ÒÒº Ω
;ÒÒΩ æ
}
ÚÚ 
if
ÛÛ 
(
ÛÛ 
expectedFileLine
ÛÛ $
.
ÛÛ$ %
	Substring
ÛÛ% .
(
ÛÛ. /
$num
ÛÛ/ 2
,
ÛÛ2 3
$num
ÛÛ4 5
)
ÛÛ5 6
!=
ÛÛ7 9
actualFileLine
ÛÛ: H
.
ÛÛH I
	Substring
ÛÛI R
(
ÛÛR S
$num
ÛÛS V
,
ÛÛV W
$num
ÛÛX Y
)
ÛÛY Z
)
ÛÛZ [
{
ÙÙ 
	errorList
ıı 
.
ıı 
Add
ıı !
(
ıı! "
$str
ıı" >
+
ıı? @
du
ııA C
+
ııD E
$str
ııF S
+
ııT U
expectedFileLine
ııV f
.
ııf g
	Substring
ııg p
(
ııp q
$num
ııq t
,
ııt u
$num
ııv w
)
ııw x
+
ııy z
$strıı{ Ö
+ııÜ á
actualFileLineııà ñ
.ııñ ó
	Substringııó †
(ıı† °
$numıı° §
,ıı§ •
$numıı¶ ß
)ııß ®
+ıı© ™
Environmentıı´ ∂
.ıı∂ ∑
NewLineıı∑ æ
)ııæ ø
;ııø ¿
}
ˆˆ 
if
¯¯ 
(
¯¯ 
expectedFileLine
¯¯ $
.
¯¯$ %
	Substring
¯¯% .
(
¯¯. /
$num
¯¯/ 2
,
¯¯2 3
$num
¯¯4 5
)
¯¯5 6
!=
¯¯7 9
actualFileLine
¯¯: H
.
¯¯H I
	Substring
¯¯I R
(
¯¯R S
$num
¯¯S V
,
¯¯V W
$num
¯¯X Y
)
¯¯Y Z
)
¯¯Z [
{
˘˘ 
	errorList
˙˙ 
.
˙˙ 
Add
˙˙ !
(
˙˙! "
$str
˙˙" >
+
˙˙? @
du
˙˙A C
+
˙˙D E
$str
˙˙F S
+
˙˙T U
expectedFileLine
˙˙V f
.
˙˙f g
	Substring
˙˙g p
(
˙˙p q
$num
˙˙q t
,
˙˙t u
$num
˙˙v w
)
˙˙w x
+
˙˙y z
$str˙˙{ Ö
+˙˙Ü á
actualFileLine˙˙à ñ
.˙˙ñ ó
	Substring˙˙ó †
(˙˙† °
$num˙˙° §
,˙˙§ •
$num˙˙¶ ß
)˙˙ß ®
+˙˙© ™
Environment˙˙´ ∂
.˙˙∂ ∑
NewLine˙˙∑ æ
)˙˙æ ø
;˙˙ø ¿
}
˚˚ 
if
˝˝ 
(
˝˝ 
expectedFileLine
˝˝ $
.
˝˝$ %
	Substring
˝˝% .
(
˝˝. /
$num
˝˝/ 2
,
˝˝2 3
$num
˝˝4 5
)
˝˝5 6
!=
˝˝7 9
actualFileLine
˝˝: H
.
˝˝H I
	Substring
˝˝I R
(
˝˝R S
$num
˝˝S V
,
˝˝V W
$num
˝˝X Y
)
˝˝Y Z
)
˝˝Z [
{
˛˛ 
	errorList
ˇˇ 
.
ˇˇ 
Add
ˇˇ !
(
ˇˇ! "
$str
ˇˇ" :
+
ˇˇ; <
du
ˇˇ= ?
+
ˇˇ@ A
$str
ˇˇB O
+
ˇˇP Q
expectedFileLine
ˇˇR b
.
ˇˇb c
	Substring
ˇˇc l
(
ˇˇl m
$num
ˇˇm p
,
ˇˇp q
$num
ˇˇr s
)
ˇˇs t
+
ˇˇu v
$strˇˇw Å
+ˇˇÇ É
actualFileLineˇˇÑ í
.ˇˇí ì
	Substringˇˇì ú
(ˇˇú ù
$numˇˇù †
,ˇˇ† °
$numˇˇ¢ £
)ˇˇ£ §
+ˇˇ• ¶
Environmentˇˇß ≤
.ˇˇ≤ ≥
NewLineˇˇ≥ ∫
)ˇˇ∫ ª
;ˇˇª º
}
ÄÄ 
if
ÅÅ 
(
ÅÅ 
expectedFileLine
ÅÅ $
.
ÅÅ$ %
	Substring
ÅÅ% .
(
ÅÅ. /
$num
ÅÅ/ 2
,
ÅÅ2 3
$num
ÅÅ4 6
)
ÅÅ6 7
!=
ÅÅ8 :
actualFileLine
ÅÅ; I
.
ÅÅI J
	Substring
ÅÅJ S
(
ÅÅS T
$num
ÅÅT W
,
ÅÅW X
$num
ÅÅY [
)
ÅÅ[ \
)
ÅÅ\ ]
{
ÇÇ 
	errorList
ÉÉ 
.
ÉÉ 
Add
ÉÉ !
(
ÉÉ! "
$str
ÉÉ" ?
+
ÉÉ@ A
du
ÉÉB D
+
ÉÉE F
$str
ÉÉG T
+
ÉÉU V
expectedFileLine
ÉÉW g
.
ÉÉg h
	Substring
ÉÉh q
(
ÉÉq r
$num
ÉÉr u
,
ÉÉu v
$num
ÉÉw y
)
ÉÉy z
+
ÉÉ{ |
$strÉÉ} á
+ÉÉà â
actualFileLineÉÉä ò
.ÉÉò ô
	SubstringÉÉô ¢
(ÉÉ¢ £
$numÉÉ£ ¶
,ÉÉ¶ ß
$numÉÉ® ™
)ÉÉ™ ´
+ÉÉ¨ ≠
EnvironmentÉÉÆ π
.ÉÉπ ∫
NewLineÉÉ∫ ¡
)ÉÉ¡ ¬
;ÉÉ¬ √
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
expectedFileLine
ÜÜ $
.
ÜÜ$ %
	Substring
ÜÜ% .
(
ÜÜ. /
$num
ÜÜ/ 2
,
ÜÜ2 3
$num
ÜÜ4 5
)
ÜÜ5 6
!=
ÜÜ7 9
actualFileLine
ÜÜ: H
.
ÜÜH I
	Substring
ÜÜI R
(
ÜÜR S
$num
ÜÜS V
,
ÜÜV W
$num
ÜÜX Y
)
ÜÜY Z
)
ÜÜZ [
{
áá 
	errorList
àà 
.
àà 
Add
àà !
(
àà! "
$str
àà" A
+
ààB C
du
ààD F
+
ààG H
$str
ààI V
+
ààW X
expectedFileLine
ààY i
.
àài j
	Substring
ààj s
(
ààs t
$num
ààt w
,
ààw x
$num
àày z
)
ààz {
+
àà| }
$stràà~ à
+ààâ ä
actualFileLineààã ô
.ààô ö
	Substringààö £
(àà£ §
$numàà§ ß
,ààß ®
$numàà© ™
)àà™ ´
+àà¨ ≠
EnvironmentààÆ π
.ààπ ∫
NewLineàà∫ ¡
)àà¡ ¬
;àà¬ √
}
ââ 
if
ãã 
(
ãã 
expectedFileLine
ãã $
.
ãã$ %
	Substring
ãã% .
(
ãã. /
$num
ãã/ 2
,
ãã2 3
$num
ãã4 5
)
ãã5 6
!=
ãã7 9
actualFileLine
ãã: H
.
ããH I
	Substring
ããI R
(
ããR S
$num
ããS V
,
ããV W
$num
ããX Y
)
ããY Z
)
ããZ [
{
åå 
	errorList
çç 
.
çç 
Add
çç !
(
çç! "
$str
çç" ?
+
çç@ A
du
ççB D
+
ççE F
$str
ççG T
+
ççU V
expectedFileLine
ççW g
.
ççg h
	Substring
ççh q
(
ççq r
$num
ççr u
,
ççu v
$num
ççw x
)
ççx y
+
ççz {
$strçç| Ü
+ççá à
actualFileLineççâ ó
.ççó ò
	Substringççò °
(çç° ¢
$numçç¢ •
,çç• ¶
$numççß ®
)çç® ©
+çç™ ´
Environmentçç¨ ∑
.çç∑ ∏
NewLineçç∏ ø
)ççø ¿
;çç¿ ¡
}
éé 
if
êê 
(
êê 
expectedFileLine
êê $
.
êê$ %
	Substring
êê% .
(
êê. /
$num
êê/ 2
,
êê2 3
$num
êê4 5
)
êê5 6
!=
êê7 9
actualFileLine
êê: H
.
êêH I
	Substring
êêI R
(
êêR S
$num
êêS V
,
êêV W
$num
êêX Y
)
êêY Z
)
êêZ [
{
ëë 
	errorList
íí 
.
íí 
Add
íí !
(
íí! "
$str
íí" ?
+
íí@ A
du
ííB D
+
ííE F
$str
ííG T
+
ííU V
expectedFileLine
ííW g
.
ííg h
	Substring
ííh q
(
ííq r
$num
íír u
,
ííu v
$num
ííw x
)
ííx y
+
ííz {
$stríí| Ü
+ííá à
actualFileLineííâ ó
.ííó ò
	Substringííò °
(íí° ¢
$numíí¢ •
,íí• ¶
$numííß ®
)íí® ©
+íí™ ´
Environmentíí¨ ∑
.íí∑ ∏
NewLineíí∏ ø
)ííø ¿
;íí¿ ¡
}
ìì 
if
îî 
(
îî 
expectedFileLine
îî $
.
îî$ %
	Substring
îî% .
(
îî. /
$num
îî/ 2
,
îî2 3
$num
îî4 5
)
îî5 6
!=
îî7 9
actualFileLine
îî: H
.
îîH I
	Substring
îîI R
(
îîR S
$num
îîS V
,
îîV W
$num
îîX Y
)
îîY Z
)
îîZ [
{
ïï 
	errorList
ññ 
.
ññ 
Add
ññ !
(
ññ! "
$str
ññ" =
+
ññ> ?
du
ññ@ B
+
ññC D
$str
ññE R
+
ññS T
expectedFileLine
ññU e
.
ññe f
	Substring
ññf o
(
ñño p
$num
ññp s
,
ññs t
$num
ññu v
)
ññv w
+
ññx y
$strññz Ñ
+ññÖ Ü
actualFileLineññá ï
.ññï ñ
	Substringñññ ü
(ññü †
$numññ† £
,ññ£ §
$numññ• ¶
)ññ¶ ß
+ññ® ©
Environmentññ™ µ
.ññµ ∂
NewLineññ∂ Ω
)ññΩ æ
;ññæ ø
}
óó 
if
òò 
(
òò 
expectedFileLine
òò $
.
òò$ %
	Substring
òò% .
(
òò. /
$num
òò/ 2
,
òò2 3
$num
òò4 6
)
òò6 7
!=
òò8 :
actualFileLine
òò; I
.
òòI J
	Substring
òòJ S
(
òòS T
$num
òòT W
,
òòW X
$num
òòY [
)
òò[ \
)
òò\ ]
{
ôô 
	errorList
öö 
.
öö 
Add
öö !
(
öö! "
$str
öö" <
+
öö= >
du
öö? A
+
ööB C
$str
ööD Q
+
ööR S
expectedFileLine
ööT d
.
ööd e
	Substring
ööe n
(
öön o
$num
ööo r
,
öör s
$num
ööt v
)
ööv w
+
ööx y
$strööz Ñ
+ööÖ Ü
actualFileLineööá ï
.ööï ñ
	Substringööñ ü
(ööü †
$numöö† £
,öö£ §
$numöö• ß
)ööß ®
+öö© ™
Environmentöö´ ∂
.öö∂ ∑
NewLineöö∑ æ
)ööæ ø
;ööø ¿
}
õõ 
if
¢¢ 
(
¢¢ 
	errorList
¢¢ 
.
¢¢ 
Any
¢¢ !
(
¢¢! "
)
¢¢" #
)
¢¢# $
{
££ 
if
§§ 
(
§§ 
	errorList
§§ !
.
§§! "
Any
§§" %
(
§§% &
)
§§& '
)
§§' (
{
•• 
	errorList
¶¶ !
.
¶¶! "
Insert
¶¶" (
(
¶¶( )
$num
¶¶) *
,
¶¶* +
$str
¶¶, ^
+
¶¶_ `
du
¶¶a c
+
¶¶d e
Environment
¶¶f q
.
¶¶q r
NewLine
¶¶r y
)
¶¶y z
;
¶¶z {
}
ßß 
File
®® 
.
®® 
AppendAllText
®® &
(
®®& '"
ApplicationConstants
®®' ;
.
®®; <
LOG_FILE
®®< D
,
®®D E
$str
®®F Y
+
®®Z [
expectedFileLine
®®\ l
+
®®m n
Environment
®®o z
.
®®z {
NewLine®®{ Ç
)®®Ç É
;®®É Ñ
File
©© 
.
©© 
AppendAllText
©© &
(
©©& '"
ApplicationConstants
©©' ;
.
©©; <
LOG_FILE
©©< D
,
©©D E
$str
©©F W
+
©©X Y
actualFileLine
©©Z h
+
©©i j
Environment
©©k v
.
©©v w
NewLine
©©w ~
)
©©~ 
;©© Ä
File
™™ 
.
™™ 
AppendAllText
™™ &
(
™™& '"
ApplicationConstants
™™' ;
.
™™; <
LOG_FILE
™™< D
,
™™D E
string
™™F L
.
™™L M
Join
™™M Q
(
™™Q R
$str
™™R U
,
™™U V
	errorList
™™W `
)
™™` a
)
™™a b
;
™™b c
return
´´ 
false
´´  
;
´´  !
}
¨¨ 
else
≠≠ 
{
ÆÆ 
return
ØØ 
true
ØØ 
;
ØØ  
}
∞∞ 
}
±± 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
ex
≥≥ 
)
≥≥  
{
¥¥ 
File
µµ 
.
µµ 
AppendAllText
µµ "
(
µµ" #"
ApplicationConstants
µµ# 7
.
µµ7 8
LOG_FILE
µµ8 @
,
µµ@ A
$"
µµB D
{
µµD E
ex
µµE G
.
µµG H
Message
µµH O
}
µµO P
{
µµP Q
ex
µµQ S
.
µµS T
InnerException
µµT b
}
µµb c
"
µµc d
)
µµd e
;
µµe f
throw
∂∂ 
ex
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 	
public
ππ 
bool
ππ 
CompareLineItems
ππ $
(
ππ$ %
string
ππ% +
expectedFileLine
ππ, <
,
ππ< =
string
ππ> D
actualFileLine
ππE S
,
ππS T
string
ππU [
du
ππ\ ^
)
ππ^ _
{
∫∫ 	
try
ªª 
{
ºº 
List
ΩΩ 
<
ΩΩ 
string
ΩΩ 
>
ΩΩ 
	errorList
ΩΩ &
=
ΩΩ' (
new
ΩΩ) ,
List
ΩΩ- 1
<
ΩΩ1 2
string
ΩΩ2 8
>
ΩΩ8 9
(
ΩΩ9 :
)
ΩΩ: ;
;
ΩΩ; <
if
ææ 
(
ææ 
expectedFileLine
ææ $
.
ææ$ %
	Substring
ææ% .
(
ææ. /
$num
ææ/ 0
,
ææ0 1
$num
ææ2 3
)
ææ3 4
!=
ææ5 7
actualFileLine
ææ8 F
.
ææF G
	Substring
ææG P
(
ææP Q
$num
ææQ R
,
ææR S
$num
ææT U
)
ææU V
)
ææV W
{
øø 
	errorList
¿¿ 
.
¿¿ 
Add
¿¿ !
(
¿¿! "
$str
¿¿" <
+
¿¿= >
du
¿¿? A
+
¿¿B C
$str
¿¿D Q
+
¿¿R S
expectedFileLine
¿¿T d
.
¿¿d e
	Substring
¿¿e n
(
¿¿n o
$num
¿¿o p
,
¿¿p q
$num
¿¿r s
)
¿¿s t
+
¿¿u v
$str¿¿w Å
+¿¿Ç É
actualFileLine¿¿Ñ í
.¿¿í ì
	Substring¿¿ì ú
(¿¿ú ù
$num¿¿ù û
,¿¿û ü
$num¿¿† °
)¿¿° ¢
+¿¿£ §
Environment¿¿• ∞
.¿¿∞ ±
NewLine¿¿± ∏
)¿¿∏ π
;¿¿π ∫
}
¡¡ 
if
¬¬ 
(
¬¬ 
expectedFileLine
¬¬ $
.
¬¬$ %
	Substring
¬¬% .
(
¬¬. /
$num
¬¬/ 0
,
¬¬0 1
$num
¬¬2 3
)
¬¬3 4
!=
¬¬5 7
actualFileLine
¬¬8 F
.
¬¬F G
	Substring
¬¬G P
(
¬¬P Q
$num
¬¬Q R
,
¬¬R S
$num
¬¬T U
)
¬¬U V
)
¬¬V W
{
√√ 
	errorList
ƒƒ 
.
ƒƒ 
Add
ƒƒ !
(
ƒƒ! "
$str
ƒƒ" B
+
ƒƒC D
du
ƒƒE G
+
ƒƒH I
$str
ƒƒJ W
+
ƒƒX Y
expectedFileLine
ƒƒZ j
.
ƒƒj k
	Substring
ƒƒk t
(
ƒƒt u
$num
ƒƒu v
,
ƒƒv w
$num
ƒƒx y
)
ƒƒy z
+
ƒƒ{ |
$strƒƒ} á
+ƒƒà â
actualFileLineƒƒä ò
.ƒƒò ô
	Substringƒƒô ¢
(ƒƒ¢ £
$numƒƒ£ §
,ƒƒ§ •
$numƒƒ¶ ß
)ƒƒß ®
+ƒƒ© ™
Environmentƒƒ´ ∂
.ƒƒ∂ ∑
NewLineƒƒ∑ æ
)ƒƒæ ø
;ƒƒø ¿
}
≈≈ 
if
∆∆ 
(
∆∆ 
expectedFileLine
∆∆ $
.
∆∆$ %
	Substring
∆∆% .
(
∆∆. /
$num
∆∆/ 0
,
∆∆0 1
$num
∆∆2 3
)
∆∆3 4
!=
∆∆5 7
actualFileLine
∆∆8 F
.
∆∆F G
	Substring
∆∆G P
(
∆∆P Q
$num
∆∆Q R
,
∆∆R S
$num
∆∆T U
)
∆∆U V
)
∆∆V W
{
«« 
	errorList
»» 
.
»» 
Add
»» !
(
»»! "
$str
»»" B
+
»»C D
du
»»E G
+
»»H I
$str
»»J W
+
»»X Y
expectedFileLine
»»Z j
.
»»j k
	Substring
»»k t
(
»»t u
$num
»»u v
,
»»v w
$num
»»x y
)
»»y z
+
»»{ |
$str»»} á
+»»à â
actualFileLine»»ä ò
.»»ò ô
	Substring»»ô ¢
(»»¢ £
$num»»£ §
,»»§ •
$num»»¶ ß
)»»ß ®
+»»© ™
Environment»»´ ∂
.»»∂ ∑
NewLine»»∑ æ
)»»æ ø
;»»ø ¿
}
…… 
if
   
(
   
expectedFileLine
   $
.
  $ %
	Substring
  % .
(
  . /
$num
  / 0
,
  0 1
$num
  2 4
)
  4 5
!=
  6 8
actualFileLine
  9 G
.
  G H
	Substring
  H Q
(
  Q R
$num
  R S
,
  S T
$num
  U W
)
  W X
)
  X Y
{
ÀÀ 
	errorList
ÃÃ 
.
ÃÃ 
Add
ÃÃ !
(
ÃÃ! "
$str
ÃÃ" 6
+
ÃÃ7 8
du
ÃÃ9 ;
+
ÃÃ< =
$str
ÃÃ> K
+
ÃÃL M
expectedFileLine
ÃÃN ^
.
ÃÃ^ _
	Substring
ÃÃ_ h
(
ÃÃh i
$num
ÃÃi j
,
ÃÃj k
$num
ÃÃl n
)
ÃÃn o
+
ÃÃp q
$str
ÃÃr |
+
ÃÃ} ~
actualFileLineÃÃ ç
.ÃÃç é
	SubstringÃÃé ó
(ÃÃó ò
$numÃÃò ô
,ÃÃô ö
$numÃÃõ ù
)ÃÃù û
+ÃÃü †
EnvironmentÃÃ° ¨
.ÃÃ¨ ≠
NewLineÃÃ≠ ¥
)ÃÃ¥ µ
;ÃÃµ ∂
}
ÕÕ 
if
ŒŒ 
(
ŒŒ 
expectedFileLine
ŒŒ $
.
ŒŒ$ %
	Substring
ŒŒ% .
(
ŒŒ. /
$num
ŒŒ/ 1
,
ŒŒ1 2
$num
ŒŒ3 5
)
ŒŒ5 6
!=
ŒŒ7 9
actualFileLine
ŒŒ: H
.
ŒŒH I
	Substring
ŒŒI R
(
ŒŒR S
$num
ŒŒS U
,
ŒŒU V
$num
ŒŒW Y
)
ŒŒY Z
)
ŒŒZ [
{
œœ 
	errorList
–– 
.
–– 
Add
–– !
(
––! "
$str
––" H
+
––I J
du
––K M
+
––N O
$str
––P ]
+
––^ _
expectedFileLine
––` p
.
––p q
	Substring
––q z
(
––z {
$num
––{ }
,
––} ~
$num–– Å
)––Å Ç
+––É Ñ
$str––Ö è
+––ê ë
actualFileLine––í †
.––† °
	Substring––° ™
(––™ ´
$num––´ ≠
,––≠ Æ
$num––Ø ±
)––± ≤
+––≥ ¥
Environment––µ ¿
.––¿ ¡
NewLine––¡ »
)––» …
;––…  
}
—— 
if
““ 
(
““ 
expectedFileLine
““ $
.
““$ %
	Substring
““% .
(
““. /
$num
““/ 1
,
““1 2
$num
““3 4
)
““4 5
!=
““6 8
actualFileLine
““9 G
.
““G H
	Substring
““H Q
(
““Q R
$num
““R T
,
““T U
$num
““V W
)
““W X
)
““X Y
{
”” 
	errorList
‘‘ 
.
‘‘ 
Add
‘‘ !
(
‘‘! "
$str
‘‘" A
+
‘‘B C
du
‘‘D F
+
‘‘G H
$str
‘‘I V
+
‘‘W X
expectedFileLine
‘‘Y i
.
‘‘i j
	Substring
‘‘j s
(
‘‘s t
$num
‘‘t v
,
‘‘v w
$num
‘‘x y
)
‘‘y z
+
‘‘{ |
$str‘‘} á
+‘‘à â
actualFileLine‘‘ä ò
.‘‘ò ô
	Substring‘‘ô ¢
(‘‘¢ £
$num‘‘£ •
,‘‘• ¶
$num‘‘ß ®
)‘‘® ©
+‘‘™ ´
Environment‘‘¨ ∑
.‘‘∑ ∏
NewLine‘‘∏ ø
)‘‘ø ¿
;‘‘¿ ¡
}
’’ 
if
÷÷ 
(
÷÷ 
expectedFileLine
÷÷ $
.
÷÷$ %
	Substring
÷÷% .
(
÷÷. /
$num
÷÷/ 1
,
÷÷1 2
$num
÷÷3 5
)
÷÷5 6
!=
÷÷7 9
actualFileLine
÷÷: H
.
÷÷H I
	Substring
÷÷I R
(
÷÷R S
$num
÷÷S U
,
÷÷U V
$num
÷÷W Y
)
÷÷Y Z
)
÷÷Z [
{
◊◊ 
	errorList
ÿÿ 
.
ÿÿ 
Add
ÿÿ !
(
ÿÿ! "
$str
ÿÿ" ;
+
ÿÿ< =
du
ÿÿ> @
+
ÿÿA B
$str
ÿÿC P
+
ÿÿQ R
expectedFileLine
ÿÿS c
.
ÿÿc d
	Substring
ÿÿd m
(
ÿÿm n
$num
ÿÿn p
,
ÿÿp q
$num
ÿÿr t
)
ÿÿt u
+
ÿÿv w
$strÿÿx Ç
+ÿÿÉ Ñ
actualFileLineÿÿÖ ì
.ÿÿì î
	Substringÿÿî ù
(ÿÿù û
$numÿÿû †
,ÿÿ† °
$numÿÿ¢ §
)ÿÿ§ •
+ÿÿ¶ ß
Environmentÿÿ® ≥
.ÿÿ≥ ¥
NewLineÿÿ¥ ª
)ÿÿª º
;ÿÿº Ω
}
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 
expectedFileLine
⁄⁄ $
.
⁄⁄$ %
	Substring
⁄⁄% .
(
⁄⁄. /
$num
⁄⁄/ 2
,
⁄⁄2 3
$num
⁄⁄4 5
)
⁄⁄5 6
!=
⁄⁄7 9
actualFileLine
⁄⁄: H
.
⁄⁄H I
	Substring
⁄⁄I R
(
⁄⁄R S
$num
⁄⁄S V
,
⁄⁄V W
$num
⁄⁄X Y
)
⁄⁄Y Z
)
⁄⁄Z [
{
€€ 
	errorList
‹‹ 
.
‹‹ 
Add
‹‹ !
(
‹‹! "
$str
‹‹" F
+
‹‹G H
du
‹‹I K
+
‹‹L M
$str
‹‹N [
+
‹‹\ ]
expectedFileLine
‹‹^ n
.
‹‹n o
	Substring
‹‹o x
(
‹‹x y
$num
‹‹y |
,
‹‹| }
$num
‹‹~ 
)‹‹ Ä
+‹‹Å Ç
$str‹‹É ç
+‹‹é è
actualFileLine‹‹ê û
.‹‹û ü
	Substring‹‹ü ®
(‹‹® ©
$num‹‹© ¨
,‹‹¨ ≠
$num‹‹Æ Ø
)‹‹Ø ∞
+‹‹± ≤
Environment‹‹≥ æ
.‹‹æ ø
NewLine‹‹ø ∆
)‹‹∆ «
;‹‹« »
}
›› 
if
ﬁﬁ 
(
ﬁﬁ 
expectedFileLine
ﬁﬁ $
.
ﬁﬁ$ %
	Substring
ﬁﬁ% .
(
ﬁﬁ. /
$num
ﬁﬁ/ 2
,
ﬁﬁ2 3
$num
ﬁﬁ4 5
)
ﬁﬁ5 6
!=
ﬁﬁ7 9
actualFileLine
ﬁﬁ: H
.
ﬁﬁH I
	Substring
ﬁﬁI R
(
ﬁﬁR S
$num
ﬁﬁS V
,
ﬁﬁV W
$num
ﬁﬁX Y
)
ﬁﬁY Z
)
ﬁﬁZ [
{
ﬂﬂ 
	errorList
‡‡ 
.
‡‡ 
Add
‡‡ !
(
‡‡! "
$str
‡‡" G
+
‡‡H I
du
‡‡J L
+
‡‡M N
$str
‡‡O \
+
‡‡] ^
expectedFileLine
‡‡_ o
.
‡‡o p
	Substring
‡‡p y
(
‡‡y z
$num
‡‡z }
,
‡‡} ~
$num‡‡ Ä
)‡‡Ä Å
+‡‡Ç É
$str‡‡Ñ é
+‡‡è ê
actualFileLine‡‡ë ü
.‡‡ü †
	Substring‡‡† ©
(‡‡© ™
$num‡‡™ ≠
,‡‡≠ Æ
$num‡‡Ø ∞
)‡‡∞ ±
+‡‡≤ ≥
Environment‡‡¥ ø
.‡‡ø ¿
NewLine‡‡¿ «
)‡‡« »
;‡‡» …
}
·· 
if
‚‚ 
(
‚‚ 
expectedFileLine
‚‚ $
.
‚‚$ %
	Substring
‚‚% .
(
‚‚. /
$num
‚‚/ 2
,
‚‚2 3
$num
‚‚4 5
)
‚‚5 6
!=
‚‚7 9
actualFileLine
‚‚: H
.
‚‚H I
	Substring
‚‚I R
(
‚‚R S
$num
‚‚S V
,
‚‚V W
$num
‚‚X Y
)
‚‚Y Z
)
‚‚Z [
{
„„ 
	errorList
‰‰ 
.
‰‰ 
Add
‰‰ !
(
‰‰! "
$str
‰‰" A
+
‰‰B C
du
‰‰D F
+
‰‰G H
$str
‰‰I V
+
‰‰W X
expectedFileLine
‰‰Y i
.
‰‰i j
	Substring
‰‰j s
(
‰‰s t
$num
‰‰t w
,
‰‰w x
$num
‰‰y z
)
‰‰z {
+
‰‰| }
$str‰‰~ à
+‰‰â ä
actualFileLine‰‰ã ô
.‰‰ô ö
	Substring‰‰ö £
(‰‰£ §
$num‰‰§ ß
,‰‰ß ®
$num‰‰© ™
)‰‰™ ´
+‰‰¨ ≠
Environment‰‰Æ π
.‰‰π ∫
NewLine‰‰∫ ¡
)‰‰¡ ¬
;‰‰¬ √
}
ÂÂ 
if
ÊÊ 
(
ÊÊ 
expectedFileLine
ÊÊ $
.
ÊÊ$ %
	Substring
ÊÊ% .
(
ÊÊ. /
$num
ÊÊ/ 2
,
ÊÊ2 3
$num
ÊÊ4 5
)
ÊÊ5 6
!=
ÊÊ7 9
actualFileLine
ÊÊ: H
.
ÊÊH I
	Substring
ÊÊI R
(
ÊÊR S
$num
ÊÊS V
,
ÊÊV W
$num
ÊÊX Y
)
ÊÊY Z
)
ÊÊZ [
{
ÁÁ 
	errorList
ËË 
.
ËË 
Add
ËË !
(
ËË! "
$str
ËË" ;
+
ËË< =
du
ËË> @
+
ËËA B
$str
ËËC P
+
ËËQ R
expectedFileLine
ËËS c
.
ËËc d
	Substring
ËËd m
(
ËËm n
$num
ËËn q
,
ËËq r
$num
ËËs t
)
ËËt u
+
ËËv w
$strËËx Ç
+ËËÉ Ñ
actualFileLineËËÖ ì
.ËËì î
	SubstringËËî ù
(ËËù û
$numËËû °
,ËË° ¢
$numËË£ §
)ËË§ •
+ËË¶ ß
EnvironmentËË® ≥
.ËË≥ ¥
NewLineËË¥ ª
)ËËª º
;ËËº Ω
}
ÈÈ 
if
ÍÍ 
(
ÍÍ 
expectedFileLine
ÍÍ $
.
ÍÍ$ %
	Substring
ÍÍ% .
(
ÍÍ. /
$num
ÍÍ/ 2
,
ÍÍ2 3
$num
ÍÍ4 5
)
ÍÍ5 6
!=
ÍÍ7 9
actualFileLine
ÍÍ: H
.
ÍÍH I
	Substring
ÍÍI R
(
ÍÍR S
$num
ÍÍS V
,
ÍÍV W
$num
ÍÍX Y
)
ÍÍY Z
)
ÍÍZ [
{
ÎÎ 
	errorList
ÏÏ 
.
ÏÏ 
Add
ÏÏ !
(
ÏÏ! "
$str
ÏÏ" E
+
ÏÏF G
du
ÏÏH J
+
ÏÏK L
$str
ÏÏM Z
+
ÏÏ[ \
expectedFileLine
ÏÏ] m
.
ÏÏm n
	Substring
ÏÏn w
(
ÏÏw x
$num
ÏÏx {
,
ÏÏ{ |
$num
ÏÏ} ~
)
ÏÏ~ 
+ÏÏÄ Å
$strÏÏÇ å
+ÏÏç é
actualFileLineÏÏè ù
.ÏÏù û
	SubstringÏÏû ß
(ÏÏß ®
$numÏÏ® ´
,ÏÏ´ ¨
$numÏÏ≠ Æ
)ÏÏÆ Ø
+ÏÏ∞ ±
EnvironmentÏÏ≤ Ω
.ÏÏΩ æ
NewLineÏÏæ ≈
)ÏÏ≈ ∆
;ÏÏ∆ «
}
ÌÌ 
if
ÓÓ 
(
ÓÓ 
expectedFileLine
ÓÓ $
.
ÓÓ$ %
	Substring
ÓÓ% .
(
ÓÓ. /
$num
ÓÓ/ 2
,
ÓÓ2 3
$num
ÓÓ4 5
)
ÓÓ5 6
!=
ÓÓ7 9
actualFileLine
ÓÓ: H
.
ÓÓH I
	Substring
ÓÓI R
(
ÓÓR S
$num
ÓÓS V
,
ÓÓV W
$num
ÓÓX Y
)
ÓÓY Z
)
ÓÓZ [
{
ÔÔ 
	errorList
 
.
 
Add
 !
(
! "
$str
" @
+
A B
du
C E
+
F G
$str
H U
+
V W
expectedFileLine
X h
.
h i
	Substring
i r
(
r s
$num
s v
,
v w
$num
x y
)
y z
+
{ |
$str} á
+à â
actualFileLineä ò
.ò ô
	Substringô ¢
(¢ £
$num£ ¶
,¶ ß
$num® ©
)© ™
+´ ¨
Environment≠ ∏
.∏ π
NewLineπ ¿
)¿ ¡
;¡ ¬
}
ÒÒ 
if
˚˚ 
(
˚˚ 
	errorList
˚˚ 
.
˚˚ 
Any
˚˚ !
(
˚˚! "
)
˚˚" #
)
˚˚# $
{
¸¸ 
File
˝˝ 
.
˝˝ 
AppendAllText
˝˝ &
(
˝˝& '"
ApplicationConstants
˝˝' ;
.
˝˝; <
LOG_FILE
˝˝< D
,
˝˝D E
$str
˝˝F t
+
˝˝u v
du
˝˝w y
+
˝˝z {
Environment˝˝| á
.˝˝á à
NewLine˝˝à è
)˝˝è ê
;˝˝ê ë
File
˛˛ 
.
˛˛ 
AppendAllText
˛˛ &
(
˛˛& '"
ApplicationConstants
˛˛' ;
.
˛˛; <
LOG_FILE
˛˛< D
,
˛˛D E
$str
˛˛F Y
+
˛˛Z [
expectedFileLine
˛˛\ l
+
˛˛m n
Environment
˛˛o z
.
˛˛z {
NewLine˛˛{ Ç
)˛˛Ç É
;˛˛É Ñ
File
ˇˇ 
.
ˇˇ 
AppendAllText
ˇˇ &
(
ˇˇ& '"
ApplicationConstants
ˇˇ' ;
.
ˇˇ; <
LOG_FILE
ˇˇ< D
,
ˇˇD E
$str
ˇˇF W
+
ˇˇX Y
actualFileLine
ˇˇZ h
+
ˇˇi j
Environment
ˇˇk v
.
ˇˇv w
NewLine
ˇˇw ~
)
ˇˇ~ 
;ˇˇ Ä
File
ÄÄ 
.
ÄÄ 
AppendAllText
ÄÄ &
(
ÄÄ& '"
ApplicationConstants
ÄÄ' ;
.
ÄÄ; <
LOG_FILE
ÄÄ< D
,
ÄÄD E
string
ÄÄF L
.
ÄÄL M
Join
ÄÄM Q
(
ÄÄQ R
$str
ÄÄR U
,
ÄÄU V
	errorList
ÄÄW `
)
ÄÄ` a
)
ÄÄa b
;
ÄÄb c
return
ÅÅ 
false
ÅÅ  
;
ÅÅ  !
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
return
ÖÖ 
true
ÖÖ 
;
ÖÖ  
}
ÜÜ 
}
áá 
catch
àà 
(
àà 
	Exception
àà 
ex
àà 
)
àà  
{
ââ 
File
ää 
.
ää 
AppendAllText
ää "
(
ää" #"
ApplicationConstants
ää# 7
.
ää7 8
LOG_FILE
ää8 @
,
ää@ A
$"
ääB D
{
ääD E
ex
ääE G
.
ääG H
Message
ääH O
}
ääO P
{
ääP Q
ex
ääQ S
.
ääS T
InnerException
ääT b
}
ääb c
"
ääc d
)
ääd e
;
ääe f
throw
ãã 
ex
ãã 
;
ãã 
}
åå 
}
çç 	
}
èè 
}êê ≠ò
DC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\Comparator.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6
Comparators6 A
{ 
public 

class 

Comparator 
: 
IComparator )
{ 
private 
readonly 
IComparatorHelper *
_comparatorHelper+ <
;< =
private 
readonly 
IASNComparator '
_asnComparator( 6
;6 7
private 
readonly $
IPurchaseOrderComparator 1$
_purchaseOrderComparator2 J
;J K
public 

Comparator 
( 
) 
{ 	
_comparatorHelper 
= 
new  #
ComparatorHelper$ 4
(4 5
)5 6
;6 7
_asnComparator 
= 
new  
ASNComparator! .
(. /
)/ 0
;0 1$
_purchaseOrderComparator $
=% &
new' *#
PurchaseOrderComparator+ B
(B C
)C D
;D E
} 	
public 
bool 
CompareTricepsFiles '
(' (
string( .
depotNumber/ :
): ;
{ 	
try 
{ 
int 
comparisonCount #
=$ %
$num& '
;' (
File 
. 
AppendAllText "
(" # 
ApplicationConstants# 7
.7 8
LOG_FILE8 @
,@ A
$"B D
$strD [
"[ \
+] ^
Environment_ j
.j k
NewLinek r
)r s
;s t
var!! 
expectedDir!! 
=!!  !
new!!" %
DirectoryInfo!!& 3
(!!3 4 
ApplicationConstants!!4 H
.!!H I$
LOCAL_EXPECTED_FILE_PATH!!I a
)!!a b
;!!b c
var"" 
	actualDir"" 
="" 
new""  #
DirectoryInfo""$ 1
(""1 2 
ApplicationConstants""2 F
.""F G"
LOCAL_ACTUAL_FILE_PATH""G ]
)""] ^
;""^ _
var'' 
expectedFiles'' !
=''" #
expectedDir''$ /
.''/ 0
GetFiles''0 8
(''8 9
$str''9 >
,''> ?
SearchOption''@ L
.''L M
AllDirectories''M [
)''[ \
;''\ ]
var(( 
actualFiles(( 
=((  !
	actualDir((" +
.((+ ,
GetFiles((, 4
(((4 5
$str((5 :
,((: ;
SearchOption((< H
.((H I
AllDirectories((I W
)((W X
;((X Y
File++ 
.++ 
AppendAllText++ "
(++" # 
ApplicationConstants++# 7
.++7 8
LOG_FILE++8 @
,++@ A
$"++B D
$str++D f
{++f g
depotNumber++g r
}++r s
$str++s x
{++x y
expectedFiles	++y Ü
.
++Ü á
Count
++á å
(
++å ç
)
++ç é
}
++é è
{
++è ê
Environment
++ê õ
.
++õ ú
NewLine
++ú £
}
++£ §
"
++§ •
)
++• ¶
;
++¶ ß
File,, 
.,, 
AppendAllText,, "
(,," # 
ApplicationConstants,,# 7
.,,7 8
LOG_FILE,,8 @
,,,@ A
$",,B D
$str,,D d
{,,d e
depotNumber,,e p
},,p q
$str,,q v
{,,v w
actualFiles	,,w Ç
.
,,Ç É
Count
,,É à
(
,,à â
)
,,â ä
}
,,ä ã
{
,,ã å
Environment
,,å ó
.
,,ó ò
NewLine
,,ò ü
}
,,ü †
"
,,† °
)
,,° ¢
;
,,¢ £
FileCompare.. 
myFileCompare.. )
=..* +
new.., /
FileCompare..0 ;
(..; <
)..< =
;..= >
bool11 
areIdentical11 !
=11" #
expectedFiles11$ 1
.111 2
SequenceEqual112 ?
(11? @
actualFiles11@ K
,11K L
myFileCompare11M Z
)11Z [
;11[ \
if33 
(33 
areIdentical33  
==33! #
true33$ (
)33( )
{44 
Console55 
.55 
	WriteLine55 %
(55% &
$str55& D
)55D E
;55E F
File66 
.66 
AppendAllText66 &
(66& ' 
ApplicationConstants66' ;
.66; <
LOG_FILE66< D
,66D E
$"66F H
$str66H q
"66q r
+66s t
depotNumber	66u Ä
+
66Å Ç
Environment
66É é
.
66é è
NewLine
66è ñ
)
66ñ ó
;
66ó ò
}77 
else88 
{99 
Console:: 
.:: 
	WriteLine:: %
(::% &
$str::& H
)::H I
;::I J
File;; 
.;; 
AppendAllText;; &
(;;& ' 
ApplicationConstants;;' ;
.;;; <
LOG_FILE;;< D
,;;D E
$";;F H
$str;;H h
";;h i
+;;j k
Environment;;l w
.;;w x
NewLine;;x 
)	;; Ä
;
;;Ä Å
}<< 
var@@ 
queryCommonFiles@@ $
=@@% &
expectedFiles@@' 4
.@@4 5
	Intersect@@5 >
(@@> ?
actualFiles@@? J
,@@J K
myFileCompare@@L Y
)@@Y Z
;@@Z [
ListAA 
<AA 
boolAA 
>AA 
resultAA !
=AA" #
newAA$ '
ListAA( ,
<AA, -
boolAA- 1
>AA1 2
(AA2 3
)AA3 4
;AA4 5
boolBB 
compareResultBB "
=BB# $
falseBB% *
;BB* +
ifCC 
(CC 
queryCommonFilesCC $
.CC$ %
AnyCC% (
(CC( )
)CC) *
)CC* +
{DD 
ConsoleEE 
.EE 
	WriteLineEE %
(EE% &
$strEE& P
)EEP Q
;EEQ R
FileFF 
.FF 
AppendAllTextFF &
(FF& ' 
ApplicationConstantsFF' ;
.FF; <
LOG_FILEFF< D
,FFD E
$"FFF H
$strFFH x
"FFx y
+FFz {
queryCommonFiles	FF| å
.
FFå ç
Count
FFç í
(
FFí ì
)
FFì î
+
FFï ñ
Environment
FFó ¢
.
FF¢ £
NewLine
FF£ ™
)
FF™ ´
;
FF´ ¨
foreachHH 
(HH 
varHH  
vHH! "
inHH# %
queryCommonFilesHH& 6
)HH6 7
{II 
comparisonCountJJ '
++JJ' )
;JJ) *
ConsoleKK 
.KK  
	WriteLineKK  )
(KK) *
vKK* +
.KK+ ,
FullNameKK, 4
)KK4 5
;KK5 6
boolLL 
retValueLL %
;LL% &
stringOO 

actualPathOO )
=OO* + 
ApplicationConstantsOO, @
.OO@ A"
LOCAL_ACTUAL_FILE_PATHOOA W
;OOW X
ifPP 
(PP 
PathPP  
.PP  !
GetFileNamePP! ,
(PP, -
vPP- .
.PP. /
FullNamePP/ 7
)PP7 8
.PP8 9

StartsWithPP9 C
(PPC D
$strPPD I
)PPI J
)PPJ K
{QQ 
retValueRR $
=RR% &
CompareASNFilesRR' 6
(RR6 7
vRR7 8
.RR8 9
FullNameRR9 A
,RRA B

actualPathRRC M
+RRN O
vRRP Q
.RRQ R
NameRRR V
,RRV W 
ApplicationConstantsRRX l
.RRl m
LOG_FILERRm u
,RRu v
depotNumber	RRw Ç
)
RRÇ É
;
RRÉ Ñ
}TT 
elseUU 
{VV 
retValueWW $
=WW% &
ComparePOFilesWW' 5
(WW5 6
vWW6 7
.WW7 8
FullNameWW8 @
,WW@ A

actualPathWWB L
+WWM N
vWWO P
.WWP Q
NameWWQ U
,WWU V 
ApplicationConstantsWWW k
.WWk l
LOG_FILEWWl t
,WWt u
depotNumber	WWv Å
)
WWÅ Ç
;
WWÇ É
}XX 
resultYY 
.YY 
AddYY "
(YY" #
retValueYY# +
)YY+ ,
;YY, -
}[[ 
if\\ 
(\\ 
result\\ 
.\\ 
Contains\\ '
(\\' (
false\\( -
)\\- .
)\\. /
compareResult]] %
=]]& '
false]]( -
;]]- .
else^^ 
{__ 
File`` 
.`` 
AppendAllText`` *
(``* + 
ApplicationConstants``+ ?
.``? @
LOG_FILE``@ H
,``H I
new``J M
string``N T
(``T U
$char``U X
,``X Y
$num``Z ]
)``] ^
+``_ `
Environment``a l
.``l m
NewLine``m t
+``u v
$"``w y
$str	``y à
"
``à â
+
``ä ã
Environment
``å ó
.
``ó ò
NewLine
``ò ü
+
``† °
new
``¢ •
string
``¶ ¨
(
``¨ ≠
$char
``≠ ∞
,
``∞ ±
$num
``≤ µ
)
``µ ∂
+
``∑ ∏
Environment
``π ƒ
.
``ƒ ≈
NewLine
``≈ Ã
)
``Ã Õ
;
``Õ Œ
compareResultaa %
=aa& '
trueaa( ,
;aa, -
}bb 
}cc 
elsedd 
{ee 
Consoleff 
.ff 
	WriteLineff %
(ff% &
$strff& U
)ffU V
;ffV W
Filegg 
.gg 
AppendAllTextgg &
(gg& ' 
ApplicationConstantsgg' ;
.gg; <
LOG_FILEgg< D
,ggD E
$"ggF H
$strggH u
"ggu v
+ggw x
Environment	ggy Ñ
.
ggÑ Ö
NewLine
ggÖ å
)
ggå ç
;
ggç é
}hh 
varll 
queryList1Onlyll "
=ll# $
(ll% &
fromll& *
filell+ /
inll0 2
expectedFilesll3 @
selectmm& ,
filemm- 1
)mm1 2
.mm2 3
Exceptmm3 9
(mm9 :
actualFilesmm: E
,mmE F
myFileComparemmG T
)mmT U
;mmU V
Consoleoo 
.oo 
	WriteLineoo !
(oo! "
$stroo" t
)oot u
;oou v
Filepp 
.pp 
AppendAllTextpp "
(pp" # 
ApplicationConstantspp# 7
.pp7 8
LOG_FILEpp8 @
,pp@ A
$"ppB D
$str	ppD î
"
ppî ï
+
ppñ ó
Environment
ppò £
.
pp£ §
NewLine
pp§ ´
)
pp´ ¨
;
pp¨ ≠
Fileqq 
.qq 
AppendAllTextqq "
(qq" # 
ApplicationConstantsqq# 7
.qq7 8
LOG_FILEqq8 @
,qq@ A
newqqB E
stringqqF L
(qqL M
$charqqM P
,qqP Q
$numqqR U
)qqU V
+qqW X
EnvironmentqqY d
.qqd e
NewLineqqe l
)qql m
;qqm n
foreachrr 
(rr 
varrr 
vrr 
inrr !
queryList1Onlyrr" 0
)rr0 1
{ss 
Consolett 
.tt 
	WriteLinett %
(tt% &
vtt& '
.tt' (
Namett( ,
)tt, -
;tt- .
Fileuu 
.uu 
AppendAllTextuu &
(uu& ' 
ApplicationConstantsuu' ;
.uu; <
LOG_FILEuu< D
,uuD E
vuuF G
.uuG H
NameuuH L
+uuM N
EnvironmentuuO Z
.uuZ [
NewLineuu[ b
)uub c
;uuc d
}vv 
varzz 
queryList2Onlyzz "
=zz# $
(zz% &
fromzz& *
filezz+ /
inzz0 2
actualFileszz3 >
select{{& ,
file{{- 1
){{1 2
.{{2 3
Except{{3 9
({{9 :
expectedFiles{{: G
,{{G H
myFileCompare{{I V
){{V W
;{{W X
Console}} 
.}} 
	WriteLine}} !
(}}! "
$str}}" t
)}}t u
;}}u v
File~~ 
.~~ 
AppendAllText~~ "
(~~" # 
ApplicationConstants~~# 7
.~~7 8
LOG_FILE~~8 @
,~~@ A
$"~~B D
$str	~~D î
"
~~î ï
+
~~ñ ó
Environment
~~ò £
.
~~£ §
NewLine
~~§ ´
)
~~´ ¨
;
~~¨ ≠
File 
. 
AppendAllText "
(" # 
ApplicationConstants# 7
.7 8
LOG_FILE8 @
,@ A
newB E
stringF L
(L M
$charM P
,P Q
$numR U
)U V
+W X
EnvironmentY d
.d e
NewLinee l
)l m
;m n
foreach
ÄÄ 
(
ÄÄ 
var
ÄÄ 
v
ÄÄ 
in
ÄÄ !
queryList2Only
ÄÄ" 0
)
ÄÄ0 1
{
ÅÅ 
Console
ÇÇ 
.
ÇÇ 
	WriteLine
ÇÇ %
(
ÇÇ% &
v
ÇÇ& '
.
ÇÇ' (
Name
ÇÇ( ,
)
ÇÇ, -
;
ÇÇ- .
File
ÉÉ 
.
ÉÉ 
AppendAllText
ÉÉ &
(
ÉÉ& '"
ApplicationConstants
ÉÉ' ;
.
ÉÉ; <
LOG_FILE
ÉÉ< D
,
ÉÉD E
v
ÉÉF G
.
ÉÉG H
Name
ÉÉH L
+
ÉÉM N
Environment
ÉÉO Z
.
ÉÉZ [
NewLine
ÉÉ[ b
)
ÉÉb c
;
ÉÉc d
}
ÑÑ 
return
ÖÖ 
compareResult
ÖÖ $
;
ÖÖ$ %
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
)
áá 
{
áá 
throw
áá  %
;
áá% &
}
áá' (
}
àà 	
private
ää 
bool
ää 
CompareASNFiles
ää $
(
ää$ %
string
ää% +
file1
ää, 1
,
ää1 2
string
ää3 9
file2
ää: ?
,
ää? @
string
ääA G
logFile
ääH O
,
ääO P
string
ääQ W
depotNumber
ääX c
)
ääc d
{
ãã 	
try
åå 
{
çç 
List
éé 
<
éé 
bool
éé 
>
éé 
results
éé "
=
éé# $
new
éé% (
List
éé) -
<
éé- .
bool
éé. 2
>
éé2 3
(
éé3 4
)
éé4 5
;
éé5 6
string
êê $
fileHeaderFooterPrefix
êê -
=
êê. /
$str
êê0 3
+
êê4 5
depotNumber
êê6 A
+
êêB C
$str
êêD H
;
êêH I
string
ëë 
[
ëë 
]
ëë 
expectedFileLines
ëë *
=
ëë+ ,
File
ëë- 1
.
ëë1 2
ReadAllLines
ëë2 >
(
ëë> ?
file1
ëë? D
)
ëëD E
;
ëëE F
string
íí 
[
íí 
]
íí 
actualFileLines
íí (
=
íí) *
File
íí+ /
.
íí/ 0
ReadAllLines
íí0 <
(
íí< =
file2
íí= B
)
ííB C
;
ííC D
string
îî !
expectedFileContent
îî *
=
îî+ ,
File
îî- 1
.
îî1 2
ReadAllText
îî2 =
(
îî= >
file1
îî> C
)
îîC D
;
îîD E
string
ïï 
actualFileContent
ïï (
=
ïï) *
File
ïï+ /
.
ïï/ 0
ReadAllText
ïï0 ;
(
ïï; <
file2
ïï< A
)
ïïA B
;
ïïB C
File
òò 
.
òò 
AppendAllText
òò "
(
òò" #"
ApplicationConstants
òò# 7
.
òò7 8
LOG_FILE
òò8 @
,
òò@ A
$"
òòB D
$str
òòD f
{
òòf g
Path
òòg k
.
òòk l
GetFileName
òòl w
(
òòw x
file1
òòx }
)
òò} ~
}
òò~ 
$stròò ã
{òòã å
Pathòòå ê
.òòê ë
GetFileNameòòë ú
(òòú ù
file2òòù ¢
)òò¢ £
}òò£ §
$stròò§ ™
"òò™ ´
+òò¨ ≠
EnvironmentòòÆ π
.òòπ ∫
NewLineòò∫ ¡
)òò¡ ¬
;òò¬ √
if
öö 
(
öö 
expectedFileLines
öö %
.
öö% &
Length
öö& ,
!=
öö- /
actualFileLines
öö0 ?
.
öö? @
Length
öö@ F
)
ööF G
{
õõ 
File
úú 
.
úú 
AppendAllText
úú &
(
úú& '
logFile
úú' .
,
úú. /
$str
úú0 \
+
úú] ^
Environment
úú_ j
.
úúj k
NewLine
úúk r
)
úúr s
;
úús t
File
ùù 
.
ùù 
AppendAllText
ùù &
(
ùù& '
logFile
ùù' .
,
ùù. /
$str
ùù0 H
+
ùùI J
expectedFileLines
ùùK \
.
ùù\ ]
Length
ùù] c
+
ùùd e
Environment
ùùf q
.
ùùq r
NewLine
ùùr y
+
ùùz {
$strùù| í
+ùùì î
actualFileLinesùùï §
.ùù§ •
Lengthùù• ´
+ùù¨ ≠
EnvironmentùùÆ π
.ùùπ ∫
NewLineùù∫ ¡
)ùù¡ ¬
;ùù¬ √
}
ûû 
results
†† 
.
†† 
Add
†† 
(
†† #
CompareTricepsRecords
†† 1
(
††1 2
expectedFileLines
††2 C
[
††C D
$num
††D E
]
††E F
,
††F G
actualFileLines
††H W
[
††W X
$num
††X Y
]
††Y Z
,
††Z [
string
††\ b
.
††b c
Empty
††c h
,
††h i

RecordType
††j t
.
††t u

FILEHEADER
††u 
)†† Ä
)††Ä Å
;††Å Ç
results
°° 
.
°° 
Add
°° 
(
°° #
CompareTricepsRecords
°° 1
(
°°1 2
expectedFileLines
°°2 C
[
°°C D
expectedFileLines
°°D U
.
°°U V
Length
°°V \
-
°°] ^
$num
°°_ `
]
°°` a
,
°°a b
actualFileLines
°°c r
[
°°r s
actualFileLines°°s Ç
.°°Ç É
Length°°É â
-°°ä ã
$num°°å ç
]°°ç é
,°°é è
string°°ê ñ
.°°ñ ó
Empty°°ó ú
,°°ú ù

RecordType°°û ®
.°°® ©

FILEFOOTER°°© ≥
)°°≥ ¥
)°°¥ µ
;°°µ ∂

Dictionary
££ 
<
££ 
string
££ !
,
££! "
List
££# '
<
££' (
string
££( .
>
££. /
>
££/ 0#
expectedDeliveryUnits
££1 F
=
££G H
_comparatorHelper
££I Z
.
££Z [0
"GetTricepsCartonAndAssociatedLines
££[ }
(
££} ~"
expectedFileContent££~ ë
,££ë í
depotNumber££ì û
)££û ü
;££ü †

Dictionary
§§ 
<
§§ 
string
§§ !
,
§§! "
List
§§# '
<
§§' (
string
§§( .
>
§§. /
>
§§/ 0!
actualDeliveryUnits
§§1 D
=
§§E F
_comparatorHelper
§§G X
.
§§X Y0
"GetTricepsCartonAndAssociatedLines
§§Y {
(
§§{ | 
actualFileContent§§| ç
,§§ç é
depotNumber§§è ö
)§§ö õ
;§§õ ú
string
¶¶ 
[
¶¶ 
]
¶¶ 
expectedDus
¶¶ $
=
¶¶% &#
expectedDeliveryUnits
¶¶' <
.
¶¶< =
Keys
¶¶= A
.
¶¶A B
ToList
¶¶B H
(
¶¶H I
)
¶¶I J
.
¶¶J K
ToArray
¶¶K R
(
¶¶R S
)
¶¶S T
;
¶¶T U
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß  !
<
ßß" #
expectedDus
ßß$ /
.
ßß/ 0
Length
ßß0 6
;
ßß6 7
i
ßß8 9
++
ßß9 ;
)
ßß; <
{
®® 
string
©© 
cartonNumber
©© '
=
©©( )
expectedDus
©©* 5
[
©©5 6
i
©©6 7
]
©©7 8
;
©©8 9
List
™™ 
<
™™ 
string
™™ 
>
™™  
expectedLines
™™! .
=
™™/ 0#
expectedDeliveryUnits
™™1 F
[
™™F G
cartonNumber
™™G S
]
™™S T
;
™™T U
List
´´ 
<
´´ 
string
´´ 
>
´´  
actualLines
´´! ,
=
´´- .!
actualDeliveryUnits
´´/ B
[
´´B C
cartonNumber
´´C O
]
´´O P
;
´´P Q
if
¨¨ 
(
¨¨ 
expectedLines
¨¨ %
.
¨¨% &
Count
¨¨& +
(
¨¨+ ,
)
¨¨, -
==
¨¨. 0
actualLines
¨¨1 <
.
¨¨< =
Count
¨¨= B
(
¨¨B C
)
¨¨C D
)
¨¨D E
{
≠≠ 
for
ÆÆ 
(
ÆÆ 
int
ÆÆ  
j
ÆÆ! "
=
ÆÆ# $
$num
ÆÆ% &
;
ÆÆ& '
j
ÆÆ( )
<
ÆÆ* +
expectedLines
ÆÆ, 9
.
ÆÆ9 :
Count
ÆÆ: ?
;
ÆÆ? @
j
ÆÆA B
++
ÆÆB D
)
ÆÆD E
{
ØØ 
string
∞∞ "

actualLine
∞∞# -
=
∞∞. /
string
∞∞0 6
.
∞∞6 7
Empty
∞∞7 <
;
∞∞< =
string
±± "
expectedLine
±±# /
=
±±0 1
string
±±2 8
.
±±8 9
Empty
±±9 >
;
±±> ?
if
≤≤ 
(
≤≤  
j
≤≤  !
!=
≤≤" $
$num
≤≤% &
)
≤≤& '
{
≥≥ 
expectedLine
¥¥  ,
=
¥¥- .
expectedLines
¥¥/ <
[
¥¥< =
j
¥¥= >
]
¥¥> ?
;
¥¥? @

actualLine
µµ  *
=
µµ+ ,
actualLines
µµ- 8
[
µµ8 9
j
µµ9 :
]
µµ: ;
;
µµ; <
if
∂∂  "
(
∂∂# $
!
∂∂$ %
string
∂∂% +
.
∂∂+ ,
IsNullOrEmpty
∂∂, 9
(
∂∂9 :
expectedLine
∂∂: F
)
∂∂F G
)
∂∂G H
{
∑∑  !
if
∫∫$ &
(
∫∫' (
!
∫∫( )
string
∫∫) /
.
∫∫/ 0
IsNullOrEmpty
∫∫0 =
(
∫∫= >
expectedLine
∫∫> J
.
∫∫J K
Trim
∫∫K O
(
∫∫O P
)
∫∫P Q
)
∫∫Q R
&&
∫∫S U
!
∫∫V W
string
∫∫W ]
.
∫∫] ^
IsNullOrEmpty
∫∫^ k
(
∫∫k l

actualLine
∫∫l v
.
∫∫v w
Trim
∫∫w {
(
∫∫{ |
)
∫∫| }
)
∫∫} ~
&&∫∫ Å
!∫∫Ç É

actualLine∫∫É ç
.∫∫ç é

StartsWith∫∫é ò
(∫∫ò ô&
fileHeaderFooterPrefix∫∫ô Ø
)∫∫Ø ∞
&&∫∫± ≥
!∫∫¥ µ
expectedLine∫∫µ ¡
.∫∫¡ ¬

StartsWith∫∫¬ Ã
(∫∫Ã Õ&
fileHeaderFooterPrefix∫∫Õ „
)∫∫„ ‰
)∫∫‰ Â
{
ªª$ %
results
ºº( /
.
ºº/ 0
Add
ºº0 3
(
ºº3 4#
CompareTricepsRecords
ºº4 I
(
ººI J
expectedLine
ººJ V
,
ººV W

actualLine
ººX b
,
ººb c
cartonNumber
ººd p
,
ººp q

RecordType
ººr |
.
ºº| }
DETAILºº} É
)ººÉ Ñ
)ººÑ Ö
;ººÖ Ü
}
ΩΩ$ %
}
ææ  !
}
øø 
else
¿¿  
{
¡¡ 
results
¬¬  '
.
¬¬' (
Add
¬¬( +
(
¬¬+ ,#
CompareTricepsRecords
¬¬, A
(
¬¬A B
expectedLines
¬¬B O
[
¬¬O P
$num
¬¬P Q
]
¬¬Q R
,
¬¬R S
actualLines
¬¬T _
[
¬¬_ `
$num
¬¬` a
]
¬¬a b
,
¬¬b c
cartonNumber
¬¬d p
,
¬¬p q

RecordType
¬¬r |
.
¬¬| }
DUHEADER¬¬} Ö
)¬¬Ö Ü
)¬¬Ü á
;¬¬á à
}
√√ 
}
ƒƒ 
}
≈≈ 
else
∆∆ 
{
«« 
File
…… 
.
…… 
AppendAllText
…… *
(
……* +"
ApplicationConstants
……+ ?
.
……? @
LOG_FILE
……@ H
,
……H I
$str
……J q
+
……r s
cartonNumber……t Ä
+……Å Ç
$str……É û
+……ü †
Environment……° ¨
.……¨ ≠
NewLine……≠ ¥
)……¥ µ
;……µ ∂
}
   
}
ÀÀ 
return
ÃÃ 
results
ÃÃ 
.
ÃÃ 
Contains
ÃÃ '
(
ÃÃ' (
false
ÃÃ( -
)
ÃÃ- .
?
ÃÃ/ 0
false
ÃÃ1 6
:
ÃÃ7 8
true
ÃÃ9 =
;
ÃÃ= >
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
)
ŒŒ 
{
œœ 
throw
–– 
;
–– 
}
—— 
}
““ 	
private
‘‘ 
bool
‘‘ 
ComparePOFiles
‘‘ #
(
‘‘# $
string
‘‘$ *
file1
‘‘+ 0
,
‘‘0 1
string
‘‘2 8
file2
‘‘9 >
,
‘‘> ?
string
‘‘@ F
logFile
‘‘G N
,
‘‘N O
string
‘‘P V
depotNumber
‘‘W b
)
‘‘b c
{
’’ 	
try
÷÷ 
{
◊◊ 
string
ÿÿ 
[
ÿÿ 
]
ÿÿ 
expectedFileLines
ÿÿ *
=
ÿÿ+ ,
File
ÿÿ- 1
.
ÿÿ1 2
ReadAllLines
ÿÿ2 >
(
ÿÿ> ?
file1
ÿÿ? D
)
ÿÿD E
;
ÿÿE F
string
ŸŸ 
[
ŸŸ 
]
ŸŸ 
actualFileLines
ŸŸ (
=
ŸŸ) *
File
ŸŸ+ /
.
ŸŸ/ 0
ReadAllLines
ŸŸ0 <
(
ŸŸ< =
file2
ŸŸ= B
)
ŸŸB C
;
ŸŸC D
string
€€ !
expectedFileContent
€€ *
=
€€+ ,
File
€€- 1
.
€€1 2
ReadAllText
€€2 =
(
€€= >
file1
€€> C
)
€€C D
;
€€D E
string
‹‹ 
actualFileContent
‹‹ (
=
‹‹) *
File
‹‹+ /
.
‹‹/ 0
ReadAllText
‹‹0 ;
(
‹‹; <
file2
‹‹< A
)
‹‹A B
;
‹‹B C
bool
ﬁﬁ 
retvalue
ﬁﬁ 
=
ﬁﬁ 
false
ﬁﬁ  %
;
ﬁﬁ% &
File
ﬂﬂ 
.
ﬂﬂ 
AppendAllText
ﬂﬂ "
(
ﬂﬂ" #"
ApplicationConstants
ﬂﬂ# 7
.
ﬂﬂ7 8
LOG_FILE
ﬂﬂ8 @
,
ﬂﬂ@ A
$"
ﬂﬂB D
$str
ﬂﬂD f
{
ﬂﬂf g
Path
ﬂﬂg k
.
ﬂﬂk l
GetFileName
ﬂﬂl w
(
ﬂﬂw x
file1
ﬂﬂx }
)
ﬂﬂ} ~
}
ﬂﬂ~ 
$strﬂﬂ ã
{ﬂﬂã å
Pathﬂﬂå ê
.ﬂﬂê ë
GetFileNameﬂﬂë ú
(ﬂﬂú ù
file2ﬂﬂù ¢
)ﬂﬂ¢ £
}ﬂﬂ£ §
$strﬂﬂ§ ™
"ﬂﬂ™ ´
+ﬂﬂ¨ ≠
EnvironmentﬂﬂÆ π
.ﬂﬂπ ∫
NewLineﬂﬂ∫ ¡
)ﬂﬂ¡ ¬
;ﬂﬂ¬ √
if
·· 
(
·· 
expectedFileLines
·· %
.
··% &
Length
··& ,
==
··- /
actualFileLines
··0 ?
.
··? @
Length
··@ F
)
··F G
{
‚‚ #
CompareTricepsRecords
„„ )
(
„„) *
expectedFileLines
„„* ;
[
„„; <
$num
„„< =
]
„„= >
,
„„> ?
actualFileLines
„„@ O
[
„„O P
$num
„„P Q
]
„„Q R
,
„„R S
$str
„„T V
,
„„V W

RecordType
„„X b
.
„„b c
POHEADER
„„c k
)
„„k l
;
„„l m
List
‰‰ 
<
‰‰ 
string
‰‰ 
>
‰‰  !
expectedrecordsList
‰‰! 4
=
‰‰5 6!
expectedFileContent
‰‰7 J
.
‰‰J K
Split
‰‰K P
(
‰‰P Q
new
‰‰Q T
[
‰‰T U
]
‰‰U V
{
‰‰W X
$str
‰‰Y _
,
‰‰_ `
$str
‰‰a e
,
‰‰e f
$str
‰‰g k
}
‰‰l m
,
‰‰m n!
StringSplitOptions‰‰o Å
.‰‰Å Ç
None‰‰Ç Ü
)‰‰Ü á
.‰‰á à
ToList‰‰à é
(‰‰é è
)‰‰è ê
.‰‰ê ë
GetRange‰‰ë ô
(‰‰ô ö
$num‰‰ö õ
,‰‰õ ú!
expectedFileLines‰‰ù Æ
.‰‰Æ Ø
Length‰‰Ø µ
-‰‰∂ ∑
$num‰‰∏ π
)‰‰π ∫
;‰‰∫ ª
List
ÂÂ 
<
ÂÂ 
string
ÂÂ 
>
ÂÂ  
ActualrecordsList
ÂÂ! 2
=
ÂÂ3 4!
expectedFileContent
ÂÂ5 H
.
ÂÂH I
Split
ÂÂI N
(
ÂÂN O
new
ÂÂO R
[
ÂÂR S
]
ÂÂS T
{
ÂÂU V
$str
ÂÂW ]
,
ÂÂ] ^
$str
ÂÂ_ c
,
ÂÂc d
$str
ÂÂe i
}
ÂÂj k
,
ÂÂk l 
StringSplitOptions
ÂÂm 
.ÂÂ Ä
NoneÂÂÄ Ñ
)ÂÂÑ Ö
.ÂÂÖ Ü
ToListÂÂÜ å
(ÂÂå ç
)ÂÂç é
.ÂÂé è
GetRangeÂÂè ó
(ÂÂó ò
$numÂÂò ô
,ÂÂô ö!
expectedFileLinesÂÂõ ¨
.ÂÂ¨ ≠
LengthÂÂ≠ ≥
-ÂÂ¥ µ
$numÂÂ∂ ∑
)ÂÂ∑ ∏
;ÂÂ∏ π
var
ÊÊ 
poLines
ÊÊ 
=
ÊÊ  !!
expectedrecordsList
ÊÊ" 5
.
ÊÊ5 6
GroupBy
ÊÊ6 =
(
ÊÊ= >
s
ÊÊ> ?
=>
ÊÊ@ B
new
ÊÊC F
{
ÊÊG H
POSKU
ÊÊI N
=
ÊÊO P
s
ÊÊQ R
.
ÊÊR S
	Substring
ÊÊS \
(
ÊÊ\ ]
$num
ÊÊ] ^
,
ÊÊ^ _
$num
ÊÊ` b
)
ÊÊb c
}
ÊÊd e
)
ÊÊe f
;
ÊÊf g
foreach
ÁÁ 
(
ÁÁ 
var
ÁÁ  
group
ÁÁ! &
in
ÁÁ' )
poLines
ÁÁ* 1
)
ÁÁ1 2
{
ËË 
foreach
ÈÈ 
(
ÈÈ  !
var
ÈÈ! $
rec
ÈÈ% (
in
ÈÈ) +
group
ÈÈ, 1
)
ÈÈ1 2
{
ÍÍ 
string
ÎÎ "

actualLine
ÎÎ# -
=
ÎÎ. /
ActualrecordsList
ÎÎ0 A
.
ÎÎA B
FirstOrDefault
ÎÎB P
(
ÎÎP Q
x
ÎÎQ R
=>
ÎÎS U
x
ÎÎV W
.
ÎÎW X

StartsWith
ÎÎX b
(
ÎÎb c
group
ÎÎc h
.
ÎÎh i
Key
ÎÎi l
.
ÎÎl m
POSKU
ÎÎm r
)
ÎÎr s
)
ÎÎs t
;
ÎÎt u
string
ÏÏ "
expectedLine
ÏÏ# /
=
ÏÏ0 1
rec
ÏÏ2 5
;
ÏÏ5 6#
CompareTricepsRecords
ÌÌ 1
(
ÌÌ1 2
expectedLine
ÌÌ2 >
,
ÌÌ> ?

actualLine
ÌÌ@ J
,
ÌÌJ K
string
ÌÌL R
.
ÌÌR S
Empty
ÌÌS X
,
ÌÌX Y

RecordType
ÌÌZ d
.
ÌÌd e
PODETAIL
ÌÌe m
)
ÌÌm n
;
ÌÌn o
}
ÓÓ 
}
ÔÔ 
}
 
else
ÒÒ 
{
ÚÚ 
File
ÛÛ 
.
ÛÛ 
AppendAllText
ÛÛ &
(
ÛÛ& '
logFile
ÛÛ' .
,
ÛÛ. /
$str
ÛÛ0 \
+
ÛÛ] ^
Environment
ÛÛ_ j
.
ÛÛj k
NewLine
ÛÛk r
)
ÛÛr s
;
ÛÛs t
File
ÙÙ 
.
ÙÙ 
AppendAllText
ÙÙ &
(
ÙÙ& '
logFile
ÙÙ' .
,
ÙÙ. /
$str
ÙÙ0 H
+
ÙÙI J
expectedFileLines
ÙÙK \
.
ÙÙ\ ]
Length
ÙÙ] c
+
ÙÙd e
Environment
ÙÙf q
.
ÙÙq r
NewLine
ÙÙr y
+
ıı 
$str
ıı 0
+
ıı1 2
actualFileLines
ıı3 B
.
ııB C
Length
ııC I
+
ııJ K
Environment
ııL W
.
ııW X
NewLine
ııX _
)
ıı_ `
;
ıı` a
retvalue
ˆˆ 
=
ˆˆ 
false
ˆˆ $
;
ˆˆ$ %
}
˜˜ 
return
˘˘ 
retvalue
˘˘ 
;
˘˘  
}
˙˙ 
catch
˚˚ 
(
˚˚ 
	Exception
˚˚ 
)
˚˚ 
{
¸¸ 
throw
˝˝ 
;
˝˝ 
}
˛˛ 
}
ˇˇ 	
private
ÄÄ 
bool
ÄÄ #
CompareTricepsRecords
ÄÄ *
(
ÄÄ* +
string
ÄÄ+ 1
expectedFileLine
ÄÄ2 B
,
ÄÄB C
string
ÄÄD J
actualFileLine
ÄÄK Y
,
ÄÄY Z
string
ÄÄ[ a
du
ÄÄb d
,
ÄÄd e

RecordType
ÄÄf p

recordType
ÄÄq {
)
ÄÄ{ |
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
switch
ÑÑ 
(
ÑÑ 

recordType
ÑÑ "
)
ÑÑ" #
{
ÖÖ 
case
ÜÜ 

RecordType
ÜÜ #
.
ÜÜ# $
POHEADER
ÜÜ$ ,
:
ÜÜ, -
return
áá &
_purchaseOrderComparator
áá 7
.
áá7 8
ComparePOHeader
áá8 G
(
ááG H
expectedFileLine
ááH X
,
ááX Y
actualFileLine
ááZ h
)
ááh i
;
áái j
case
àà 

RecordType
àà #
.
àà# $
PODETAIL
àà$ ,
:
àà, -
return
ââ &
_purchaseOrderComparator
ââ 7
.
ââ7 8
ComparePODetail
ââ8 G
(
ââG H
expectedFileLine
ââH X
,
ââX Y
actualFileLine
ââZ h
)
ââh i
;
ââi j
case
ää 

RecordType
ää #
.
ää# $

FILEHEADER
ää$ .
:
ää. /
return
ãã 
_asnComparator
ãã -
.
ãã- ."
CompareASNFileHeader
ãã. B
(
ããB C
expectedFileLine
ããC S
,
ããS T
actualFileLine
ããU c
)
ããc d
;
ããd e
case
åå 

RecordType
åå #
.
åå# $
DUHEADER
åå$ ,
:
åå, -
return
çç 
_asnComparator
çç -
.
çç- .'
CompareDeliveryUnitHeader
çç. G
(
ççG H
expectedFileLine
ççH X
,
ççX Y
actualFileLine
ççZ h
,
ççh i
du
ççj l
)
ççl m
;
ççm n
case
èè 

RecordType
èè #
.
èè# $
DETAIL
èè$ *
:
èè* +
return
êê 
_asnComparator
êê -
.
êê- .
CompareLineItems
êê. >
(
êê> ?
expectedFileLine
êê? O
,
êêO P
actualFileLine
êêQ _
,
êê_ `
du
êêa c
)
êêc d
;
êêd e
case
íí 

RecordType
íí #
.
íí# $

FILEFOOTER
íí$ .
:
íí. /
return
ìì 
_asnComparator
ìì -
.
ìì- ."
CompareASNFileFooter
ìì. B
(
ììB C
expectedFileLine
ììC S
,
ììS T
actualFileLine
ììU c
)
ììc d
;
ììd e
default
îî 
:
îî 
return
ïï 
false
ïï $
;
ïï$ %
}
ññ 
}
óó 
catch
òò 
(
òò 
	Exception
òò 
)
òò 
{
ôô 
throw
öö 
;
öö 
}
õõ 
}
úú 	
}
ùù 
}ûû Ω-
JC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\ComparatorHelper.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6
Comparators6 A
{ 
public		 

class		 
ComparatorHelper		 !
:		" #
IComparatorHelper		$ 5
{

 
public 

Dictionary 
< 
string  
,  !
List" &
<& '
string' -
>- .
>. /.
"GetTricepsCartonAndAssociatedLines0 R
(R S
stringS Y
fileContentZ e
,e f
stringg m
depotNumbern y
)y z
{ 	
string 
headerPrefix 
=  !
$str" %
+& '
depotNumber( 3
+4 5
$str6 :
;: ;
List 
< 
string 
> 
recordsList $
=% &
fileContent' 2
.2 3
Split3 8
(8 9
new9 <
[< =
]= >
{? @
$strA G
,G H
$strI M
,M N
$strO S
}T U
,U V
StringSplitOptionsW i
.i j
Nonej n
)n o
.o p
ToListp v
(v w
)w x
;x y

Dictionary 
< 
string 
, 
List #
<# $
string$ *
>* +
>+ ,
deliveryUnits- :
=; <
new= @

DictionaryA K
<K L
stringL R
,R S
ListT X
<X Y
stringY _
>_ `
>` a
(a b
)b c
;c d
List 
< 
string 
> 
duLines  
=! "
recordsList# .
.. /
Where/ 4
(4 5
x5 6
=>7 9
x: ;
.; <

StartsWith< F
(F G
headerPrefixG S
)S T
)T U
.U V
ToListV \
(\ ]
)] ^
;^ _
for 
( 
int 
i 
= 
$num 
; 
i 
< 
duLines  '
.' (
Count( -
;- .
i/ 0
++0 2
)2 3
{ 
List 
< 
string 
> 
lst  
=! "
null# '
;' (
int 
	indexofDu 
= 
recordsList  +
.+ ,
IndexOf, 3
(3 4
duLines4 ;
[; <
i< =
]= >
)> ?
;? @
if 
( 
( 
i 
+ 
$num 
) 
< 
duLines %
.% &
Count& +
)+ ,
{ 
int 
indexofNextDu %
=& '
recordsList( 3
.3 4
IndexOf4 ;
(; <
duLines< C
[C D
iD E
+F G
$numH I
]I J
)J K
;K L
int 
	itemCount !
=" #
($ %
indexofNextDu% 2
-3 4
	indexofDu5 >
)> ?
-@ A
$numB C
;C D
lst 
= 
recordsList %
.% &
GetRange& .
(. /
	indexofDu/ 8
,8 9
	itemCount: C
+D E
$numF G
)G H
;H I
} 
else 
{ 
int 
totalLinecount &
=' (
recordsList) 4
.4 5
Count5 :
(: ;
); <
;< =
int 
lastDuLineitemCount +
=, -
(. /
totalLinecount/ =
-> ?
recordsList@ K
.K L
IndexOfL S
(S T
duLinesT [
[[ \
i\ ]
]] ^
)^ _
)_ `
-a b
$numc d
;d e
lst   
=   
recordsList   %
.  % &
GetRange  & .
(  . /
	indexofDu  / 8
,  8 9
lastDuLineitemCount  : M
+  N O
$num  P Q
)  Q R
;  R S
}!! 
string## 
cartonNumber## #
=##$ %
duLines##& -
[##- .
i##. /
]##/ 0
.##0 1
	Substring##1 :
(##: ;
$num##; =
,##= >
$num##? A
)##A B
.##B C
Trim##C G
(##G H
)##H I
;##I J
if%% 
(%% 
!%% 
deliveryUnits%% "
.%%" #
ContainsKey%%# .
(%%. /
cartonNumber%%/ ;
)%%; <
)%%< =
{&& 
deliveryUnits'' !
.''! "
Add''" %
(''% &
cartonNumber''& 2
,''2 3
lst''4 7
)''7 8
;''8 9
}(( 
else)) 
{)) 
List** 
<** 
string** 
>**  
lines**! &
=**& '
deliveryUnits**( 5
[**5 6
cartonNumber**6 B
]**B C
;**C D
lines++ 
.++ 
AddRange++ "
(++" #
lst++# &
)++& '
;++' (
},, 
}-- 
return.. 
deliveryUnits..  
;..  !
}// 	
}00 
}11 É
EC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\FileCompare.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6
Comparators6 A
{ 
public		 

class		 
FileCompare		 
:		 
IEqualityComparer		 0
<		0 1
FileInfo		1 9
>		9 :
{

 
public 
FileCompare 
( 
) 
{ 
}  
public 
bool 
Equals 
( 
FileInfo #
f1$ &
,& '
FileInfo( 0
f21 3
)3 4
{ 	
return 
( 
f1 
. 
Name 
== 
f2 !
.! "
Name" &
)& '
;' (
} 	
public 
int 
GetHashCode 
( 
FileInfo '
fi( *
)* +
{ 	
string 
s 
= 
$" 
{ 
fi 
. 
Name !
}! "
"" #
;# $
return 
s 
. 
GetHashCode  
(  !
)! "
;" #
} 	
} 
} Í	
HC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\IASNComparator.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
.1 2
Comparators2 =
{ 
public 

	interface 
IASNComparator #
{ 
bool  
CompareASNFileHeader !
(! "
string" (
expectedFileLine) 9
,9 :
string; A
actualFileLineB P
)P Q
;Q R
bool  
CompareASNFileFooter !
(! "
string" (
expectedFileLine) 9
,9 :
string; A
actualFileLineB P
)P Q
;Q R
bool %
CompareDeliveryUnitHeader &
(& '
string' -
expectedFileLine. >
,> ?
string@ F
actualFileLineG U
,U V
stringW ]
du^ `
)` a
;a b
bool 
CompareLineItems 
( 
string $
expectedFileLine% 5
,5 6
string7 =
actualFileLine> L
,L M
stringN T
duU W
)W X
;X Y
}		 
}

 ˛
EC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\IComparator.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6
Comparators6 A
{ 
public 

	interface 
IComparator  
{ 
bool 
CompareTricepsFiles  
(  !
string! '
depotNumber( 3
)3 4
;4 5
} 
} Ù
KC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\IComparatorHelper.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6
Comparators6 A
{ 
public 

	interface 
IComparatorHelper &
{ 
public 

Dictionary 
< 
string  
,  !
List" &
<& '
string' -
>- .
>. /.
"GetTricepsCartonAndAssociatedLines0 R
(R S
stringS Y
fileContentZ e
,e f
stringg m
depotNumbern y
)y z
;z {
} 
}		 ë
RC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\IPurchaseOrderComparator.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
.1 2
Comparators2 =
{ 
public 

	interface $
IPurchaseOrderComparator -
{ 
public 
bool 
ComparePOHeader #
(# $
string$ *
expectedFileLine+ ;
,; <
string= C
actualFileLineD R
)R S
;S T
public 
bool 
ComparePODetail #
(# $
string$ *
expectedFileLine+ ;
,; <
string= C
actualFileLineD R
)R S
;S T
} 
} õ∫
QC:\SonarTestRepo\sonartestapp\ShipmentTest\Comparators\PurchaseOrderComparator.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
.1 2
Comparators2 =
{ 
public 

class #
PurchaseOrderComparator (
:) *$
IPurchaseOrderComparator+ C
{ 
public 
bool 
ComparePODetail #
(# $
string$ *
expectedFileLine+ ;
,; <
string= C
actualFileLineD R
)R S
{		 	
try

 
{ 
List 
< 
string 
> 
	errorList &
=' (
new) ,
List- 1
<1 2
string2 8
>8 9
(9 :
): ;
;; <
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" D
+E F
expectedFileLineG W
.W X
	SubstringX a
(a b
$numb c
,c d
$nume f
)f g
+h i
$strj t
+u v
actualFileLine	w Ö
.
Ö Ü
	Substring
Ü è
(
è ê
$num
ê ë
,
ë í
$num
ì î
)
î ï
+
ñ ó
Environment
ò £
.
£ §
NewLine
§ ´
)
´ ¨
;
¨ ≠
} 
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" J
+K L
expectedFileLineM ]
.] ^
	Substring^ g
(g h
$numh i
,i j
$numk l
)l m
+n o
$strp z
+{ |
actualFileLine	} ã
.
ã å
	Substring
å ï
(
ï ñ
$num
ñ ó
,
ó ò
$num
ô ö
)
ö õ
+
ú ù
Environment
û ©
.
© ™
NewLine
™ ±
)
± ≤
;
≤ ≥
} 
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" ?
+@ A
expectedFileLineB R
.R S
	SubstringS \
(\ ]
$num] ^
,^ _
$num` a
)a b
+c d
$stre o
+p q
actualFileLine	r Ä
.
Ä Å
	Substring
Å ä
(
ä ã
$num
ã å
,
å ç
$num
é è
)
è ê
+
ë í
Environment
ì û
.
û ü
NewLine
ü ¶
)
¶ ß
;
ß ®
} 
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 0
,0 1
$num2 3
)3 4
!=5 7
actualFileLine8 F
.F G
	SubstringG P
(P Q
$numQ R
,R S
$numT U
)U V
)V W
{ 
	errorList 
. 
Add !
(! "
$str" E
+F G
expectedFileLineH X
.X Y
	SubstringY b
(b c
$numc d
,d e
$numf g
)g h
+i j
$strk u
+v w
actualFileLine	x Ü
.
Ü á
	Substring
á ê
(
ê ë
$num
ë í
,
í ì
$num
î ï
)
ï ñ
+
ó ò
Environment
ô §
.
§ •
NewLine
• ¨
)
¨ ≠
;
≠ Æ
} 
if 
( 
expectedFileLine $
.$ %
	Substring% .
(. /
$num/ 1
,1 2
$num3 4
)4 5
!=6 8
actualFileLine9 G
.G H
	SubstringH Q
(Q R
$numR T
,T U
$numV W
)W X
)X Y
{ 
	errorList   
.   
Add   !
(  ! "
$str  " H
+  I J
expectedFileLine  K [
.  [ \
	Substring  \ e
(  e f
$num  f h
,  h i
$num  j k
)  k l
+  m n
$str  o y
+  z {
actualFileLine	  | ä
.
  ä ã
	Substring
  ã î
(
  î ï
$num
  ï ó
,
  ó ò
$num
  ô ö
)
  ö õ
+
  ú ù
Environment
  û ©
.
  © ™
NewLine
  ™ ±
)
  ± ≤
;
  ≤ ≥
}!! 
if"" 
("" 
expectedFileLine"" $
.""$ %
	Substring""% .
("". /
$num""/ 1
,""1 2
$num""3 4
)""4 5
!=""6 8
actualFileLine""9 G
.""G H
	Substring""H Q
(""Q R
$num""R T
,""T U
$num""V W
)""W X
)""X Y
{## 
	errorList$$ 
.$$ 
Add$$ !
($$! "
$str$$" E
+$$F G
expectedFileLine$$H X
.$$X Y
	Substring$$Y b
($$b c
$num$$c e
,$$e f
$num$$g h
)$$h i
+$$j k
$str$$l v
+$$w x
actualFileLine	$$y á
.
$$á à
	Substring
$$à ë
(
$$ë í
$num
$$í î
,
$$î ï
$num
$$ñ ó
)
$$ó ò
+
$$ô ö
Environment
$$õ ¶
.
$$¶ ß
NewLine
$$ß Æ
)
$$Æ Ø
;
$$Ø ∞
}%% 
if&& 
(&& 
expectedFileLine&& $
.&&$ %
	Substring&&% .
(&&. /
$num&&/ 1
,&&1 2
$num&&3 5
)&&5 6
!=&&7 9
actualFileLine&&: H
.&&H I
	Substring&&I R
(&&R S
$num&&S U
,&&U V
$num&&W Y
)&&Y Z
)&&Z [
{'' 
	errorList(( 
.(( 
Add(( !
(((! "
$str((" C
+((D E
expectedFileLine((F V
.((V W
	Substring((W `
(((` a
$num((a c
,((c d
$num((e g
)((g h
+((i j
$str((k u
+((v w
actualFileLine	((x Ü
.
((Ü á
	Substring
((á ê
(
((ê ë
$num
((ë ì
,
((ì î
$num
((ï ó
)
((ó ò
+
((ô ö
Environment
((õ ¶
.
((¶ ß
NewLine
((ß Æ
)
((Æ Ø
;
((Ø ∞
})) 
if** 
(** 
expectedFileLine** $
.**$ %
	Substring**% .
(**. /
$num**/ 1
,**1 2
$num**3 4
)**4 5
!=**6 8
actualFileLine**9 G
.**G H
	Substring**H Q
(**Q R
$num**R T
,**T U
$num**V W
)**W X
)**X Y
{++ 
	errorList,, 
.,, 
Add,, !
(,,! "
$str,," D
+,,E F
expectedFileLine,,G W
.,,W X
	Substring,,X a
(,,a b
$num,,b d
,,,d e
$num,,f g
),,g h
+,,i j
$str,,k u
+,,v w
actualFileLine	,,x Ü
.
,,Ü á
	Substring
,,á ê
(
,,ê ë
$num
,,ë ì
,
,,ì î
$num
,,ï ñ
)
,,ñ ó
+
,,ò ô
Environment
,,ö •
.
,,• ¶
NewLine
,,¶ ≠
)
,,≠ Æ
;
,,Æ Ø
}-- 
if.. 
(.. 
expectedFileLine.. $
...$ %
	Substring..% .
(... /
$num../ 1
,..1 2
$num..3 4
)..4 5
!=..6 8
actualFileLine..9 G
...G H
	Substring..H Q
(..Q R
$num..R T
,..T U
$num..V W
)..W X
)..X Y
{// 
	errorList00 
.00 
Add00 !
(00! "
$str00" E
+00F G
expectedFileLine00H X
.00X Y
	Substring00Y b
(00b c
$num00c e
,00e f
$num00g h
)00h i
+00j k
$str00l v
+00w x
actualFileLine	00y á
.
00á à
	Substring
00à ë
(
00ë í
$num
00í î
,
00î ï
$num
00ñ ó
)
00ó ò
+
00ô ö
Environment
00õ ¶
.
00¶ ß
NewLine
00ß Æ
)
00Æ Ø
;
00Ø ∞
}11 
if22 
(22 
expectedFileLine22 $
.22$ %
	Substring22% .
(22. /
$num22/ 1
,221 2
$num223 4
)224 5
!=226 8
actualFileLine229 G
.22G H
	Substring22H Q
(22Q R
$num22R T
,22T U
$num22V W
)22W X
)22X Y
{33 
	errorList44 
.44 
Add44 !
(44! "
$str44" H
+44I J
expectedFileLine44K [
.44[ \
	Substring44\ e
(44e f
$num44f h
,44h i
$num44j k
)44k l
+44m n
$str44o y
+44z {
actualFileLine	44| ä
.
44ä ã
	Substring
44ã î
(
44î ï
$num
44ï ó
,
44ó ò
$num
44ô ö
)
44ö õ
+
44ú ù
Environment
44û ©
.
44© ™
NewLine
44™ ±
)
44± ≤
;
44≤ ≥
}55 
if66 
(66 
expectedFileLine66 $
.66$ %
	Substring66% .
(66. /
$num66/ 1
,661 2
$num663 4
)664 5
!=666 8
actualFileLine669 G
.66G H
	Substring66H Q
(66Q R
$num66R T
,66T U
$num66V W
)66W X
)66X Y
{77 
	errorList88 
.88 
Add88 !
(88! "
$str88" B
+88C D
expectedFileLine88E U
.88U V
	Substring88V _
(88_ `
$num88` b
,88b c
$num88d e
)88e f
+88g h
$str88i s
+88t u
actualFileLine	88v Ñ
.
88Ñ Ö
	Substring
88Ö é
(
88é è
$num
88è ë
,
88ë í
$num
88ì î
)
88î ï
+
88ñ ó
Environment
88ò £
.
88£ §
NewLine
88§ ´
)
88´ ¨
;
88¨ ≠
}99 
if:: 
(:: 
expectedFileLine:: $
.::$ %
	Substring::% .
(::. /
$num::/ 1
,::1 2
$num::3 4
)::4 5
!=::6 8
actualFileLine::9 G
.::G H
	Substring::H Q
(::Q R
$num::R T
,::T U
$num::V W
)::W X
)::X Y
{;; 
	errorList<< 
.<< 
Add<< !
(<<! "
$str<<" H
+<<I J
expectedFileLine<<K [
.<<[ \
	Substring<<\ e
(<<e f
$num<<f h
,<<h i
$num<<j k
)<<k l
+<<m n
$str<<o y
+<<z {
actualFileLine	<<| ä
.
<<ä ã
	Substring
<<ã î
(
<<î ï
$num
<<ï ó
,
<<ó ò
$num
<<ô ö
)
<<ö õ
+
<<ú ù
Environment
<<û ©
.
<<© ™
NewLine
<<™ ±
)
<<± ≤
;
<<≤ ≥
}== 
if>> 
(>> 
expectedFileLine>> $
.>>$ %
	Substring>>% .
(>>. /
$num>>/ 1
,>>1 2
$num>>3 6
)>>6 7
!=>>8 :
actualFileLine>>; I
.>>I J
	Substring>>J S
(>>S T
$num>>T V
,>>V W
$num>>X [
)>>[ \
)>>\ ]
{?? 
	errorList@@ 
.@@ 
Add@@ !
(@@! "
$str@@" A
+@@B C
expectedFileLine@@D T
.@@T U
	Substring@@U ^
(@@^ _
$num@@_ a
,@@a b
$num@@c f
)@@f g
+@@h i
$str@@j t
+@@u v
actualFileLine	@@w Ö
.
@@Ö Ü
	Substring
@@Ü è
(
@@è ê
$num
@@ê í
,
@@í ì
$num
@@î ó
)
@@ó ò
+
@@ô ö
Environment
@@õ ¶
.
@@¶ ß
NewLine
@@ß Æ
)
@@Æ Ø
;
@@Ø ∞
}AA 
ifBB 
(BB 
	errorListBB 
.BB 
AnyBB !
(BB! "
)BB" #
)BB# $
{CC 
ifDD 
(DD 
	errorListDD !
.DD! "
AnyDD" %
(DD% &
)DD& '
)DD' (
{EE 
	errorListFF !
.FF! "
InsertFF" (
(FF( )
$numFF) *
,FF* +
$strFF, Q
+FFR S
EnvironmentFFT _
.FF_ `
NewLineFF` g
)FFg h
;FFh i
}GG 
FileHH 
.HH 
AppendAllTextHH &
(HH& ' 
ApplicationConstantsHH' ;
.HH; <
LOG_FILEHH< D
,HHD E
$strHHF k
+HHl m
EnvironmentHHn y
.HHy z
NewLine	HHz Å
)
HHÅ Ç
;
HHÇ É
FileII 
.II 
AppendAllTextII &
(II& ' 
ApplicationConstantsII' ;
.II; <
LOG_FILEII< D
,IID E
$strIIF Y
+IIZ [
expectedFileLineII\ l
+IIm n
EnvironmentIIo z
.IIz {
NewLine	II{ Ç
)
IIÇ É
;
IIÉ Ñ
FileJJ 
.JJ 
AppendAllTextJJ &
(JJ& ' 
ApplicationConstantsJJ' ;
.JJ; <
LOG_FILEJJ< D
,JJD E
$strJJF W
+JJX Y
actualFileLineJJZ h
+JJi j
EnvironmentJJk v
.JJv w
NewLineJJw ~
)JJ~ 
;	JJ Ä
FileKK 
.KK 
AppendAllTextKK &
(KK& ' 
ApplicationConstantsKK' ;
.KK; <
LOG_FILEKK< D
,KKD E
stringKKF L
.KKL M
JoinKKM Q
(KKQ R
$strKKR U
,KKU V
	errorListKKW `
)KK` a
)KKa b
;KKb c
returnLL 
falseLL  
;LL  !
}MM 
elseNN 
{OO 
returnPP 
truePP 
;PP  
}QQ 
}SS 
catchTT 
(TT 
	ExceptionTT 
)TT 
{UU 
throwVV 
;VV 
}WW 
}XX 	
public[[ 
bool[[ 
ComparePOHeader[[ #
([[# $
string[[$ *
expectedFileLine[[+ ;
,[[; <
string[[= C
actualFileLine[[D R
)[[R S
{\\ 	
try]] 
{^^ 
List__ 
<__ 
string__ 
>__ 
	errorList__ &
=__' (
new__) ,
List__- 1
<__1 2
string__2 8
>__8 9
(__9 :
)__: ;
;__; <
ifaa 
(aa 
expectedFileLineaa $
.aa$ %
	Substringaa% .
(aa. /
$numaa/ 0
,aa0 1
$numaa2 3
)aa3 4
!=aa5 7
actualFileLineaa8 F
.aaF G
	SubstringaaG P
(aaP Q
$numaaQ R
,aaR S
$numaaT U
)aaU V
)aaV W
{bb 
	errorListcc 
.cc 
Addcc !
(cc! "
$strcc" D
+ccE F
expectedFileLineccG W
.ccW X
	SubstringccX a
(cca b
$numccb c
,ccc d
$numcce f
)ccf g
+cch i
$strccj t
+ccu v
actualFileLine	ccw Ö
.
ccÖ Ü
	Substring
ccÜ è
(
ccè ê
$num
ccê ë
,
ccë í
$num
ccì î
)
ccî ï
+
ccñ ó
Environment
ccò £
.
cc£ §
NewLine
cc§ ´
)
cc´ ¨
;
cc¨ ≠
}dd 
ifee 
(ee 
expectedFileLineee $
.ee$ %
	Substringee% .
(ee. /
$numee/ 0
,ee0 1
$numee2 3
)ee3 4
!=ee5 7
actualFileLineee8 F
.eeF G
	SubstringeeG P
(eeP Q
$numeeQ R
,eeR S
$numeeT U
)eeU V
)eeV W
{ff 
	errorListgg 
.gg 
Addgg !
(gg! "
$strgg" J
+ggK L
expectedFileLineggM ]
.gg] ^
	Substringgg^ g
(ggg h
$numggh i
,ggi j
$numggk l
)ggl m
+ggn o
$strggp z
+gg{ |
actualFileLine	gg} ã
.
ggã å
	Substring
ggå ï
(
ggï ñ
$num
ggñ ó
,
ggó ò
$num
ggô ö
)
ggö õ
+
ggú ù
Environment
ggû ©
.
gg© ™
NewLine
gg™ ±
)
gg± ≤
;
gg≤ ≥
}hh 
ifii 
(ii 
expectedFileLineii $
.ii$ %
	Substringii% .
(ii. /
$numii/ 0
,ii0 1
$numii2 3
)ii3 4
!=ii5 7
actualFileLineii8 F
.iiF G
	SubstringiiG P
(iiP Q
$numiiQ R
,iiR S
$numiiT U
)iiU V
)iiV W
{jj 
	errorListkk 
.kk 
Addkk !
(kk! "
$strkk" ?
+kk@ A
expectedFileLinekkB R
.kkR S
	SubstringkkS \
(kk\ ]
$numkk] ^
,kk^ _
$numkk` a
)kka b
+kkc d
$strkke o
+kkp q
actualFileLine	kkr Ä
.
kkÄ Å
	Substring
kkÅ ä
(
kkä ã
$num
kkã å
,
kkå ç
$num
kké è
)
kkè ê
+
kkë í
Environment
kkì û
.
kkû ü
NewLine
kkü ¶
)
kk¶ ß
;
kkß ®
}ll 
ifmm 
(mm 
expectedFileLinemm $
.mm$ %
	Substringmm% .
(mm. /
$nummm/ 0
,mm0 1
$nummm2 3
)mm3 4
!=mm5 7
actualFileLinemm8 F
.mmF G
	SubstringmmG P
(mmP Q
$nummmQ R
,mmR S
$nummmT U
)mmU V
)mmV W
{nn 
	errorListoo 
.oo 
Addoo !
(oo! "
$stroo" E
+ooF G
expectedFileLineooH X
.ooX Y
	SubstringooY b
(oob c
$numooc d
,ood e
$numoof g
)oog h
+ooi j
$strook u
+oov w
actualFileLine	oox Ü
.
ooÜ á
	Substring
ooá ê
(
ooê ë
$num
ooë í
,
ooí ì
$num
ooî ï
)
ooï ñ
+
ooó ò
Environment
ooô §
.
oo§ •
NewLine
oo• ¨
)
oo¨ ≠
;
oo≠ Æ
}pp 
ifqq 
(qq 
expectedFileLineqq $
.qq$ %
	Substringqq% .
(qq. /
$numqq/ 1
,qq1 2
$numqq3 4
)qq4 5
!=qq6 8
actualFileLineqq9 G
.qqG H
	SubstringqqH Q
(qqQ R
$numqqR T
,qqT U
$numqqV W
)qqW X
)qqX Y
{rr 
	errorListss 
.ss 
Addss !
(ss! "
$strss" J
+ssK L
expectedFileLinessM ]
.ss] ^
	Substringss^ g
(ssg h
$numssh j
,ssj k
$numssl m
)ssm n
+sso p
$strssq {
+ss| }
actualFileLine	ss~ å
.
sså ç
	Substring
ssç ñ
(
ssñ ó
$num
ssó ô
,
ssô ö
$num
ssõ ú
)
ssú ù
+
ssû ü
Environment
ss† ´
.
ss´ ¨
NewLine
ss¨ ≥
)
ss≥ ¥
;
ss¥ µ
}tt 
ifuu 
(uu 
expectedFileLineuu $
.uu$ %
	Substringuu% .
(uu. /
$numuu/ 1
,uu1 2
$numuu3 4
)uu4 5
!=uu6 8
actualFileLineuu9 G
.uuG H
	SubstringuuH Q
(uuQ R
$numuuR T
,uuT U
$numuuV W
)uuW X
)uuX Y
{vv 
	errorListww 
.ww 
Addww !
(ww! "
$strww" J
+wwK L
expectedFileLinewwM ]
.ww] ^
	Substringww^ g
(wwg h
$numwwh j
,wwj k
$numwwl m
)wwm n
+wwo p
$strwwq {
+ww| }
actualFileLine	ww~ å
.
wwå ç
	Substring
wwç ñ
(
wwñ ó
$num
wwó ô
,
wwô ö
$num
wwõ ú
)
wwú ù
+
wwû ü
Environment
ww† ´
.
ww´ ¨
NewLine
ww¨ ≥
)
ww≥ ¥
;
ww¥ µ
}xx 
ifyy 
(yy 
expectedFileLineyy $
.yy$ %
	Substringyy% .
(yy. /
$numyy/ 1
,yy1 2
$numyy3 4
)yy4 5
!=yy6 8
actualFileLineyy9 G
.yyG H
	SubstringyyH Q
(yyQ R
$numyyR T
,yyT U
$numyyV W
)yyW X
)yyX Y
{zz 
	errorList{{ 
.{{ 
Add{{ !
({{! "
$str{{" J
+{{K L
expectedFileLine{{M ]
.{{] ^
	Substring{{^ g
({{g h
$num{{h j
,{{j k
$num{{l m
){{m n
+{{o p
$str{{q {
+{{| }
actualFileLine	{{~ å
.
{{å ç
	Substring
{{ç ñ
(
{{ñ ó
$num
{{ó ô
,
{{ô ö
$num
{{õ ú
)
{{ú ù
+
{{û ü
Environment
{{† ´
.
{{´ ¨
NewLine
{{¨ ≥
)
{{≥ ¥
;
{{¥ µ
}|| 
if}} 
(}} 
expectedFileLine}} $
.}}$ %
	Substring}}% .
(}}. /
$num}}/ 1
,}}1 2
$num}}3 4
)}}4 5
!=}}6 8
actualFileLine}}9 G
.}}G H
	Substring}}H Q
(}}Q R
$num}}R T
,}}T U
$num}}V W
)}}W X
)}}X Y
{~~ 
	errorList 
. 
Add !
(! "
$str" E
+F G
expectedFileLineH X
.X Y
	SubstringY b
(b c
$numc e
,e f
$numg h
)h i
+j k
$strl v
+w x
actualFileLine	y á
.
á à
	Substring
à ë
(
ë í
$num
í î
,
î ï
$num
ñ ó
)
ó ò
+
ô ö
Environment
õ ¶
.
¶ ß
NewLine
ß Æ
)
Æ Ø
;
Ø ∞
}
ÄÄ 
if
ÅÅ 
(
ÅÅ 
expectedFileLine
ÅÅ $
.
ÅÅ$ %
	Substring
ÅÅ% .
(
ÅÅ. /
$num
ÅÅ/ 1
,
ÅÅ1 2
$num
ÅÅ3 5
)
ÅÅ5 6
!=
ÅÅ7 9
actualFileLine
ÅÅ: H
.
ÅÅH I
	Substring
ÅÅI R
(
ÅÅR S
$num
ÅÅS U
,
ÅÅU V
$num
ÅÅW Y
)
ÅÅY Z
)
ÅÅZ [
{
ÇÇ 
	errorList
ÉÉ 
.
ÉÉ 
Add
ÉÉ !
(
ÉÉ! "
$str
ÉÉ" B
+
ÉÉC D
expectedFileLine
ÉÉE U
.
ÉÉU V
	Substring
ÉÉV _
(
ÉÉ_ `
$num
ÉÉ` b
,
ÉÉb c
$num
ÉÉd f
)
ÉÉf g
+
ÉÉh i
$str
ÉÉj t
+
ÉÉu v
actualFileLineÉÉw Ö
.ÉÉÖ Ü
	SubstringÉÉÜ è
(ÉÉè ê
$numÉÉê í
,ÉÉí ì
$numÉÉî ñ
)ÉÉñ ó
+ÉÉò ô
EnvironmentÉÉö •
.ÉÉ• ¶
NewLineÉÉ¶ ≠
)ÉÉ≠ Æ
;ÉÉÆ Ø
}
ÑÑ 
if
ÖÖ 
(
ÖÖ 
expectedFileLine
ÖÖ $
.
ÖÖ$ %
	Substring
ÖÖ% .
(
ÖÖ. /
$num
ÖÖ/ 1
,
ÖÖ1 2
$num
ÖÖ3 4
)
ÖÖ4 5
!=
ÖÖ6 8
actualFileLine
ÖÖ9 G
.
ÖÖG H
	Substring
ÖÖH Q
(
ÖÖQ R
$num
ÖÖR T
,
ÖÖT U
$num
ÖÖV W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
	errorList
áá 
.
áá 
Add
áá !
(
áá! "
$str
áá" A
+
ááB C
expectedFileLine
ááD T
.
ááT U
	Substring
ááU ^
(
áá^ _
$num
áá_ a
,
ááa b
$num
áác d
)
áád e
+
ááf g
$str
ááh r
+
áás t
actualFileLineááu É
.ááÉ Ñ
	SubstringááÑ ç
(ááç é
$numááé ê
,ááê ë
$numááí ì
)ááì î
+ááï ñ
Environmentááó ¢
.áá¢ £
NewLineáá£ ™
)áá™ ´
;áá´ ¨
}
àà 
if
ââ 
(
ââ 
expectedFileLine
ââ $
.
ââ$ %
	Substring
ââ% .
(
ââ. /
$num
ââ/ 1
,
ââ1 2
$num
ââ3 4
)
ââ4 5
!=
ââ6 8
actualFileLine
ââ9 G
.
ââG H
	Substring
ââH Q
(
ââQ R
$num
ââR T
,
ââT U
$num
ââV W
)
ââW X
)
ââX Y
{
ää 
	errorList
ãã 
.
ãã 
Add
ãã !
(
ãã! "
$str
ãã" I
+
ããJ K
expectedFileLine
ããL \
.
ãã\ ]
	Substring
ãã] f
(
ããf g
$num
ããg i
,
ããi j
$num
ããk l
)
ããl m
+
ããn o
$str
ããp z
+
ãã{ |
actualFileLineãã} ã
.ããã å
	Substringããå ï
(ããï ñ
$numããñ ò
,ããò ô
$numããö õ
)ããõ ú
+ããù û
Environmentããü ™
.ãã™ ´
NewLineãã´ ≤
)ãã≤ ≥
;ãã≥ ¥
}
åå 
if
çç 
(
çç 
expectedFileLine
çç $
.
çç$ %
	Substring
çç% .
(
çç. /
$num
çç/ 1
,
çç1 2
$num
çç3 4
)
çç4 5
!=
çç6 8
actualFileLine
çç9 G
.
ççG H
	Substring
ççH Q
(
ççQ R
$num
ççR T
,
ççT U
$num
ççV W
)
ççW X
)
ççX Y
{
éé 
	errorList
èè 
.
èè 
Add
èè !
(
èè! "
$str
èè" G
+
èèH I
expectedFileLine
èèJ Z
.
èèZ [
	Substring
èè[ d
(
èèd e
$num
èèe g
,
èèg h
$num
èèi j
)
èèj k
+
èèl m
$str
èèn x
+
èèy z
actualFileLineèè{ â
.èèâ ä
	Substringèèä ì
(èèì î
$numèèî ñ
,èèñ ó
$numèèò ô
)èèô ö
+èèõ ú
Environmentèèù ®
.èè® ©
NewLineèè© ∞
)èè∞ ±
;èè± ≤
}
ëë 
if
íí 
(
íí 
expectedFileLine
íí $
.
íí$ %
	Substring
íí% .
(
íí. /
$num
íí/ 1
,
íí1 2
$num
íí3 6
)
íí6 7
!=
íí8 :
actualFileLine
íí; I
.
ííI J
	Substring
ííJ S
(
ííS T
$num
ííT V
,
ííV W
$num
ííX [
)
íí[ \
)
íí\ ]
{
ìì 
	errorList
îî 
.
îî 
Add
îî !
(
îî! "
$str
îî" C
+
îîD E
expectedFileLine
îîF V
.
îîV W
	Substring
îîW `
(
îî` a
$num
îîa c
,
îîc d
$num
îîe h
)
îîh i
+
îîj k
$str
îîl v
+
îîw x
actualFileLineîîy á
.îîá à
	Substringîîà ë
(îîë í
$numîîí î
,îîî ï
$numîîñ ô
)îîô ö
+îîõ ú
Environmentîîù ®
.îî® ©
NewLineîî© ∞
)îî∞ ±
;îî± ≤
}
ïï 
if
ññ 
(
ññ 
expectedFileLine
ññ $
.
ññ$ %
	Substring
ññ% .
(
ññ. /
$num
ññ/ 2
,
ññ2 3
$num
ññ4 5
)
ññ5 6
!=
ññ7 9
actualFileLine
ññ: H
.
ññH I
	Substring
ññI R
(
ññR S
$num
ññS V
,
ññV W
$num
ññX Y
)
ññY Z
)
ññZ [
{
óó 
	errorList
òò 
.
òò 
Add
òò !
(
òò! "
$str
òò" K
+
òòL M
expectedFileLine
òòN ^
.
òò^ _
	Substring
òò_ h
(
òòh i
$num
òòi l
,
òòl m
$num
òòn o
)
òòo p
+
òòq r
$str
òòs }
+
òò~ 
actualFileLineòòÄ é
.òòé è
	Substringòòè ò
(òòò ô
$numòòô ú
,òòú ù
$numòòû ü
)òòü †
+òò° ¢
Environmentòò£ Æ
.òòÆ Ø
NewLineòòØ ∂
)òò∂ ∑
;òò∑ ∏
}
ôô 
if
öö 
(
öö 
expectedFileLine
öö $
.
öö$ %
	Substring
öö% .
(
öö. /
$num
öö/ 2
,
öö2 3
$num
öö4 5
)
öö5 6
!=
öö7 9
actualFileLine
öö: H
.
ööH I
	Substring
ööI R
(
ööR S
$num
ööS V
,
ööV W
$num
ööX Y
)
ööY Z
)
ööZ [
{
õõ 
	errorList
úú 
.
úú 
Add
úú !
(
úú! "
$str
úú" L
+
úúM N
expectedFileLine
úúO _
.
úú_ `
	Substring
úú` i
(
úúi j
$num
úúj m
,
úúm n
$num
úúo p
)
úúp q
+
úúr s
$str
úút ~
+úú Ä
actualFileLineúúÅ è
.úúè ê
	Substringúúê ô
(úúô ö
$numúúö ù
,úúù û
$numúúü †
)úú† °
+úú¢ £
Environmentúú§ Ø
.úúØ ∞
NewLineúú∞ ∑
)úú∑ ∏
;úú∏ π
}
ùù 
if
ûû 
(
ûû 
expectedFileLine
ûû $
.
ûû$ %
	Substring
ûû% .
(
ûû. /
$num
ûû/ 2
,
ûû2 3
$num
ûû4 5
)
ûû5 6
!=
ûû7 9
actualFileLine
ûû: H
.
ûûH I
	Substring
ûûI R
(
ûûR S
$num
ûûS V
,
ûûV W
$num
ûûX Y
)
ûûY Z
)
ûûZ [
{
üü 
	errorList
†† 
.
†† 
Add
†† !
(
††! "
$str
††" D
+
††E F
expectedFileLine
††G W
.
††W X
	Substring
††X a
(
††a b
$num
††b e
,
††e f
$num
††g h
)
††h i
+
††j k
$str
††l v
+
††w x
actualFileLine††y á
.††á à
	Substring††à ë
(††ë í
$num††í ï
,††ï ñ
$num††ó ò
)††ò ô
+††ö õ
Environment††ú ß
.††ß ®
NewLine††® Ø
)††Ø ∞
;††∞ ±
}
°° 
if
¢¢ 
(
¢¢ 
expectedFileLine
¢¢ $
.
¢¢$ %
	Substring
¢¢% .
(
¢¢. /
$num
¢¢/ 2
,
¢¢2 3
$num
¢¢4 5
)
¢¢5 6
!=
¢¢7 9
actualFileLine
¢¢: H
.
¢¢H I
	Substring
¢¢I R
(
¢¢R S
$num
¢¢S V
,
¢¢V W
$num
¢¢X Y
)
¢¢Y Z
)
¢¢Z [
{
££ 
	errorList
§§ 
.
§§ 
Add
§§ !
(
§§! "
$str
§§" A
+
§§B C
expectedFileLine
§§D T
.
§§T U
	Substring
§§U ^
(
§§^ _
$num
§§_ b
,
§§b c
$num
§§d e
)
§§e f
+
§§g h
$str
§§i s
+
§§t u
actualFileLine§§v Ñ
.§§Ñ Ö
	Substring§§Ö é
(§§é è
$num§§è í
,§§í ì
$num§§î ï
)§§ï ñ
+§§ó ò
Environment§§ô §
.§§§ •
NewLine§§• ¨
)§§¨ ≠
;§§≠ Æ
}
•• 
if
¶¶ 
(
¶¶ 
expectedFileLine
¶¶ $
.
¶¶$ %
	Substring
¶¶% .
(
¶¶. /
$num
¶¶/ 2
,
¶¶2 3
$num
¶¶4 5
)
¶¶5 6
!=
¶¶7 9
actualFileLine
¶¶: H
.
¶¶H I
	Substring
¶¶I R
(
¶¶R S
$num
¶¶S V
,
¶¶V W
$num
¶¶X Y
)
¶¶Y Z
)
¶¶Z [
{
ßß 
	errorList
®® 
.
®® 
Add
®® !
(
®®! "
$str
®®" H
+
®®I J
expectedFileLine
®®K [
.
®®[ \
	Substring
®®\ e
(
®®e f
$num
®®f i
,
®®i j
$num
®®k l
)
®®l m
+
®®n o
$str
®®p z
+
®®{ |
actualFileLine®®} ã
.®®ã å
	Substring®®å ï
(®®ï ñ
$num®®ñ ô
,®®ô ö
$num®®õ ú
)®®ú ù
+®®û ü
Environment®®† ´
.®®´ ¨
NewLine®®¨ ≥
)®®≥ ¥
;®®¥ µ
}
©© 
if
™™ 
(
™™ 
expectedFileLine
™™ $
.
™™$ %
	Substring
™™% .
(
™™. /
$num
™™/ 2
,
™™2 3
$num
™™4 5
)
™™5 6
!=
™™7 9
actualFileLine
™™: H
.
™™H I
	Substring
™™I R
(
™™R S
$num
™™S V
,
™™V W
$num
™™X Y
)
™™Y Z
)
™™Z [
{
´´ 
	errorList
¨¨ 
.
¨¨ 
Add
¨¨ !
(
¨¨! "
$str
¨¨" G
+
¨¨H I
expectedFileLine
¨¨J Z
.
¨¨Z [
	Substring
¨¨[ d
(
¨¨d e
$num
¨¨e h
,
¨¨h i
$num
¨¨j k
)
¨¨k l
+
¨¨m n
$str
¨¨o y
+
¨¨z {
actualFileLine¨¨| ä
.¨¨ä ã
	Substring¨¨ã î
(¨¨î ï
$num¨¨ï ò
,¨¨ò ô
$num¨¨ö õ
)¨¨õ ú
+¨¨ù û
Environment¨¨ü ™
.¨¨™ ´
NewLine¨¨´ ≤
)¨¨≤ ≥
;¨¨≥ ¥
}
≠≠ 
if
ÆÆ 
(
ÆÆ 
expectedFileLine
ÆÆ $
.
ÆÆ$ %
	Substring
ÆÆ% .
(
ÆÆ. /
$num
ÆÆ/ 2
,
ÆÆ2 3
$num
ÆÆ4 5
)
ÆÆ5 6
!=
ÆÆ7 9
actualFileLine
ÆÆ: H
.
ÆÆH I
	Substring
ÆÆI R
(
ÆÆR S
$num
ÆÆS V
,
ÆÆV W
$num
ÆÆX Y
)
ÆÆY Z
)
ÆÆZ [
{
ØØ 
	errorList
∞∞ 
.
∞∞ 
Add
∞∞ !
(
∞∞! "
$str
∞∞" G
+
∞∞H I
expectedFileLine
∞∞J Z
.
∞∞Z [
	Substring
∞∞[ d
(
∞∞d e
$num
∞∞e h
,
∞∞h i
$num
∞∞j k
)
∞∞k l
+
∞∞m n
$str
∞∞o y
+
∞∞z {
actualFileLine∞∞| ä
.∞∞ä ã
	Substring∞∞ã î
(∞∞î ï
$num∞∞ï ò
,∞∞ò ô
$num∞∞ö õ
)∞∞õ ú
+∞∞ù û
Environment∞∞ü ™
.∞∞™ ´
NewLine∞∞´ ≤
)∞∞≤ ≥
;∞∞≥ ¥
}
±± 
if
≤≤ 
(
≤≤ 
expectedFileLine
≤≤ $
.
≤≤$ %
	Substring
≤≤% .
(
≤≤. /
$num
≤≤/ 2
,
≤≤2 3
$num
≤≤4 7
)
≤≤7 8
!=
≤≤9 ;
actualFileLine
≤≤< J
.
≤≤J K
	Substring
≤≤K T
(
≤≤T U
$num
≤≤U X
,
≤≤X Y
$num
≤≤Z ]
)
≤≤] ^
)
≤≤^ _
{
≥≥ 
	errorList
¥¥ 
.
¥¥ 
Add
¥¥ !
(
¥¥! "
$str
¥¥" B
+
¥¥C D
expectedFileLine
¥¥E U
.
¥¥U V
	Substring
¥¥V _
(
¥¥_ `
$num
¥¥` c
,
¥¥c d
$num
¥¥e h
)
¥¥h i
+
¥¥j k
$str
¥¥l v
+
¥¥w x
actualFileLine¥¥y á
.¥¥á à
	Substring¥¥à ë
(¥¥ë í
$num¥¥í ï
,¥¥ï ñ
$num¥¥ó ö
)¥¥ö õ
+¥¥ú ù
Environment¥¥û ©
.¥¥© ™
NewLine¥¥™ ±
)¥¥± ≤
;¥¥≤ ≥
}
µµ 
if
∑∑ 
(
∑∑ 
	errorList
∑∑ 
.
∑∑ 
Any
∑∑ !
(
∑∑! "
)
∑∑" #
)
∑∑# $
{
∏∏ 
if
ππ 
(
ππ 
	errorList
ππ !
.
ππ! "
Any
ππ" %
(
ππ% &
)
ππ& '
)
ππ' (
{
∫∫ 
	errorList
ªª !
.
ªª! "
Insert
ªª" (
(
ªª( )
$num
ªª) *
,
ªª* +
$str
ªª, Q
+
ªªR S
Environment
ªªT _
.
ªª_ `
NewLine
ªª` g
)
ªªg h
;
ªªh i
}
ºº 
File
ΩΩ 
.
ΩΩ 
AppendAllText
ΩΩ &
(
ΩΩ& '"
ApplicationConstants
ΩΩ' ;
.
ΩΩ; <
LOG_FILE
ΩΩ< D
,
ΩΩD E
$str
ΩΩF k
+
ΩΩl m
Environment
ΩΩn y
.
ΩΩy z
NewLineΩΩz Å
)ΩΩÅ Ç
;ΩΩÇ É
File
ææ 
.
ææ 
AppendAllText
ææ &
(
ææ& '"
ApplicationConstants
ææ' ;
.
ææ; <
LOG_FILE
ææ< D
,
ææD E
$str
ææF Y
+
ææZ [
expectedFileLine
ææ\ l
+
ææm n
Environment
ææo z
.
ææz {
NewLineææ{ Ç
)ææÇ É
;ææÉ Ñ
File
øø 
.
øø 
AppendAllText
øø &
(
øø& '"
ApplicationConstants
øø' ;
.
øø; <
LOG_FILE
øø< D
,
øøD E
$str
øøF W
+
øøX Y
actualFileLine
øøZ h
+
øøi j
Environment
øøk v
.
øøv w
NewLine
øøw ~
)
øø~ 
;øø Ä
File
¿¿ 
.
¿¿ 
AppendAllText
¿¿ &
(
¿¿& '"
ApplicationConstants
¿¿' ;
.
¿¿; <
LOG_FILE
¿¿< D
,
¿¿D E
string
¿¿F L
.
¿¿L M
Join
¿¿M Q
(
¿¿Q R
$str
¿¿R U
,
¿¿U V
	errorList
¿¿W `
)
¿¿` a
)
¿¿a b
;
¿¿b c
return
¡¡ 
false
¡¡  
;
¡¡  !
}
¬¬ 
else
√√ 
{
ƒƒ 
return
≈≈ 
true
≈≈ 
;
≈≈  
}
∆∆ 
}
«« 
catch
»» 
(
»» 
	Exception
»» 
)
»» 
{
…… 
throw
   
;
   
}
ÀÀ 
}
ÃÃ 	
}
ŒŒ 
}œœ ›,
LC:\SonarTestRepo\sonartestapp\ShipmentTest\constants\ApplicationConstants.cs
	namespace 	
Delivery
 
. %
DESADVAdaptorsParallelRun ,
., -
IntgTest- 5
.5 6
	constants6 ?
{ 
public 

static 
class  
ApplicationConstants ,
{ 
public		 
const		 
string		 $
EXPECTED_FILES_CONTAINER		 5
=		6 7
$str		8 F
;		F G
public

 
const

 
string

 "
Actual_FILES_CONTAINER

 2
=

3 4
$str

5 C
;

C D
public 
const 
string #
AZURE_CONNECTION_STRING 3
=4 5
$str6 8
;8 9
public 
const 
string 
Actual_FILES_PATH .
=/ 0
$"1 3
"3 4
;4 5
public 
const 
string 
EXPECTED_FILES_PATH 0
=1 2
$str3 5
;5 6
public 
static 
string 
	BASE_PATH &
=' (
GetTestFilePath) 8
(8 9
$str9 C
,C D
$strE G
)G H
;H I
public 
static 
string $
LOCAL_EXPECTED_FILE_PATH 6
=7 8
Path9 =
.= >
Combine> E
(E F
	BASE_PATHF O
,O P
$strQ c
)c d
;d e
public 
static 
string /
#LOCAL_COMPRESSED_EXPECTED_FILE_PATH @
=A B
PathC G
.G H
CombineH O
(O P
	BASE_PATHP Y
,Y Z
$str[ i
)i j
;j k
public 
static 
string 1
%LOCAL_UNCOMPRESSED_EXPECTED_FILE_PATH B
=C D
PathE I
.I J
CombineJ Q
(Q R
	BASE_PATHR [
,[ \
$str] m
)m n
;n o
public 
static 
string "
LOCAL_ACTUAL_FILE_PATH 4
=5 6
Path7 ;
.; <
Combine< C
(C D
	BASE_PATHD M
,M N
$strO _
)_ `
;` a
public 
static 
readonly 
string %
LOG_FILE& .
=/ 0
Path1 5
.5 6
Combine6 =
(= >
	BASE_PATH> G
,G H
$"I K
$strK h
{h i
DateTimei q
.q r
UtcNowr x
.x y
ToString	y Å
(
Å Ç
$str
Ç é
)
é è
}
è ê
$str
ê î
"
î ï
)
ï ñ
;
ñ ó
public 
static 
readonly 
string %

LOG_FOLDER& 0
=1 2
Path3 7
.7 8
Combine8 ?
(? @
	BASE_PATH@ I
,I J
$strK R
)R S
;S T
public 
static 
string 
GetTestFilePath ,
(, -
string- 3

folderName4 >
,> ?
string@ F
fileNameG O
)O P
{ 	
try 
{ 
string 
startupPath "
=# $
	AppDomain% .
.. /
CurrentDomain/ <
.< =
BaseDirectory= J
;J K
var 
	pathItems 
= 
startupPath  +
.+ ,
Split, 1
(1 2
Path2 6
.6 7"
DirectorySeparatorChar7 M
)M N
;N O
var 
pos 
= 
	pathItems #
.# $
Reverse$ +
(+ ,
), -
.- .
ToList. 4
(4 5
)5 6
.6 7
	FindIndex7 @
(@ A
xA B
=>C E
stringF L
.L M
EqualsM S
(S T
$strT Y
,Y Z
x[ \
)\ ]
)] ^
;^ _
string 
projectPath "
=# $
String% +
.+ ,
Join, 0
(0 1
Path1 5
.5 6"
DirectorySeparatorChar6 L
.L M
ToStringM U
(U V
)V W
,W X
	pathItemsY b
.b c
Takec g
(g h
	pathItemsh q
.q r
Lengthr x
-y z
pos{ ~
-	 Ä
$num
Å Ç
)
Ç É
)
É Ñ
;
Ñ Ö
string 
filepath 
=  !
Path" &
.& '
Combine' .
(. /
projectPath/ :
,: ;

folderName< F
,F G
fileNameH P
)P Q
;Q R
Console   
.   
	WriteLine   !
(  ! "
$str  " .
+  / 0
filepath  1 9
)  9 :
;  : ;
return!! 
filepath!! 
;!!  
}"" 
catch## 
(## 
	Exception## 
ex## 
)##  
{$$ 
Console%% 
.%% 
	WriteLine%% !
(%%! "
$str%%" L
+%%M N
ex%%O Q
.%%Q R
Message%%R Y
)%%Y Z
;%%Z [
throw&& 
;&& 
}'' 
}(( 	
}** 
}++ ˚
BC:\SonarTestRepo\sonartestapp\ShipmentTest\constants\RecordType.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
.1 2
	constants2 ;
{ 
public		 

enum		 

RecordType		 
{

 
POHEADER 
, 
PODETAIL 
, 
DUHEADER 
, 
DETAIL 
, 

FILEHEADER 
, 

FILEFOOTER 
} 
} ˆ
CC:\SonarTestRepo\sonartestapp\ShipmentTest\HouseKeep\HouseKeeper.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
.1 2
	HouseKeep2 ;
{ 
public 

class 
HouseKeeper 
: 
IHouseKeeper )
{ 
public 
HouseKeeper 
( 
) 
{ 
}

 	
public 
void 
DeleteFiles 
(  
)  !
{" #
if 
( 
	Directory 
. 
Exists  
(  ! 
ApplicationConstants! 5
.5 6$
LOCAL_EXPECTED_FILE_PATH6 N
)N O
)O P
{ 
	Directory 
. 
Delete  
(  ! 
ApplicationConstants! 5
.5 6$
LOCAL_EXPECTED_FILE_PATH6 N
,N O
trueP T
)T U
;U V
	Directory 
. 
CreateDirectory )
() * 
ApplicationConstants* >
.> ?$
LOCAL_EXPECTED_FILE_PATH? W
)W X
;X Y
} 
if 
( 
	Directory 
. 
Exists  
(  ! 
ApplicationConstants! 5
.5 6"
LOCAL_ACTUAL_FILE_PATH6 L
)L M
)M N
{ 
	Directory 
. 
Delete  
(  ! 
ApplicationConstants! 5
.5 6"
LOCAL_ACTUAL_FILE_PATH6 L
,L M
trueN R
)R S
;S T
	Directory 
. 
CreateDirectory )
() * 
ApplicationConstants* >
.> ?"
LOCAL_ACTUAL_FILE_PATH? U
)U V
;V W
} 
} 	
} 
} ≥
DC:\SonarTestRepo\sonartestapp\ShipmentTest\HouseKeep\IHouseKeeper.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
.1 2
	HouseKeep2 ;
{ 
public 

	interface 
IHouseKeeper !
{ 
} 
} ÷
5C:\SonarTestRepo\sonartestapp\ShipmentTest\Startup.cs
	namespace 	3
'lsp_delivery_tricepsadaptor_parallelrun
 1
{ 
public 

class 
Startup 
{ 
static		 
string		 
depot		 
=		 
$str		 $
;		$ %
public

 
static

 
void

 
Main

 
(

  
string

  &
[

& '
]

' (
args

) -
)

- .
{ 	
Console 
. 
	WriteLine 
( 
$str $
)$ %
;% &
new !
TricepsFileDownloader %
(% &
)& '
.' ( 
ExtractExpectedFiles( <
(< =
)= >
;> ?
} 	
} 
} 